Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BARN
    BEGIN
    BREAK
    CLASS
    CLOSEKEY
    COMMENT
    COMMENTMULTI
    ELSIF
    FALSE
    FOR
    ID_CLASS
    ID_GLOBAL
    ID_INSTANCE
    IN
    MODULE
    NAME
    NEW
    NIL
    NOT
    OPENKEY
    OR
    PONTO
    SELF
    SUPER
    TRUE

Grammar

Rule 0     S' -> program
Rule 1     program -> funcdecl
Rule 2     program -> funcdecl program
Rule 3     program -> stm
Rule 4     program -> stm program
Rule 5     program -> call
Rule 6     funcdecl -> signature body
Rule 7     signature -> DEF ID
Rule 8     body -> stms END
Rule 9     stms -> stm
Rule 10    stms -> stm stms
Rule 11    stm -> exp
Rule 12    stm -> exp PONTOVIRGULA
Rule 13    stm -> s
Rule 14    s -> s1
Rule 15    s -> s2
Rule 16    s1 -> stms
Rule 17    s1 -> IF LPAREN exp RPAREN s1 ELSE s1
Rule 18    s1 -> IF LPAREN exp RPAREN body ELSE body
Rule 19    s1 -> IF LPAREN exp RPAREN s1 ELSE body
Rule 20    s1 -> IF LPAREN exp RPAREN body ELSE s1
Rule 21    s2 -> IF LPAREN exp RPAREN s1 ELSE s1
Rule 22    s1 -> IF LPAREN exp RPAREN body
Rule 23    s1 -> IF LPAREN exp RPAREN s1 ELSE s2
Rule 24    s1 -> IF LPAREN exp RPAREN body ELSE s2
Rule 25    s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s1
Rule 26    s1 -> IF LPAREN exp RPAREN THEN body ELSE body
Rule 27    s1 -> IF LPAREN exp RPAREN THEN s1 ELSE body
Rule 28    s1 -> IF LPAREN exp RPAREN THEN body ELSE s1
Rule 29    s2 -> IF LPAREN exp RPAREN THEN s1 ELSE s1
Rule 30    s1 -> IF LPAREN exp RPAREN THEN body
Rule 31    s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s2
Rule 32    s1 -> IF LPAREN exp RPAREN THEN body ELSE s2
Rule 33    s1 -> IF exp s1 ELSE s1
Rule 34    s1 -> IF exp body ELSE body
Rule 35    s1 -> IF exp s1 ELSE body
Rule 36    s1 -> IF exp body ELSE s1
Rule 37    s2 -> IF exp s1 ELSE s1
Rule 38    s1 -> IF exp body
Rule 39    s1 -> IF exp body ELSE s2
Rule 40    s1 -> IF exp THEN s1 ELSE s1
Rule 41    s1 -> IF exp THEN body ELSE body
Rule 42    s1 -> IF exp THEN s1 ELSE body
Rule 43    s1 -> IF exp THEN body ELSE s1
Rule 44    s2 -> IF exp THEN s2 ELSE s2
Rule 45    s1 -> IF exp THEN body
Rule 46    s1 -> IF exp THEN s1 ELSE s2
Rule 47    s1 -> IF exp THEN body ELSE s2
Rule 48    stm -> WHILE exp body
Rule 49    stm -> WHILE exp DO body
Rule 50    stm -> RETURN exp
Rule 51    stm -> RETURN exp PONTOVIRGULA
Rule 52    exp -> exp PLUS exp
Rule 53    exp -> exp MINUS exp
Rule 54    exp -> exp TIMES exp
Rule 55    exp -> exp DIV exp
Rule 56    exp -> exp EXPO exp
Rule 57    exp -> exp REST exp
Rule 58    exp -> exp TRIPLEEQ exp
Rule 59    exp -> exp SMALL exp
Rule 60    exp -> exp BIGGEST exp
Rule 61    exp -> exp DIFF exp
Rule 62    exp -> exp POINTRANGE exp
Rule 63    exp -> exp SMALLEQ exp
Rule 64    exp -> exp BIGGESTEQ exp
Rule 65    exp -> exp BIGGSMALLEQ exp
Rule 66    exp -> exp DOUBLEBAR exp
Rule 67    exp -> exp DOUBLEE exp
Rule 68    exp -> exp EXCLAMATION exp
Rule 69    exp -> exp SIMPLEBAR exp
Rule 70    exp -> exp SIMPLEE exp
Rule 71    exp -> exp CIRCUMFLEX exp
Rule 72    exp -> exp NEGATION exp
Rule 73    exp -> exp LSHIFT exp
Rule 74    exp -> exp RSHIFT exp
Rule 75    exp -> call
Rule 76    exp -> assign
Rule 77    exp -> NUMBER
Rule 78    exp -> STRING
Rule 79    exp -> ID
Rule 80    exp -> exp DOUBLEEQUAL exp
Rule 81    assign -> ID EQ exp
Rule 82    call -> ID LPAREN params RPAREN
Rule 83    call -> ID LPAREN RPAREN
Rule 84    params -> exp VIRGULA params
Rule 85    params -> exp

Terminals, with rules where they appear

AND                  : 
BARN                 : 
BEGIN                : 
BIGGEST              : 60
BIGGESTEQ            : 64
BIGGSMALLEQ          : 65
BREAK                : 
CIRCUMFLEX           : 71
CLASS                : 
CLOSEKEY             : 
COMMENT              : 
COMMENTMULTI         : 
DEF                  : 7
DIFF                 : 61
DIV                  : 55
DO                   : 49
DOUBLEBAR            : 66
DOUBLEE              : 67
DOUBLEEQUAL          : 80
ELSE                 : 17 18 19 20 21 23 24 25 26 27 28 29 31 32 33 34 35 36 37 39 40 41 42 43 44 46 47
ELSIF                : 
END                  : 8
EQ                   : 81
EXCLAMATION          : 68
EXPO                 : 56
FALSE                : 
FOR                  : 
ID                   : 7 79 81 82 83
ID_CLASS             : 
ID_GLOBAL            : 
ID_INSTANCE          : 
IF                   : 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47
IN                   : 
LPAREN               : 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 82 83
LSHIFT               : 73
MINUS                : 53
MODULE               : 
NAME                 : 
NEGATION             : 72
NEW                  : 
NIL                  : 
NOT                  : 
NUMBER               : 77
OPENKEY              : 
OR                   : 
PLUS                 : 52
POINTRANGE           : 62
PONTO                : 
PONTOVIRGULA         : 12 51
REST                 : 57
RETURN               : 50 51
RPAREN               : 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 82 83
RSHIFT               : 74
SELF                 : 
SIMPLEBAR            : 69
SIMPLEE              : 70
SMALL                : 59
SMALLEQ              : 63
STRING               : 78
SUPER                : 
THEN                 : 25 26 27 28 29 30 31 32 40 41 42 43 44 45 46 47
TIMES                : 54
TRIPLEEQ             : 58
TRUE                 : 
VIRGULA              : 84
WHILE                : 48 49
error                : 

Nonterminals, with rules where they appear

assign               : 76
body                 : 6 18 18 19 20 22 24 26 26 27 28 30 32 34 34 35 36 38 39 41 41 42 43 45 47 48 49
call                 : 5 75
exp                  : 11 12 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 52 53 53 54 54 55 55 56 56 57 57 58 58 59 59 60 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68 68 69 69 70 70 71 71 72 72 73 73 74 74 80 80 81 84 85
funcdecl             : 1 2
params               : 82 84
program              : 2 4 0
s                    : 13
s1                   : 14 17 17 19 20 21 21 23 25 25 27 28 29 29 31 33 33 35 36 37 37 40 40 42 43 46
s2                   : 15 23 24 31 32 39 44 44 46 47
signature            : 6
stm                  : 3 4 9 10
stms                 : 8 10 16

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . funcdecl
    (2) program -> . funcdecl program
    (3) program -> . stm
    (4) program -> . stm program
    (5) program -> . call
    (6) funcdecl -> . signature body
    (11) stm -> . exp
    (12) stm -> . exp PONTOVIRGULA
    (13) stm -> . s
    (48) stm -> . WHILE exp body
    (49) stm -> . WHILE exp DO body
    (50) stm -> . RETURN exp
    (51) stm -> . RETURN exp PONTOVIRGULA
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (7) signature -> . DEF ID
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (14) s -> . s1
    (15) s -> . s2
    (81) assign -> . ID EQ exp
    (16) s1 -> . stms
    (17) s1 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (18) s1 -> . IF LPAREN exp RPAREN body ELSE body
    (19) s1 -> . IF LPAREN exp RPAREN s1 ELSE body
    (20) s1 -> . IF LPAREN exp RPAREN body ELSE s1
    (22) s1 -> . IF LPAREN exp RPAREN body
    (23) s1 -> . IF LPAREN exp RPAREN s1 ELSE s2
    (24) s1 -> . IF LPAREN exp RPAREN body ELSE s2
    (25) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (26) s1 -> . IF LPAREN exp RPAREN THEN body ELSE body
    (27) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE body
    (28) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s1
    (30) s1 -> . IF LPAREN exp RPAREN THEN body
    (31) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s2
    (32) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s2
    (33) s1 -> . IF exp s1 ELSE s1
    (34) s1 -> . IF exp body ELSE body
    (35) s1 -> . IF exp s1 ELSE body
    (36) s1 -> . IF exp body ELSE s1
    (38) s1 -> . IF exp body
    (39) s1 -> . IF exp body ELSE s2
    (40) s1 -> . IF exp THEN s1 ELSE s1
    (41) s1 -> . IF exp THEN body ELSE body
    (42) s1 -> . IF exp THEN s1 ELSE body
    (43) s1 -> . IF exp THEN body ELSE s1
    (45) s1 -> . IF exp THEN body
    (46) s1 -> . IF exp THEN s1 ELSE s2
    (47) s1 -> . IF exp THEN body ELSE s2
    (21) s2 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (29) s2 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (37) s2 -> . IF exp s1 ELSE s1
    (44) s2 -> . IF exp THEN s2 ELSE s2
    (9) stms -> . stm
    (10) stms -> . stm stms

    WHILE           shift and go to state 8
    RETURN          shift and go to state 9
    ID              shift and go to state 10
    DEF             shift and go to state 11
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    IF              shift and go to state 18

    program                        shift and go to state 1
    funcdecl                       shift and go to state 2
    stm                            shift and go to state 3
    call                           shift and go to state 4
    signature                      shift and go to state 5
    exp                            shift and go to state 6
    s                              shift and go to state 7
    assign                         shift and go to state 12
    s1                             shift and go to state 15
    s2                             shift and go to state 16
    stms                           shift and go to state 17

state 1

    (0) S' -> program .



state 2

    (1) program -> funcdecl .
    (2) program -> funcdecl . program
    (1) program -> . funcdecl
    (2) program -> . funcdecl program
    (3) program -> . stm
    (4) program -> . stm program
    (5) program -> . call
    (6) funcdecl -> . signature body
    (11) stm -> . exp
    (12) stm -> . exp PONTOVIRGULA
    (13) stm -> . s
    (48) stm -> . WHILE exp body
    (49) stm -> . WHILE exp DO body
    (50) stm -> . RETURN exp
    (51) stm -> . RETURN exp PONTOVIRGULA
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (7) signature -> . DEF ID
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (14) s -> . s1
    (15) s -> . s2
    (81) assign -> . ID EQ exp
    (16) s1 -> . stms
    (17) s1 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (18) s1 -> . IF LPAREN exp RPAREN body ELSE body
    (19) s1 -> . IF LPAREN exp RPAREN s1 ELSE body
    (20) s1 -> . IF LPAREN exp RPAREN body ELSE s1
    (22) s1 -> . IF LPAREN exp RPAREN body
    (23) s1 -> . IF LPAREN exp RPAREN s1 ELSE s2
    (24) s1 -> . IF LPAREN exp RPAREN body ELSE s2
    (25) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (26) s1 -> . IF LPAREN exp RPAREN THEN body ELSE body
    (27) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE body
    (28) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s1
    (30) s1 -> . IF LPAREN exp RPAREN THEN body
    (31) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s2
    (32) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s2
    (33) s1 -> . IF exp s1 ELSE s1
    (34) s1 -> . IF exp body ELSE body
    (35) s1 -> . IF exp s1 ELSE body
    (36) s1 -> . IF exp body ELSE s1
    (38) s1 -> . IF exp body
    (39) s1 -> . IF exp body ELSE s2
    (40) s1 -> . IF exp THEN s1 ELSE s1
    (41) s1 -> . IF exp THEN body ELSE body
    (42) s1 -> . IF exp THEN s1 ELSE body
    (43) s1 -> . IF exp THEN body ELSE s1
    (45) s1 -> . IF exp THEN body
    (46) s1 -> . IF exp THEN s1 ELSE s2
    (47) s1 -> . IF exp THEN body ELSE s2
    (21) s2 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (29) s2 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (37) s2 -> . IF exp s1 ELSE s1
    (44) s2 -> . IF exp THEN s2 ELSE s2
    (9) stms -> . stm
    (10) stms -> . stm stms

    $end            reduce using rule 1 (program -> funcdecl .)
    WHILE           shift and go to state 8
    RETURN          shift and go to state 9
    ID              shift and go to state 10
    DEF             shift and go to state 11
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    IF              shift and go to state 18

    funcdecl                       shift and go to state 2
    program                        shift and go to state 19
    stm                            shift and go to state 3
    call                           shift and go to state 4
    signature                      shift and go to state 5
    exp                            shift and go to state 6
    s                              shift and go to state 7
    assign                         shift and go to state 12
    s1                             shift and go to state 15
    s2                             shift and go to state 16
    stms                           shift and go to state 17

state 3

    (3) program -> stm .
    (4) program -> stm . program
    (9) stms -> stm .
    (10) stms -> stm . stms
    (1) program -> . funcdecl
    (2) program -> . funcdecl program
    (3) program -> . stm
    (4) program -> . stm program
    (5) program -> . call
    (9) stms -> . stm
    (10) stms -> . stm stms
    (6) funcdecl -> . signature body
    (11) stm -> . exp
    (12) stm -> . exp PONTOVIRGULA
    (13) stm -> . s
    (48) stm -> . WHILE exp body
    (49) stm -> . WHILE exp DO body
    (50) stm -> . RETURN exp
    (51) stm -> . RETURN exp PONTOVIRGULA
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (7) signature -> . DEF ID
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (14) s -> . s1
    (15) s -> . s2
    (81) assign -> . ID EQ exp
    (16) s1 -> . stms
    (17) s1 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (18) s1 -> . IF LPAREN exp RPAREN body ELSE body
    (19) s1 -> . IF LPAREN exp RPAREN s1 ELSE body
    (20) s1 -> . IF LPAREN exp RPAREN body ELSE s1
    (22) s1 -> . IF LPAREN exp RPAREN body
    (23) s1 -> . IF LPAREN exp RPAREN s1 ELSE s2
    (24) s1 -> . IF LPAREN exp RPAREN body ELSE s2
    (25) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (26) s1 -> . IF LPAREN exp RPAREN THEN body ELSE body
    (27) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE body
    (28) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s1
    (30) s1 -> . IF LPAREN exp RPAREN THEN body
    (31) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s2
    (32) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s2
    (33) s1 -> . IF exp s1 ELSE s1
    (34) s1 -> . IF exp body ELSE body
    (35) s1 -> . IF exp s1 ELSE body
    (36) s1 -> . IF exp body ELSE s1
    (38) s1 -> . IF exp body
    (39) s1 -> . IF exp body ELSE s2
    (40) s1 -> . IF exp THEN s1 ELSE s1
    (41) s1 -> . IF exp THEN body ELSE body
    (42) s1 -> . IF exp THEN s1 ELSE body
    (43) s1 -> . IF exp THEN body ELSE s1
    (45) s1 -> . IF exp THEN body
    (46) s1 -> . IF exp THEN s1 ELSE s2
    (47) s1 -> . IF exp THEN body ELSE s2
    (21) s2 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (29) s2 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (37) s2 -> . IF exp s1 ELSE s1
    (44) s2 -> . IF exp THEN s2 ELSE s2

  ! reduce/reduce conflict for $end resolved using rule 3 (program -> stm .)
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    $end            reduce using rule 3 (program -> stm .)
    WHILE           shift and go to state 8
    RETURN          shift and go to state 9
    ID              shift and go to state 10
    DEF             shift and go to state 11
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    IF              shift and go to state 18

  ! WHILE           [ reduce using rule 9 (stms -> stm .) ]
  ! RETURN          [ reduce using rule 9 (stms -> stm .) ]
  ! ID              [ reduce using rule 9 (stms -> stm .) ]
  ! DEF             [ reduce using rule 9 (stms -> stm .) ]
  ! NUMBER          [ reduce using rule 9 (stms -> stm .) ]
  ! STRING          [ reduce using rule 9 (stms -> stm .) ]
  ! IF              [ reduce using rule 9 (stms -> stm .) ]
  ! $end            [ reduce using rule 9 (stms -> stm .) ]

    stm                            shift and go to state 3
    program                        shift and go to state 20
    stms                           shift and go to state 21
    funcdecl                       shift and go to state 2
    call                           shift and go to state 4
    signature                      shift and go to state 5
    exp                            shift and go to state 6
    s                              shift and go to state 7
    assign                         shift and go to state 12
    s1                             shift and go to state 15
    s2                             shift and go to state 16

state 4

    (5) program -> call .
    (75) exp -> call .

  ! reduce/reduce conflict for $end resolved using rule 5 (program -> call .)
    $end            reduce using rule 5 (program -> call .)
    PONTOVIRGULA    reduce using rule 75 (exp -> call .)
    PLUS            reduce using rule 75 (exp -> call .)
    MINUS           reduce using rule 75 (exp -> call .)
    TIMES           reduce using rule 75 (exp -> call .)
    DIV             reduce using rule 75 (exp -> call .)
    EXPO            reduce using rule 75 (exp -> call .)
    REST            reduce using rule 75 (exp -> call .)
    TRIPLEEQ        reduce using rule 75 (exp -> call .)
    SMALL           reduce using rule 75 (exp -> call .)
    BIGGEST         reduce using rule 75 (exp -> call .)
    DIFF            reduce using rule 75 (exp -> call .)
    POINTRANGE      reduce using rule 75 (exp -> call .)
    SMALLEQ         reduce using rule 75 (exp -> call .)
    BIGGESTEQ       reduce using rule 75 (exp -> call .)
    BIGGSMALLEQ     reduce using rule 75 (exp -> call .)
    DOUBLEBAR       reduce using rule 75 (exp -> call .)
    DOUBLEE         reduce using rule 75 (exp -> call .)
    EXCLAMATION     reduce using rule 75 (exp -> call .)
    SIMPLEBAR       reduce using rule 75 (exp -> call .)
    SIMPLEE         reduce using rule 75 (exp -> call .)
    CIRCUMFLEX      reduce using rule 75 (exp -> call .)
    NEGATION        reduce using rule 75 (exp -> call .)
    LSHIFT          reduce using rule 75 (exp -> call .)
    RSHIFT          reduce using rule 75 (exp -> call .)
    DOUBLEEQUAL     reduce using rule 75 (exp -> call .)
    WHILE           reduce using rule 75 (exp -> call .)
    RETURN          reduce using rule 75 (exp -> call .)
    ID              reduce using rule 75 (exp -> call .)
    DEF             reduce using rule 75 (exp -> call .)
    NUMBER          reduce using rule 75 (exp -> call .)
    STRING          reduce using rule 75 (exp -> call .)
    IF              reduce using rule 75 (exp -> call .)

  ! $end            [ reduce using rule 75 (exp -> call .) ]


state 5

    (6) funcdecl -> signature . body
    (8) body -> . stms END
    (9) stms -> . stm
    (10) stms -> . stm stms
    (11) stm -> . exp
    (12) stm -> . exp PONTOVIRGULA
    (13) stm -> . s
    (48) stm -> . WHILE exp body
    (49) stm -> . WHILE exp DO body
    (50) stm -> . RETURN exp
    (51) stm -> . RETURN exp PONTOVIRGULA
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (14) s -> . s1
    (15) s -> . s2
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp
    (16) s1 -> . stms
    (17) s1 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (18) s1 -> . IF LPAREN exp RPAREN body ELSE body
    (19) s1 -> . IF LPAREN exp RPAREN s1 ELSE body
    (20) s1 -> . IF LPAREN exp RPAREN body ELSE s1
    (22) s1 -> . IF LPAREN exp RPAREN body
    (23) s1 -> . IF LPAREN exp RPAREN s1 ELSE s2
    (24) s1 -> . IF LPAREN exp RPAREN body ELSE s2
    (25) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (26) s1 -> . IF LPAREN exp RPAREN THEN body ELSE body
    (27) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE body
    (28) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s1
    (30) s1 -> . IF LPAREN exp RPAREN THEN body
    (31) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s2
    (32) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s2
    (33) s1 -> . IF exp s1 ELSE s1
    (34) s1 -> . IF exp body ELSE body
    (35) s1 -> . IF exp s1 ELSE body
    (36) s1 -> . IF exp body ELSE s1
    (38) s1 -> . IF exp body
    (39) s1 -> . IF exp body ELSE s2
    (40) s1 -> . IF exp THEN s1 ELSE s1
    (41) s1 -> . IF exp THEN body ELSE body
    (42) s1 -> . IF exp THEN s1 ELSE body
    (43) s1 -> . IF exp THEN body ELSE s1
    (45) s1 -> . IF exp THEN body
    (46) s1 -> . IF exp THEN s1 ELSE s2
    (47) s1 -> . IF exp THEN body ELSE s2
    (21) s2 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (29) s2 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (37) s2 -> . IF exp s1 ELSE s1
    (44) s2 -> . IF exp THEN s2 ELSE s2

    WHILE           shift and go to state 8
    RETURN          shift and go to state 9
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26
    IF              shift and go to state 18

    body                           shift and go to state 22
    stms                           shift and go to state 23
    stm                            shift and go to state 24
    exp                            shift and go to state 6
    s                              shift and go to state 7
    call                           shift and go to state 25
    assign                         shift and go to state 12
    s1                             shift and go to state 15
    s2                             shift and go to state 16

state 6

    (11) stm -> exp .
    (12) stm -> exp . PONTOVIRGULA
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

    WHILE           reduce using rule 11 (stm -> exp .)
    RETURN          reduce using rule 11 (stm -> exp .)
    ID              reduce using rule 11 (stm -> exp .)
    DEF             reduce using rule 11 (stm -> exp .)
    NUMBER          reduce using rule 11 (stm -> exp .)
    STRING          reduce using rule 11 (stm -> exp .)
    IF              reduce using rule 11 (stm -> exp .)
    $end            reduce using rule 11 (stm -> exp .)
    END             reduce using rule 11 (stm -> exp .)
    ELSE            reduce using rule 11 (stm -> exp .)
    PONTOVIRGULA    shift and go to state 27
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51


state 7

    (13) stm -> s .

    WHILE           reduce using rule 13 (stm -> s .)
    RETURN          reduce using rule 13 (stm -> s .)
    ID              reduce using rule 13 (stm -> s .)
    DEF             reduce using rule 13 (stm -> s .)
    NUMBER          reduce using rule 13 (stm -> s .)
    STRING          reduce using rule 13 (stm -> s .)
    IF              reduce using rule 13 (stm -> s .)
    $end            reduce using rule 13 (stm -> s .)
    END             reduce using rule 13 (stm -> s .)
    ELSE            reduce using rule 13 (stm -> s .)


state 8

    (48) stm -> WHILE . exp body
    (49) stm -> WHILE . exp DO body
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 52
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 9

    (50) stm -> RETURN . exp
    (51) stm -> RETURN . exp PONTOVIRGULA
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 53
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 10

    (82) call -> ID . LPAREN params RPAREN
    (83) call -> ID . LPAREN RPAREN
    (79) exp -> ID .
    (81) assign -> ID . EQ exp

    LPAREN          shift and go to state 54
    PONTOVIRGULA    reduce using rule 79 (exp -> ID .)
    PLUS            reduce using rule 79 (exp -> ID .)
    MINUS           reduce using rule 79 (exp -> ID .)
    TIMES           reduce using rule 79 (exp -> ID .)
    DIV             reduce using rule 79 (exp -> ID .)
    EXPO            reduce using rule 79 (exp -> ID .)
    REST            reduce using rule 79 (exp -> ID .)
    TRIPLEEQ        reduce using rule 79 (exp -> ID .)
    SMALL           reduce using rule 79 (exp -> ID .)
    BIGGEST         reduce using rule 79 (exp -> ID .)
    DIFF            reduce using rule 79 (exp -> ID .)
    POINTRANGE      reduce using rule 79 (exp -> ID .)
    SMALLEQ         reduce using rule 79 (exp -> ID .)
    BIGGESTEQ       reduce using rule 79 (exp -> ID .)
    BIGGSMALLEQ     reduce using rule 79 (exp -> ID .)
    DOUBLEBAR       reduce using rule 79 (exp -> ID .)
    DOUBLEE         reduce using rule 79 (exp -> ID .)
    EXCLAMATION     reduce using rule 79 (exp -> ID .)
    SIMPLEBAR       reduce using rule 79 (exp -> ID .)
    SIMPLEE         reduce using rule 79 (exp -> ID .)
    CIRCUMFLEX      reduce using rule 79 (exp -> ID .)
    NEGATION        reduce using rule 79 (exp -> ID .)
    LSHIFT          reduce using rule 79 (exp -> ID .)
    RSHIFT          reduce using rule 79 (exp -> ID .)
    DOUBLEEQUAL     reduce using rule 79 (exp -> ID .)
    WHILE           reduce using rule 79 (exp -> ID .)
    RETURN          reduce using rule 79 (exp -> ID .)
    ID              reduce using rule 79 (exp -> ID .)
    DEF             reduce using rule 79 (exp -> ID .)
    NUMBER          reduce using rule 79 (exp -> ID .)
    STRING          reduce using rule 79 (exp -> ID .)
    IF              reduce using rule 79 (exp -> ID .)
    $end            reduce using rule 79 (exp -> ID .)
    EQ              shift and go to state 55


state 11

    (7) signature -> DEF . ID

    ID              shift and go to state 56


state 12

    (76) exp -> assign .

    PONTOVIRGULA    reduce using rule 76 (exp -> assign .)
    PLUS            reduce using rule 76 (exp -> assign .)
    MINUS           reduce using rule 76 (exp -> assign .)
    TIMES           reduce using rule 76 (exp -> assign .)
    DIV             reduce using rule 76 (exp -> assign .)
    EXPO            reduce using rule 76 (exp -> assign .)
    REST            reduce using rule 76 (exp -> assign .)
    TRIPLEEQ        reduce using rule 76 (exp -> assign .)
    SMALL           reduce using rule 76 (exp -> assign .)
    BIGGEST         reduce using rule 76 (exp -> assign .)
    DIFF            reduce using rule 76 (exp -> assign .)
    POINTRANGE      reduce using rule 76 (exp -> assign .)
    SMALLEQ         reduce using rule 76 (exp -> assign .)
    BIGGESTEQ       reduce using rule 76 (exp -> assign .)
    BIGGSMALLEQ     reduce using rule 76 (exp -> assign .)
    DOUBLEBAR       reduce using rule 76 (exp -> assign .)
    DOUBLEE         reduce using rule 76 (exp -> assign .)
    EXCLAMATION     reduce using rule 76 (exp -> assign .)
    SIMPLEBAR       reduce using rule 76 (exp -> assign .)
    SIMPLEE         reduce using rule 76 (exp -> assign .)
    CIRCUMFLEX      reduce using rule 76 (exp -> assign .)
    NEGATION        reduce using rule 76 (exp -> assign .)
    LSHIFT          reduce using rule 76 (exp -> assign .)
    RSHIFT          reduce using rule 76 (exp -> assign .)
    DOUBLEEQUAL     reduce using rule 76 (exp -> assign .)
    WHILE           reduce using rule 76 (exp -> assign .)
    RETURN          reduce using rule 76 (exp -> assign .)
    ID              reduce using rule 76 (exp -> assign .)
    DEF             reduce using rule 76 (exp -> assign .)
    NUMBER          reduce using rule 76 (exp -> assign .)
    STRING          reduce using rule 76 (exp -> assign .)
    IF              reduce using rule 76 (exp -> assign .)
    $end            reduce using rule 76 (exp -> assign .)
    END             reduce using rule 76 (exp -> assign .)
    DO              reduce using rule 76 (exp -> assign .)
    ELSE            reduce using rule 76 (exp -> assign .)
    THEN            reduce using rule 76 (exp -> assign .)
    VIRGULA         reduce using rule 76 (exp -> assign .)
    RPAREN          reduce using rule 76 (exp -> assign .)


state 13

    (77) exp -> NUMBER .

    PONTOVIRGULA    reduce using rule 77 (exp -> NUMBER .)
    PLUS            reduce using rule 77 (exp -> NUMBER .)
    MINUS           reduce using rule 77 (exp -> NUMBER .)
    TIMES           reduce using rule 77 (exp -> NUMBER .)
    DIV             reduce using rule 77 (exp -> NUMBER .)
    EXPO            reduce using rule 77 (exp -> NUMBER .)
    REST            reduce using rule 77 (exp -> NUMBER .)
    TRIPLEEQ        reduce using rule 77 (exp -> NUMBER .)
    SMALL           reduce using rule 77 (exp -> NUMBER .)
    BIGGEST         reduce using rule 77 (exp -> NUMBER .)
    DIFF            reduce using rule 77 (exp -> NUMBER .)
    POINTRANGE      reduce using rule 77 (exp -> NUMBER .)
    SMALLEQ         reduce using rule 77 (exp -> NUMBER .)
    BIGGESTEQ       reduce using rule 77 (exp -> NUMBER .)
    BIGGSMALLEQ     reduce using rule 77 (exp -> NUMBER .)
    DOUBLEBAR       reduce using rule 77 (exp -> NUMBER .)
    DOUBLEE         reduce using rule 77 (exp -> NUMBER .)
    EXCLAMATION     reduce using rule 77 (exp -> NUMBER .)
    SIMPLEBAR       reduce using rule 77 (exp -> NUMBER .)
    SIMPLEE         reduce using rule 77 (exp -> NUMBER .)
    CIRCUMFLEX      reduce using rule 77 (exp -> NUMBER .)
    NEGATION        reduce using rule 77 (exp -> NUMBER .)
    LSHIFT          reduce using rule 77 (exp -> NUMBER .)
    RSHIFT          reduce using rule 77 (exp -> NUMBER .)
    DOUBLEEQUAL     reduce using rule 77 (exp -> NUMBER .)
    WHILE           reduce using rule 77 (exp -> NUMBER .)
    RETURN          reduce using rule 77 (exp -> NUMBER .)
    ID              reduce using rule 77 (exp -> NUMBER .)
    DEF             reduce using rule 77 (exp -> NUMBER .)
    NUMBER          reduce using rule 77 (exp -> NUMBER .)
    STRING          reduce using rule 77 (exp -> NUMBER .)
    IF              reduce using rule 77 (exp -> NUMBER .)
    $end            reduce using rule 77 (exp -> NUMBER .)
    END             reduce using rule 77 (exp -> NUMBER .)
    DO              reduce using rule 77 (exp -> NUMBER .)
    ELSE            reduce using rule 77 (exp -> NUMBER .)
    THEN            reduce using rule 77 (exp -> NUMBER .)
    VIRGULA         reduce using rule 77 (exp -> NUMBER .)
    RPAREN          reduce using rule 77 (exp -> NUMBER .)


state 14

    (78) exp -> STRING .

    PONTOVIRGULA    reduce using rule 78 (exp -> STRING .)
    PLUS            reduce using rule 78 (exp -> STRING .)
    MINUS           reduce using rule 78 (exp -> STRING .)
    TIMES           reduce using rule 78 (exp -> STRING .)
    DIV             reduce using rule 78 (exp -> STRING .)
    EXPO            reduce using rule 78 (exp -> STRING .)
    REST            reduce using rule 78 (exp -> STRING .)
    TRIPLEEQ        reduce using rule 78 (exp -> STRING .)
    SMALL           reduce using rule 78 (exp -> STRING .)
    BIGGEST         reduce using rule 78 (exp -> STRING .)
    DIFF            reduce using rule 78 (exp -> STRING .)
    POINTRANGE      reduce using rule 78 (exp -> STRING .)
    SMALLEQ         reduce using rule 78 (exp -> STRING .)
    BIGGESTEQ       reduce using rule 78 (exp -> STRING .)
    BIGGSMALLEQ     reduce using rule 78 (exp -> STRING .)
    DOUBLEBAR       reduce using rule 78 (exp -> STRING .)
    DOUBLEE         reduce using rule 78 (exp -> STRING .)
    EXCLAMATION     reduce using rule 78 (exp -> STRING .)
    SIMPLEBAR       reduce using rule 78 (exp -> STRING .)
    SIMPLEE         reduce using rule 78 (exp -> STRING .)
    CIRCUMFLEX      reduce using rule 78 (exp -> STRING .)
    NEGATION        reduce using rule 78 (exp -> STRING .)
    LSHIFT          reduce using rule 78 (exp -> STRING .)
    RSHIFT          reduce using rule 78 (exp -> STRING .)
    DOUBLEEQUAL     reduce using rule 78 (exp -> STRING .)
    WHILE           reduce using rule 78 (exp -> STRING .)
    RETURN          reduce using rule 78 (exp -> STRING .)
    ID              reduce using rule 78 (exp -> STRING .)
    DEF             reduce using rule 78 (exp -> STRING .)
    NUMBER          reduce using rule 78 (exp -> STRING .)
    STRING          reduce using rule 78 (exp -> STRING .)
    IF              reduce using rule 78 (exp -> STRING .)
    $end            reduce using rule 78 (exp -> STRING .)
    END             reduce using rule 78 (exp -> STRING .)
    DO              reduce using rule 78 (exp -> STRING .)
    ELSE            reduce using rule 78 (exp -> STRING .)
    THEN            reduce using rule 78 (exp -> STRING .)
    VIRGULA         reduce using rule 78 (exp -> STRING .)
    RPAREN          reduce using rule 78 (exp -> STRING .)


state 15

    (14) s -> s1 .

    WHILE           reduce using rule 14 (s -> s1 .)
    RETURN          reduce using rule 14 (s -> s1 .)
    ID              reduce using rule 14 (s -> s1 .)
    DEF             reduce using rule 14 (s -> s1 .)
    NUMBER          reduce using rule 14 (s -> s1 .)
    STRING          reduce using rule 14 (s -> s1 .)
    IF              reduce using rule 14 (s -> s1 .)
    $end            reduce using rule 14 (s -> s1 .)
    END             reduce using rule 14 (s -> s1 .)
    ELSE            reduce using rule 14 (s -> s1 .)


state 16

    (15) s -> s2 .

    WHILE           reduce using rule 15 (s -> s2 .)
    RETURN          reduce using rule 15 (s -> s2 .)
    ID              reduce using rule 15 (s -> s2 .)
    DEF             reduce using rule 15 (s -> s2 .)
    NUMBER          reduce using rule 15 (s -> s2 .)
    STRING          reduce using rule 15 (s -> s2 .)
    IF              reduce using rule 15 (s -> s2 .)
    $end            reduce using rule 15 (s -> s2 .)
    END             reduce using rule 15 (s -> s2 .)
    ELSE            reduce using rule 15 (s -> s2 .)


state 17

    (16) s1 -> stms .

    WHILE           reduce using rule 16 (s1 -> stms .)
    RETURN          reduce using rule 16 (s1 -> stms .)
    ID              reduce using rule 16 (s1 -> stms .)
    DEF             reduce using rule 16 (s1 -> stms .)
    NUMBER          reduce using rule 16 (s1 -> stms .)
    STRING          reduce using rule 16 (s1 -> stms .)
    IF              reduce using rule 16 (s1 -> stms .)
    $end            reduce using rule 16 (s1 -> stms .)
    ELSE            reduce using rule 16 (s1 -> stms .)
    END             reduce using rule 16 (s1 -> stms .)


state 18

    (17) s1 -> IF . LPAREN exp RPAREN s1 ELSE s1
    (18) s1 -> IF . LPAREN exp RPAREN body ELSE body
    (19) s1 -> IF . LPAREN exp RPAREN s1 ELSE body
    (20) s1 -> IF . LPAREN exp RPAREN body ELSE s1
    (22) s1 -> IF . LPAREN exp RPAREN body
    (23) s1 -> IF . LPAREN exp RPAREN s1 ELSE s2
    (24) s1 -> IF . LPAREN exp RPAREN body ELSE s2
    (25) s1 -> IF . LPAREN exp RPAREN THEN s1 ELSE s1
    (26) s1 -> IF . LPAREN exp RPAREN THEN body ELSE body
    (27) s1 -> IF . LPAREN exp RPAREN THEN s1 ELSE body
    (28) s1 -> IF . LPAREN exp RPAREN THEN body ELSE s1
    (30) s1 -> IF . LPAREN exp RPAREN THEN body
    (31) s1 -> IF . LPAREN exp RPAREN THEN s1 ELSE s2
    (32) s1 -> IF . LPAREN exp RPAREN THEN body ELSE s2
    (33) s1 -> IF . exp s1 ELSE s1
    (34) s1 -> IF . exp body ELSE body
    (35) s1 -> IF . exp s1 ELSE body
    (36) s1 -> IF . exp body ELSE s1
    (38) s1 -> IF . exp body
    (39) s1 -> IF . exp body ELSE s2
    (40) s1 -> IF . exp THEN s1 ELSE s1
    (41) s1 -> IF . exp THEN body ELSE body
    (42) s1 -> IF . exp THEN s1 ELSE body
    (43) s1 -> IF . exp THEN body ELSE s1
    (45) s1 -> IF . exp THEN body
    (46) s1 -> IF . exp THEN s1 ELSE s2
    (47) s1 -> IF . exp THEN body ELSE s2
    (21) s2 -> IF . LPAREN exp RPAREN s1 ELSE s1
    (29) s2 -> IF . LPAREN exp RPAREN THEN s1 ELSE s1
    (37) s2 -> IF . exp s1 ELSE s1
    (44) s2 -> IF . exp THEN s2 ELSE s2
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    LPAREN          shift and go to state 57
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 58
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 19

    (2) program -> funcdecl program .

    $end            reduce using rule 2 (program -> funcdecl program .)


state 20

    (4) program -> stm program .

    $end            reduce using rule 4 (program -> stm program .)


state 21

    (10) stms -> stm stms .
    (16) s1 -> stms .

  ! reduce/reduce conflict for WHILE resolved using rule 10 (stms -> stm stms .)
  ! reduce/reduce conflict for RETURN resolved using rule 10 (stms -> stm stms .)
  ! reduce/reduce conflict for ID resolved using rule 10 (stms -> stm stms .)
  ! reduce/reduce conflict for DEF resolved using rule 10 (stms -> stm stms .)
  ! reduce/reduce conflict for NUMBER resolved using rule 10 (stms -> stm stms .)
  ! reduce/reduce conflict for STRING resolved using rule 10 (stms -> stm stms .)
  ! reduce/reduce conflict for IF resolved using rule 10 (stms -> stm stms .)
  ! reduce/reduce conflict for $end resolved using rule 10 (stms -> stm stms .)
  ! reduce/reduce conflict for END resolved using rule 10 (stms -> stm stms .)
  ! reduce/reduce conflict for ELSE resolved using rule 10 (stms -> stm stms .)
    WHILE           reduce using rule 10 (stms -> stm stms .)
    RETURN          reduce using rule 10 (stms -> stm stms .)
    ID              reduce using rule 10 (stms -> stm stms .)
    DEF             reduce using rule 10 (stms -> stm stms .)
    NUMBER          reduce using rule 10 (stms -> stm stms .)
    STRING          reduce using rule 10 (stms -> stm stms .)
    IF              reduce using rule 10 (stms -> stm stms .)
    $end            reduce using rule 10 (stms -> stm stms .)
    END             reduce using rule 10 (stms -> stm stms .)
    ELSE            reduce using rule 10 (stms -> stm stms .)

  ! WHILE           [ reduce using rule 16 (s1 -> stms .) ]
  ! RETURN          [ reduce using rule 16 (s1 -> stms .) ]
  ! ID              [ reduce using rule 16 (s1 -> stms .) ]
  ! DEF             [ reduce using rule 16 (s1 -> stms .) ]
  ! NUMBER          [ reduce using rule 16 (s1 -> stms .) ]
  ! STRING          [ reduce using rule 16 (s1 -> stms .) ]
  ! IF              [ reduce using rule 16 (s1 -> stms .) ]
  ! $end            [ reduce using rule 16 (s1 -> stms .) ]
  ! END             [ reduce using rule 16 (s1 -> stms .) ]
  ! ELSE            [ reduce using rule 16 (s1 -> stms .) ]


state 22

    (6) funcdecl -> signature body .

    WHILE           reduce using rule 6 (funcdecl -> signature body .)
    RETURN          reduce using rule 6 (funcdecl -> signature body .)
    ID              reduce using rule 6 (funcdecl -> signature body .)
    DEF             reduce using rule 6 (funcdecl -> signature body .)
    NUMBER          reduce using rule 6 (funcdecl -> signature body .)
    STRING          reduce using rule 6 (funcdecl -> signature body .)
    IF              reduce using rule 6 (funcdecl -> signature body .)
    $end            reduce using rule 6 (funcdecl -> signature body .)


state 23

    (8) body -> stms . END
    (16) s1 -> stms .

  ! shift/reduce conflict for END resolved as shift
    END             shift and go to state 59
    WHILE           reduce using rule 16 (s1 -> stms .)
    RETURN          reduce using rule 16 (s1 -> stms .)
    NUMBER          reduce using rule 16 (s1 -> stms .)
    STRING          reduce using rule 16 (s1 -> stms .)
    ID              reduce using rule 16 (s1 -> stms .)
    IF              reduce using rule 16 (s1 -> stms .)
    ELSE            reduce using rule 16 (s1 -> stms .)
    DEF             reduce using rule 16 (s1 -> stms .)
    $end            reduce using rule 16 (s1 -> stms .)

  ! END             [ reduce using rule 16 (s1 -> stms .) ]


state 24

    (9) stms -> stm .
    (10) stms -> stm . stms
    (9) stms -> . stm
    (10) stms -> . stm stms
    (11) stm -> . exp
    (12) stm -> . exp PONTOVIRGULA
    (13) stm -> . s
    (48) stm -> . WHILE exp body
    (49) stm -> . WHILE exp DO body
    (50) stm -> . RETURN exp
    (51) stm -> . RETURN exp PONTOVIRGULA
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (14) s -> . s1
    (15) s -> . s2
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp
    (16) s1 -> . stms
    (17) s1 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (18) s1 -> . IF LPAREN exp RPAREN body ELSE body
    (19) s1 -> . IF LPAREN exp RPAREN s1 ELSE body
    (20) s1 -> . IF LPAREN exp RPAREN body ELSE s1
    (22) s1 -> . IF LPAREN exp RPAREN body
    (23) s1 -> . IF LPAREN exp RPAREN s1 ELSE s2
    (24) s1 -> . IF LPAREN exp RPAREN body ELSE s2
    (25) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (26) s1 -> . IF LPAREN exp RPAREN THEN body ELSE body
    (27) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE body
    (28) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s1
    (30) s1 -> . IF LPAREN exp RPAREN THEN body
    (31) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s2
    (32) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s2
    (33) s1 -> . IF exp s1 ELSE s1
    (34) s1 -> . IF exp body ELSE body
    (35) s1 -> . IF exp s1 ELSE body
    (36) s1 -> . IF exp body ELSE s1
    (38) s1 -> . IF exp body
    (39) s1 -> . IF exp body ELSE s2
    (40) s1 -> . IF exp THEN s1 ELSE s1
    (41) s1 -> . IF exp THEN body ELSE body
    (42) s1 -> . IF exp THEN s1 ELSE body
    (43) s1 -> . IF exp THEN body ELSE s1
    (45) s1 -> . IF exp THEN body
    (46) s1 -> . IF exp THEN s1 ELSE s2
    (47) s1 -> . IF exp THEN body ELSE s2
    (21) s2 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (29) s2 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (37) s2 -> . IF exp s1 ELSE s1
    (44) s2 -> . IF exp THEN s2 ELSE s2

  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    END             reduce using rule 9 (stms -> stm .)
    ELSE            reduce using rule 9 (stms -> stm .)
    DEF             reduce using rule 9 (stms -> stm .)
    $end            reduce using rule 9 (stms -> stm .)
    WHILE           shift and go to state 8
    RETURN          shift and go to state 9
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26
    IF              shift and go to state 18

  ! WHILE           [ reduce using rule 9 (stms -> stm .) ]
  ! RETURN          [ reduce using rule 9 (stms -> stm .) ]
  ! NUMBER          [ reduce using rule 9 (stms -> stm .) ]
  ! STRING          [ reduce using rule 9 (stms -> stm .) ]
  ! ID              [ reduce using rule 9 (stms -> stm .) ]
  ! IF              [ reduce using rule 9 (stms -> stm .) ]

    stm                            shift and go to state 24
    stms                           shift and go to state 21
    exp                            shift and go to state 6
    s                              shift and go to state 7
    call                           shift and go to state 25
    assign                         shift and go to state 12
    s1                             shift and go to state 15
    s2                             shift and go to state 16

state 25

    (75) exp -> call .

    PONTOVIRGULA    reduce using rule 75 (exp -> call .)
    PLUS            reduce using rule 75 (exp -> call .)
    MINUS           reduce using rule 75 (exp -> call .)
    TIMES           reduce using rule 75 (exp -> call .)
    DIV             reduce using rule 75 (exp -> call .)
    EXPO            reduce using rule 75 (exp -> call .)
    REST            reduce using rule 75 (exp -> call .)
    TRIPLEEQ        reduce using rule 75 (exp -> call .)
    SMALL           reduce using rule 75 (exp -> call .)
    BIGGEST         reduce using rule 75 (exp -> call .)
    DIFF            reduce using rule 75 (exp -> call .)
    POINTRANGE      reduce using rule 75 (exp -> call .)
    SMALLEQ         reduce using rule 75 (exp -> call .)
    BIGGESTEQ       reduce using rule 75 (exp -> call .)
    BIGGSMALLEQ     reduce using rule 75 (exp -> call .)
    DOUBLEBAR       reduce using rule 75 (exp -> call .)
    DOUBLEE         reduce using rule 75 (exp -> call .)
    EXCLAMATION     reduce using rule 75 (exp -> call .)
    SIMPLEBAR       reduce using rule 75 (exp -> call .)
    SIMPLEE         reduce using rule 75 (exp -> call .)
    CIRCUMFLEX      reduce using rule 75 (exp -> call .)
    NEGATION        reduce using rule 75 (exp -> call .)
    LSHIFT          reduce using rule 75 (exp -> call .)
    RSHIFT          reduce using rule 75 (exp -> call .)
    DOUBLEEQUAL     reduce using rule 75 (exp -> call .)
    END             reduce using rule 75 (exp -> call .)
    WHILE           reduce using rule 75 (exp -> call .)
    RETURN          reduce using rule 75 (exp -> call .)
    NUMBER          reduce using rule 75 (exp -> call .)
    STRING          reduce using rule 75 (exp -> call .)
    ID              reduce using rule 75 (exp -> call .)
    IF              reduce using rule 75 (exp -> call .)
    DO              reduce using rule 75 (exp -> call .)
    DEF             reduce using rule 75 (exp -> call .)
    $end            reduce using rule 75 (exp -> call .)
    ELSE            reduce using rule 75 (exp -> call .)
    THEN            reduce using rule 75 (exp -> call .)
    VIRGULA         reduce using rule 75 (exp -> call .)
    RPAREN          reduce using rule 75 (exp -> call .)


state 26

    (79) exp -> ID .
    (82) call -> ID . LPAREN params RPAREN
    (83) call -> ID . LPAREN RPAREN
    (81) assign -> ID . EQ exp

    PONTOVIRGULA    reduce using rule 79 (exp -> ID .)
    PLUS            reduce using rule 79 (exp -> ID .)
    MINUS           reduce using rule 79 (exp -> ID .)
    TIMES           reduce using rule 79 (exp -> ID .)
    DIV             reduce using rule 79 (exp -> ID .)
    EXPO            reduce using rule 79 (exp -> ID .)
    REST            reduce using rule 79 (exp -> ID .)
    TRIPLEEQ        reduce using rule 79 (exp -> ID .)
    SMALL           reduce using rule 79 (exp -> ID .)
    BIGGEST         reduce using rule 79 (exp -> ID .)
    DIFF            reduce using rule 79 (exp -> ID .)
    POINTRANGE      reduce using rule 79 (exp -> ID .)
    SMALLEQ         reduce using rule 79 (exp -> ID .)
    BIGGESTEQ       reduce using rule 79 (exp -> ID .)
    BIGGSMALLEQ     reduce using rule 79 (exp -> ID .)
    DOUBLEBAR       reduce using rule 79 (exp -> ID .)
    DOUBLEE         reduce using rule 79 (exp -> ID .)
    EXCLAMATION     reduce using rule 79 (exp -> ID .)
    SIMPLEBAR       reduce using rule 79 (exp -> ID .)
    SIMPLEE         reduce using rule 79 (exp -> ID .)
    CIRCUMFLEX      reduce using rule 79 (exp -> ID .)
    NEGATION        reduce using rule 79 (exp -> ID .)
    LSHIFT          reduce using rule 79 (exp -> ID .)
    RSHIFT          reduce using rule 79 (exp -> ID .)
    DOUBLEEQUAL     reduce using rule 79 (exp -> ID .)
    END             reduce using rule 79 (exp -> ID .)
    WHILE           reduce using rule 79 (exp -> ID .)
    RETURN          reduce using rule 79 (exp -> ID .)
    NUMBER          reduce using rule 79 (exp -> ID .)
    STRING          reduce using rule 79 (exp -> ID .)
    ID              reduce using rule 79 (exp -> ID .)
    IF              reduce using rule 79 (exp -> ID .)
    DO              reduce using rule 79 (exp -> ID .)
    DEF             reduce using rule 79 (exp -> ID .)
    $end            reduce using rule 79 (exp -> ID .)
    ELSE            reduce using rule 79 (exp -> ID .)
    THEN            reduce using rule 79 (exp -> ID .)
    VIRGULA         reduce using rule 79 (exp -> ID .)
    RPAREN          reduce using rule 79 (exp -> ID .)
    LPAREN          shift and go to state 54
    EQ              shift and go to state 55


state 27

    (12) stm -> exp PONTOVIRGULA .

    WHILE           reduce using rule 12 (stm -> exp PONTOVIRGULA .)
    RETURN          reduce using rule 12 (stm -> exp PONTOVIRGULA .)
    ID              reduce using rule 12 (stm -> exp PONTOVIRGULA .)
    DEF             reduce using rule 12 (stm -> exp PONTOVIRGULA .)
    NUMBER          reduce using rule 12 (stm -> exp PONTOVIRGULA .)
    STRING          reduce using rule 12 (stm -> exp PONTOVIRGULA .)
    IF              reduce using rule 12 (stm -> exp PONTOVIRGULA .)
    $end            reduce using rule 12 (stm -> exp PONTOVIRGULA .)
    END             reduce using rule 12 (stm -> exp PONTOVIRGULA .)
    ELSE            reduce using rule 12 (stm -> exp PONTOVIRGULA .)


state 28

    (52) exp -> exp PLUS . exp
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 60
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 29

    (53) exp -> exp MINUS . exp
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 61
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 30

    (54) exp -> exp TIMES . exp
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 62
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 31

    (55) exp -> exp DIV . exp
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 63
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 32

    (56) exp -> exp EXPO . exp
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 64
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 33

    (57) exp -> exp REST . exp
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 65
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 34

    (58) exp -> exp TRIPLEEQ . exp
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 66
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 35

    (59) exp -> exp SMALL . exp
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 67
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 36

    (60) exp -> exp BIGGEST . exp
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 68
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 37

    (61) exp -> exp DIFF . exp
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 69
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 38

    (62) exp -> exp POINTRANGE . exp
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 70
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 39

    (63) exp -> exp SMALLEQ . exp
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 71
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 40

    (64) exp -> exp BIGGESTEQ . exp
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 72
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 41

    (65) exp -> exp BIGGSMALLEQ . exp
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 73
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 42

    (66) exp -> exp DOUBLEBAR . exp
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 74
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 43

    (67) exp -> exp DOUBLEE . exp
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 75
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 44

    (68) exp -> exp EXCLAMATION . exp
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 76
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 45

    (69) exp -> exp SIMPLEBAR . exp
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 77
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 46

    (70) exp -> exp SIMPLEE . exp
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 78
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 47

    (71) exp -> exp CIRCUMFLEX . exp
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 79
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 48

    (72) exp -> exp NEGATION . exp
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 80
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 49

    (73) exp -> exp LSHIFT . exp
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 81
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 50

    (74) exp -> exp RSHIFT . exp
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 82
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 51

    (80) exp -> exp DOUBLEEQUAL . exp
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 83
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 52

    (48) stm -> WHILE exp . body
    (49) stm -> WHILE exp . DO body
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp
    (8) body -> . stms END
    (9) stms -> . stm
    (10) stms -> . stm stms
    (11) stm -> . exp
    (12) stm -> . exp PONTOVIRGULA
    (13) stm -> . s
    (48) stm -> . WHILE exp body
    (49) stm -> . WHILE exp DO body
    (50) stm -> . RETURN exp
    (51) stm -> . RETURN exp PONTOVIRGULA
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (14) s -> . s1
    (15) s -> . s2
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp
    (16) s1 -> . stms
    (17) s1 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (18) s1 -> . IF LPAREN exp RPAREN body ELSE body
    (19) s1 -> . IF LPAREN exp RPAREN s1 ELSE body
    (20) s1 -> . IF LPAREN exp RPAREN body ELSE s1
    (22) s1 -> . IF LPAREN exp RPAREN body
    (23) s1 -> . IF LPAREN exp RPAREN s1 ELSE s2
    (24) s1 -> . IF LPAREN exp RPAREN body ELSE s2
    (25) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (26) s1 -> . IF LPAREN exp RPAREN THEN body ELSE body
    (27) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE body
    (28) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s1
    (30) s1 -> . IF LPAREN exp RPAREN THEN body
    (31) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s2
    (32) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s2
    (33) s1 -> . IF exp s1 ELSE s1
    (34) s1 -> . IF exp body ELSE body
    (35) s1 -> . IF exp s1 ELSE body
    (36) s1 -> . IF exp body ELSE s1
    (38) s1 -> . IF exp body
    (39) s1 -> . IF exp body ELSE s2
    (40) s1 -> . IF exp THEN s1 ELSE s1
    (41) s1 -> . IF exp THEN body ELSE body
    (42) s1 -> . IF exp THEN s1 ELSE body
    (43) s1 -> . IF exp THEN body ELSE s1
    (45) s1 -> . IF exp THEN body
    (46) s1 -> . IF exp THEN s1 ELSE s2
    (47) s1 -> . IF exp THEN body ELSE s2
    (21) s2 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (29) s2 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (37) s2 -> . IF exp s1 ELSE s1
    (44) s2 -> . IF exp THEN s2 ELSE s2

    DO              shift and go to state 85
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51
    WHILE           shift and go to state 8
    RETURN          shift and go to state 9
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26
    IF              shift and go to state 18

    exp                            shift and go to state 6
    body                           shift and go to state 84
    stms                           shift and go to state 23
    stm                            shift and go to state 24
    s                              shift and go to state 7
    call                           shift and go to state 25
    assign                         shift and go to state 12
    s1                             shift and go to state 15
    s2                             shift and go to state 16

state 53

    (50) stm -> RETURN exp .
    (51) stm -> RETURN exp . PONTOVIRGULA
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

    WHILE           reduce using rule 50 (stm -> RETURN exp .)
    RETURN          reduce using rule 50 (stm -> RETURN exp .)
    ID              reduce using rule 50 (stm -> RETURN exp .)
    DEF             reduce using rule 50 (stm -> RETURN exp .)
    NUMBER          reduce using rule 50 (stm -> RETURN exp .)
    STRING          reduce using rule 50 (stm -> RETURN exp .)
    IF              reduce using rule 50 (stm -> RETURN exp .)
    $end            reduce using rule 50 (stm -> RETURN exp .)
    END             reduce using rule 50 (stm -> RETURN exp .)
    ELSE            reduce using rule 50 (stm -> RETURN exp .)
    PONTOVIRGULA    shift and go to state 86
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51


state 54

    (82) call -> ID LPAREN . params RPAREN
    (83) call -> ID LPAREN . RPAREN
    (84) params -> . exp VIRGULA params
    (85) params -> . exp
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    RPAREN          shift and go to state 88
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    params                         shift and go to state 87
    exp                            shift and go to state 89
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 55

    (81) assign -> ID EQ . exp
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 90
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 56

    (7) signature -> DEF ID .

    WHILE           reduce using rule 7 (signature -> DEF ID .)
    RETURN          reduce using rule 7 (signature -> DEF ID .)
    NUMBER          reduce using rule 7 (signature -> DEF ID .)
    STRING          reduce using rule 7 (signature -> DEF ID .)
    ID              reduce using rule 7 (signature -> DEF ID .)
    IF              reduce using rule 7 (signature -> DEF ID .)


state 57

    (17) s1 -> IF LPAREN . exp RPAREN s1 ELSE s1
    (18) s1 -> IF LPAREN . exp RPAREN body ELSE body
    (19) s1 -> IF LPAREN . exp RPAREN s1 ELSE body
    (20) s1 -> IF LPAREN . exp RPAREN body ELSE s1
    (22) s1 -> IF LPAREN . exp RPAREN body
    (23) s1 -> IF LPAREN . exp RPAREN s1 ELSE s2
    (24) s1 -> IF LPAREN . exp RPAREN body ELSE s2
    (25) s1 -> IF LPAREN . exp RPAREN THEN s1 ELSE s1
    (26) s1 -> IF LPAREN . exp RPAREN THEN body ELSE body
    (27) s1 -> IF LPAREN . exp RPAREN THEN s1 ELSE body
    (28) s1 -> IF LPAREN . exp RPAREN THEN body ELSE s1
    (30) s1 -> IF LPAREN . exp RPAREN THEN body
    (31) s1 -> IF LPAREN . exp RPAREN THEN s1 ELSE s2
    (32) s1 -> IF LPAREN . exp RPAREN THEN body ELSE s2
    (21) s2 -> IF LPAREN . exp RPAREN s1 ELSE s1
    (29) s2 -> IF LPAREN . exp RPAREN THEN s1 ELSE s1
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 91
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 58

    (33) s1 -> IF exp . s1 ELSE s1
    (34) s1 -> IF exp . body ELSE body
    (35) s1 -> IF exp . s1 ELSE body
    (36) s1 -> IF exp . body ELSE s1
    (38) s1 -> IF exp . body
    (39) s1 -> IF exp . body ELSE s2
    (40) s1 -> IF exp . THEN s1 ELSE s1
    (41) s1 -> IF exp . THEN body ELSE body
    (42) s1 -> IF exp . THEN s1 ELSE body
    (43) s1 -> IF exp . THEN body ELSE s1
    (45) s1 -> IF exp . THEN body
    (46) s1 -> IF exp . THEN s1 ELSE s2
    (47) s1 -> IF exp . THEN body ELSE s2
    (37) s2 -> IF exp . s1 ELSE s1
    (44) s2 -> IF exp . THEN s2 ELSE s2
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp
    (16) s1 -> . stms
    (17) s1 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (18) s1 -> . IF LPAREN exp RPAREN body ELSE body
    (19) s1 -> . IF LPAREN exp RPAREN s1 ELSE body
    (20) s1 -> . IF LPAREN exp RPAREN body ELSE s1
    (22) s1 -> . IF LPAREN exp RPAREN body
    (23) s1 -> . IF LPAREN exp RPAREN s1 ELSE s2
    (24) s1 -> . IF LPAREN exp RPAREN body ELSE s2
    (25) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (26) s1 -> . IF LPAREN exp RPAREN THEN body ELSE body
    (27) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE body
    (28) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s1
    (30) s1 -> . IF LPAREN exp RPAREN THEN body
    (31) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s2
    (32) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s2
    (33) s1 -> . IF exp s1 ELSE s1
    (34) s1 -> . IF exp body ELSE body
    (35) s1 -> . IF exp s1 ELSE body
    (36) s1 -> . IF exp body ELSE s1
    (38) s1 -> . IF exp body
    (39) s1 -> . IF exp body ELSE s2
    (40) s1 -> . IF exp THEN s1 ELSE s1
    (41) s1 -> . IF exp THEN body ELSE body
    (42) s1 -> . IF exp THEN s1 ELSE body
    (43) s1 -> . IF exp THEN body ELSE s1
    (45) s1 -> . IF exp THEN body
    (46) s1 -> . IF exp THEN s1 ELSE s2
    (47) s1 -> . IF exp THEN body ELSE s2
    (8) body -> . stms END
    (9) stms -> . stm
    (10) stms -> . stm stms
    (11) stm -> . exp
    (12) stm -> . exp PONTOVIRGULA
    (13) stm -> . s
    (48) stm -> . WHILE exp body
    (49) stm -> . WHILE exp DO body
    (50) stm -> . RETURN exp
    (51) stm -> . RETURN exp PONTOVIRGULA
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (14) s -> . s1
    (15) s -> . s2
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp
    (21) s2 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (29) s2 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (37) s2 -> . IF exp s1 ELSE s1
    (44) s2 -> . IF exp THEN s2 ELSE s2

    THEN            shift and go to state 94
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51
    IF              shift and go to state 18
    WHILE           shift and go to state 8
    RETURN          shift and go to state 9
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 6
    s1                             shift and go to state 92
    body                           shift and go to state 93
    s2                             shift and go to state 16
    stms                           shift and go to state 95
    stm                            shift and go to state 24
    s                              shift and go to state 7
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 59

    (8) body -> stms END .

    WHILE           reduce using rule 8 (body -> stms END .)
    RETURN          reduce using rule 8 (body -> stms END .)
    ID              reduce using rule 8 (body -> stms END .)
    DEF             reduce using rule 8 (body -> stms END .)
    NUMBER          reduce using rule 8 (body -> stms END .)
    STRING          reduce using rule 8 (body -> stms END .)
    IF              reduce using rule 8 (body -> stms END .)
    $end            reduce using rule 8 (body -> stms END .)
    END             reduce using rule 8 (body -> stms END .)
    ELSE            reduce using rule 8 (body -> stms END .)


state 60

    (52) exp -> exp PLUS exp .
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXPO resolved as shift
  ! shift/reduce conflict for REST resolved as shift
  ! shift/reduce conflict for TRIPLEEQ resolved as shift
  ! shift/reduce conflict for SMALL resolved as shift
  ! shift/reduce conflict for BIGGEST resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for POINTRANGE resolved as shift
  ! shift/reduce conflict for SMALLEQ resolved as shift
  ! shift/reduce conflict for BIGGESTEQ resolved as shift
  ! shift/reduce conflict for BIGGSMALLEQ resolved as shift
  ! shift/reduce conflict for DOUBLEBAR resolved as shift
  ! shift/reduce conflict for DOUBLEE resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for SIMPLEBAR resolved as shift
  ! shift/reduce conflict for SIMPLEE resolved as shift
  ! shift/reduce conflict for CIRCUMFLEX resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for DOUBLEEQUAL resolved as shift
    PONTOVIRGULA    reduce using rule 52 (exp -> exp PLUS exp .)
    WHILE           reduce using rule 52 (exp -> exp PLUS exp .)
    RETURN          reduce using rule 52 (exp -> exp PLUS exp .)
    ID              reduce using rule 52 (exp -> exp PLUS exp .)
    DEF             reduce using rule 52 (exp -> exp PLUS exp .)
    NUMBER          reduce using rule 52 (exp -> exp PLUS exp .)
    STRING          reduce using rule 52 (exp -> exp PLUS exp .)
    IF              reduce using rule 52 (exp -> exp PLUS exp .)
    $end            reduce using rule 52 (exp -> exp PLUS exp .)
    END             reduce using rule 52 (exp -> exp PLUS exp .)
    DO              reduce using rule 52 (exp -> exp PLUS exp .)
    ELSE            reduce using rule 52 (exp -> exp PLUS exp .)
    THEN            reduce using rule 52 (exp -> exp PLUS exp .)
    VIRGULA         reduce using rule 52 (exp -> exp PLUS exp .)
    RPAREN          reduce using rule 52 (exp -> exp PLUS exp .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51

  ! PLUS            [ reduce using rule 52 (exp -> exp PLUS exp .) ]
  ! MINUS           [ reduce using rule 52 (exp -> exp PLUS exp .) ]
  ! TIMES           [ reduce using rule 52 (exp -> exp PLUS exp .) ]
  ! DIV             [ reduce using rule 52 (exp -> exp PLUS exp .) ]
  ! EXPO            [ reduce using rule 52 (exp -> exp PLUS exp .) ]
  ! REST            [ reduce using rule 52 (exp -> exp PLUS exp .) ]
  ! TRIPLEEQ        [ reduce using rule 52 (exp -> exp PLUS exp .) ]
  ! SMALL           [ reduce using rule 52 (exp -> exp PLUS exp .) ]
  ! BIGGEST         [ reduce using rule 52 (exp -> exp PLUS exp .) ]
  ! DIFF            [ reduce using rule 52 (exp -> exp PLUS exp .) ]
  ! POINTRANGE      [ reduce using rule 52 (exp -> exp PLUS exp .) ]
  ! SMALLEQ         [ reduce using rule 52 (exp -> exp PLUS exp .) ]
  ! BIGGESTEQ       [ reduce using rule 52 (exp -> exp PLUS exp .) ]
  ! BIGGSMALLEQ     [ reduce using rule 52 (exp -> exp PLUS exp .) ]
  ! DOUBLEBAR       [ reduce using rule 52 (exp -> exp PLUS exp .) ]
  ! DOUBLEE         [ reduce using rule 52 (exp -> exp PLUS exp .) ]
  ! EXCLAMATION     [ reduce using rule 52 (exp -> exp PLUS exp .) ]
  ! SIMPLEBAR       [ reduce using rule 52 (exp -> exp PLUS exp .) ]
  ! SIMPLEE         [ reduce using rule 52 (exp -> exp PLUS exp .) ]
  ! CIRCUMFLEX      [ reduce using rule 52 (exp -> exp PLUS exp .) ]
  ! NEGATION        [ reduce using rule 52 (exp -> exp PLUS exp .) ]
  ! LSHIFT          [ reduce using rule 52 (exp -> exp PLUS exp .) ]
  ! RSHIFT          [ reduce using rule 52 (exp -> exp PLUS exp .) ]
  ! DOUBLEEQUAL     [ reduce using rule 52 (exp -> exp PLUS exp .) ]


state 61

    (53) exp -> exp MINUS exp .
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXPO resolved as shift
  ! shift/reduce conflict for REST resolved as shift
  ! shift/reduce conflict for TRIPLEEQ resolved as shift
  ! shift/reduce conflict for SMALL resolved as shift
  ! shift/reduce conflict for BIGGEST resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for POINTRANGE resolved as shift
  ! shift/reduce conflict for SMALLEQ resolved as shift
  ! shift/reduce conflict for BIGGESTEQ resolved as shift
  ! shift/reduce conflict for BIGGSMALLEQ resolved as shift
  ! shift/reduce conflict for DOUBLEBAR resolved as shift
  ! shift/reduce conflict for DOUBLEE resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for SIMPLEBAR resolved as shift
  ! shift/reduce conflict for SIMPLEE resolved as shift
  ! shift/reduce conflict for CIRCUMFLEX resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for DOUBLEEQUAL resolved as shift
    PONTOVIRGULA    reduce using rule 53 (exp -> exp MINUS exp .)
    WHILE           reduce using rule 53 (exp -> exp MINUS exp .)
    RETURN          reduce using rule 53 (exp -> exp MINUS exp .)
    ID              reduce using rule 53 (exp -> exp MINUS exp .)
    DEF             reduce using rule 53 (exp -> exp MINUS exp .)
    NUMBER          reduce using rule 53 (exp -> exp MINUS exp .)
    STRING          reduce using rule 53 (exp -> exp MINUS exp .)
    IF              reduce using rule 53 (exp -> exp MINUS exp .)
    $end            reduce using rule 53 (exp -> exp MINUS exp .)
    END             reduce using rule 53 (exp -> exp MINUS exp .)
    DO              reduce using rule 53 (exp -> exp MINUS exp .)
    ELSE            reduce using rule 53 (exp -> exp MINUS exp .)
    THEN            reduce using rule 53 (exp -> exp MINUS exp .)
    VIRGULA         reduce using rule 53 (exp -> exp MINUS exp .)
    RPAREN          reduce using rule 53 (exp -> exp MINUS exp .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51

  ! PLUS            [ reduce using rule 53 (exp -> exp MINUS exp .) ]
  ! MINUS           [ reduce using rule 53 (exp -> exp MINUS exp .) ]
  ! TIMES           [ reduce using rule 53 (exp -> exp MINUS exp .) ]
  ! DIV             [ reduce using rule 53 (exp -> exp MINUS exp .) ]
  ! EXPO            [ reduce using rule 53 (exp -> exp MINUS exp .) ]
  ! REST            [ reduce using rule 53 (exp -> exp MINUS exp .) ]
  ! TRIPLEEQ        [ reduce using rule 53 (exp -> exp MINUS exp .) ]
  ! SMALL           [ reduce using rule 53 (exp -> exp MINUS exp .) ]
  ! BIGGEST         [ reduce using rule 53 (exp -> exp MINUS exp .) ]
  ! DIFF            [ reduce using rule 53 (exp -> exp MINUS exp .) ]
  ! POINTRANGE      [ reduce using rule 53 (exp -> exp MINUS exp .) ]
  ! SMALLEQ         [ reduce using rule 53 (exp -> exp MINUS exp .) ]
  ! BIGGESTEQ       [ reduce using rule 53 (exp -> exp MINUS exp .) ]
  ! BIGGSMALLEQ     [ reduce using rule 53 (exp -> exp MINUS exp .) ]
  ! DOUBLEBAR       [ reduce using rule 53 (exp -> exp MINUS exp .) ]
  ! DOUBLEE         [ reduce using rule 53 (exp -> exp MINUS exp .) ]
  ! EXCLAMATION     [ reduce using rule 53 (exp -> exp MINUS exp .) ]
  ! SIMPLEBAR       [ reduce using rule 53 (exp -> exp MINUS exp .) ]
  ! SIMPLEE         [ reduce using rule 53 (exp -> exp MINUS exp .) ]
  ! CIRCUMFLEX      [ reduce using rule 53 (exp -> exp MINUS exp .) ]
  ! NEGATION        [ reduce using rule 53 (exp -> exp MINUS exp .) ]
  ! LSHIFT          [ reduce using rule 53 (exp -> exp MINUS exp .) ]
  ! RSHIFT          [ reduce using rule 53 (exp -> exp MINUS exp .) ]
  ! DOUBLEEQUAL     [ reduce using rule 53 (exp -> exp MINUS exp .) ]


state 62

    (54) exp -> exp TIMES exp .
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXPO resolved as shift
  ! shift/reduce conflict for REST resolved as shift
  ! shift/reduce conflict for TRIPLEEQ resolved as shift
  ! shift/reduce conflict for SMALL resolved as shift
  ! shift/reduce conflict for BIGGEST resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for POINTRANGE resolved as shift
  ! shift/reduce conflict for SMALLEQ resolved as shift
  ! shift/reduce conflict for BIGGESTEQ resolved as shift
  ! shift/reduce conflict for BIGGSMALLEQ resolved as shift
  ! shift/reduce conflict for DOUBLEBAR resolved as shift
  ! shift/reduce conflict for DOUBLEE resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for SIMPLEBAR resolved as shift
  ! shift/reduce conflict for SIMPLEE resolved as shift
  ! shift/reduce conflict for CIRCUMFLEX resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for DOUBLEEQUAL resolved as shift
    PONTOVIRGULA    reduce using rule 54 (exp -> exp TIMES exp .)
    WHILE           reduce using rule 54 (exp -> exp TIMES exp .)
    RETURN          reduce using rule 54 (exp -> exp TIMES exp .)
    ID              reduce using rule 54 (exp -> exp TIMES exp .)
    DEF             reduce using rule 54 (exp -> exp TIMES exp .)
    NUMBER          reduce using rule 54 (exp -> exp TIMES exp .)
    STRING          reduce using rule 54 (exp -> exp TIMES exp .)
    IF              reduce using rule 54 (exp -> exp TIMES exp .)
    $end            reduce using rule 54 (exp -> exp TIMES exp .)
    END             reduce using rule 54 (exp -> exp TIMES exp .)
    DO              reduce using rule 54 (exp -> exp TIMES exp .)
    ELSE            reduce using rule 54 (exp -> exp TIMES exp .)
    THEN            reduce using rule 54 (exp -> exp TIMES exp .)
    VIRGULA         reduce using rule 54 (exp -> exp TIMES exp .)
    RPAREN          reduce using rule 54 (exp -> exp TIMES exp .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51

  ! PLUS            [ reduce using rule 54 (exp -> exp TIMES exp .) ]
  ! MINUS           [ reduce using rule 54 (exp -> exp TIMES exp .) ]
  ! TIMES           [ reduce using rule 54 (exp -> exp TIMES exp .) ]
  ! DIV             [ reduce using rule 54 (exp -> exp TIMES exp .) ]
  ! EXPO            [ reduce using rule 54 (exp -> exp TIMES exp .) ]
  ! REST            [ reduce using rule 54 (exp -> exp TIMES exp .) ]
  ! TRIPLEEQ        [ reduce using rule 54 (exp -> exp TIMES exp .) ]
  ! SMALL           [ reduce using rule 54 (exp -> exp TIMES exp .) ]
  ! BIGGEST         [ reduce using rule 54 (exp -> exp TIMES exp .) ]
  ! DIFF            [ reduce using rule 54 (exp -> exp TIMES exp .) ]
  ! POINTRANGE      [ reduce using rule 54 (exp -> exp TIMES exp .) ]
  ! SMALLEQ         [ reduce using rule 54 (exp -> exp TIMES exp .) ]
  ! BIGGESTEQ       [ reduce using rule 54 (exp -> exp TIMES exp .) ]
  ! BIGGSMALLEQ     [ reduce using rule 54 (exp -> exp TIMES exp .) ]
  ! DOUBLEBAR       [ reduce using rule 54 (exp -> exp TIMES exp .) ]
  ! DOUBLEE         [ reduce using rule 54 (exp -> exp TIMES exp .) ]
  ! EXCLAMATION     [ reduce using rule 54 (exp -> exp TIMES exp .) ]
  ! SIMPLEBAR       [ reduce using rule 54 (exp -> exp TIMES exp .) ]
  ! SIMPLEE         [ reduce using rule 54 (exp -> exp TIMES exp .) ]
  ! CIRCUMFLEX      [ reduce using rule 54 (exp -> exp TIMES exp .) ]
  ! NEGATION        [ reduce using rule 54 (exp -> exp TIMES exp .) ]
  ! LSHIFT          [ reduce using rule 54 (exp -> exp TIMES exp .) ]
  ! RSHIFT          [ reduce using rule 54 (exp -> exp TIMES exp .) ]
  ! DOUBLEEQUAL     [ reduce using rule 54 (exp -> exp TIMES exp .) ]


state 63

    (55) exp -> exp DIV exp .
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXPO resolved as shift
  ! shift/reduce conflict for REST resolved as shift
  ! shift/reduce conflict for TRIPLEEQ resolved as shift
  ! shift/reduce conflict for SMALL resolved as shift
  ! shift/reduce conflict for BIGGEST resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for POINTRANGE resolved as shift
  ! shift/reduce conflict for SMALLEQ resolved as shift
  ! shift/reduce conflict for BIGGESTEQ resolved as shift
  ! shift/reduce conflict for BIGGSMALLEQ resolved as shift
  ! shift/reduce conflict for DOUBLEBAR resolved as shift
  ! shift/reduce conflict for DOUBLEE resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for SIMPLEBAR resolved as shift
  ! shift/reduce conflict for SIMPLEE resolved as shift
  ! shift/reduce conflict for CIRCUMFLEX resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for DOUBLEEQUAL resolved as shift
    PONTOVIRGULA    reduce using rule 55 (exp -> exp DIV exp .)
    WHILE           reduce using rule 55 (exp -> exp DIV exp .)
    RETURN          reduce using rule 55 (exp -> exp DIV exp .)
    ID              reduce using rule 55 (exp -> exp DIV exp .)
    DEF             reduce using rule 55 (exp -> exp DIV exp .)
    NUMBER          reduce using rule 55 (exp -> exp DIV exp .)
    STRING          reduce using rule 55 (exp -> exp DIV exp .)
    IF              reduce using rule 55 (exp -> exp DIV exp .)
    $end            reduce using rule 55 (exp -> exp DIV exp .)
    END             reduce using rule 55 (exp -> exp DIV exp .)
    DO              reduce using rule 55 (exp -> exp DIV exp .)
    ELSE            reduce using rule 55 (exp -> exp DIV exp .)
    THEN            reduce using rule 55 (exp -> exp DIV exp .)
    VIRGULA         reduce using rule 55 (exp -> exp DIV exp .)
    RPAREN          reduce using rule 55 (exp -> exp DIV exp .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51

  ! PLUS            [ reduce using rule 55 (exp -> exp DIV exp .) ]
  ! MINUS           [ reduce using rule 55 (exp -> exp DIV exp .) ]
  ! TIMES           [ reduce using rule 55 (exp -> exp DIV exp .) ]
  ! DIV             [ reduce using rule 55 (exp -> exp DIV exp .) ]
  ! EXPO            [ reduce using rule 55 (exp -> exp DIV exp .) ]
  ! REST            [ reduce using rule 55 (exp -> exp DIV exp .) ]
  ! TRIPLEEQ        [ reduce using rule 55 (exp -> exp DIV exp .) ]
  ! SMALL           [ reduce using rule 55 (exp -> exp DIV exp .) ]
  ! BIGGEST         [ reduce using rule 55 (exp -> exp DIV exp .) ]
  ! DIFF            [ reduce using rule 55 (exp -> exp DIV exp .) ]
  ! POINTRANGE      [ reduce using rule 55 (exp -> exp DIV exp .) ]
  ! SMALLEQ         [ reduce using rule 55 (exp -> exp DIV exp .) ]
  ! BIGGESTEQ       [ reduce using rule 55 (exp -> exp DIV exp .) ]
  ! BIGGSMALLEQ     [ reduce using rule 55 (exp -> exp DIV exp .) ]
  ! DOUBLEBAR       [ reduce using rule 55 (exp -> exp DIV exp .) ]
  ! DOUBLEE         [ reduce using rule 55 (exp -> exp DIV exp .) ]
  ! EXCLAMATION     [ reduce using rule 55 (exp -> exp DIV exp .) ]
  ! SIMPLEBAR       [ reduce using rule 55 (exp -> exp DIV exp .) ]
  ! SIMPLEE         [ reduce using rule 55 (exp -> exp DIV exp .) ]
  ! CIRCUMFLEX      [ reduce using rule 55 (exp -> exp DIV exp .) ]
  ! NEGATION        [ reduce using rule 55 (exp -> exp DIV exp .) ]
  ! LSHIFT          [ reduce using rule 55 (exp -> exp DIV exp .) ]
  ! RSHIFT          [ reduce using rule 55 (exp -> exp DIV exp .) ]
  ! DOUBLEEQUAL     [ reduce using rule 55 (exp -> exp DIV exp .) ]


state 64

    (56) exp -> exp EXPO exp .
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXPO resolved as shift
  ! shift/reduce conflict for REST resolved as shift
  ! shift/reduce conflict for TRIPLEEQ resolved as shift
  ! shift/reduce conflict for SMALL resolved as shift
  ! shift/reduce conflict for BIGGEST resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for POINTRANGE resolved as shift
  ! shift/reduce conflict for SMALLEQ resolved as shift
  ! shift/reduce conflict for BIGGESTEQ resolved as shift
  ! shift/reduce conflict for BIGGSMALLEQ resolved as shift
  ! shift/reduce conflict for DOUBLEBAR resolved as shift
  ! shift/reduce conflict for DOUBLEE resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for SIMPLEBAR resolved as shift
  ! shift/reduce conflict for SIMPLEE resolved as shift
  ! shift/reduce conflict for CIRCUMFLEX resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for DOUBLEEQUAL resolved as shift
    PONTOVIRGULA    reduce using rule 56 (exp -> exp EXPO exp .)
    WHILE           reduce using rule 56 (exp -> exp EXPO exp .)
    RETURN          reduce using rule 56 (exp -> exp EXPO exp .)
    ID              reduce using rule 56 (exp -> exp EXPO exp .)
    DEF             reduce using rule 56 (exp -> exp EXPO exp .)
    NUMBER          reduce using rule 56 (exp -> exp EXPO exp .)
    STRING          reduce using rule 56 (exp -> exp EXPO exp .)
    IF              reduce using rule 56 (exp -> exp EXPO exp .)
    $end            reduce using rule 56 (exp -> exp EXPO exp .)
    END             reduce using rule 56 (exp -> exp EXPO exp .)
    DO              reduce using rule 56 (exp -> exp EXPO exp .)
    ELSE            reduce using rule 56 (exp -> exp EXPO exp .)
    THEN            reduce using rule 56 (exp -> exp EXPO exp .)
    VIRGULA         reduce using rule 56 (exp -> exp EXPO exp .)
    RPAREN          reduce using rule 56 (exp -> exp EXPO exp .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51

  ! PLUS            [ reduce using rule 56 (exp -> exp EXPO exp .) ]
  ! MINUS           [ reduce using rule 56 (exp -> exp EXPO exp .) ]
  ! TIMES           [ reduce using rule 56 (exp -> exp EXPO exp .) ]
  ! DIV             [ reduce using rule 56 (exp -> exp EXPO exp .) ]
  ! EXPO            [ reduce using rule 56 (exp -> exp EXPO exp .) ]
  ! REST            [ reduce using rule 56 (exp -> exp EXPO exp .) ]
  ! TRIPLEEQ        [ reduce using rule 56 (exp -> exp EXPO exp .) ]
  ! SMALL           [ reduce using rule 56 (exp -> exp EXPO exp .) ]
  ! BIGGEST         [ reduce using rule 56 (exp -> exp EXPO exp .) ]
  ! DIFF            [ reduce using rule 56 (exp -> exp EXPO exp .) ]
  ! POINTRANGE      [ reduce using rule 56 (exp -> exp EXPO exp .) ]
  ! SMALLEQ         [ reduce using rule 56 (exp -> exp EXPO exp .) ]
  ! BIGGESTEQ       [ reduce using rule 56 (exp -> exp EXPO exp .) ]
  ! BIGGSMALLEQ     [ reduce using rule 56 (exp -> exp EXPO exp .) ]
  ! DOUBLEBAR       [ reduce using rule 56 (exp -> exp EXPO exp .) ]
  ! DOUBLEE         [ reduce using rule 56 (exp -> exp EXPO exp .) ]
  ! EXCLAMATION     [ reduce using rule 56 (exp -> exp EXPO exp .) ]
  ! SIMPLEBAR       [ reduce using rule 56 (exp -> exp EXPO exp .) ]
  ! SIMPLEE         [ reduce using rule 56 (exp -> exp EXPO exp .) ]
  ! CIRCUMFLEX      [ reduce using rule 56 (exp -> exp EXPO exp .) ]
  ! NEGATION        [ reduce using rule 56 (exp -> exp EXPO exp .) ]
  ! LSHIFT          [ reduce using rule 56 (exp -> exp EXPO exp .) ]
  ! RSHIFT          [ reduce using rule 56 (exp -> exp EXPO exp .) ]
  ! DOUBLEEQUAL     [ reduce using rule 56 (exp -> exp EXPO exp .) ]


state 65

    (57) exp -> exp REST exp .
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXPO resolved as shift
  ! shift/reduce conflict for REST resolved as shift
  ! shift/reduce conflict for TRIPLEEQ resolved as shift
  ! shift/reduce conflict for SMALL resolved as shift
  ! shift/reduce conflict for BIGGEST resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for POINTRANGE resolved as shift
  ! shift/reduce conflict for SMALLEQ resolved as shift
  ! shift/reduce conflict for BIGGESTEQ resolved as shift
  ! shift/reduce conflict for BIGGSMALLEQ resolved as shift
  ! shift/reduce conflict for DOUBLEBAR resolved as shift
  ! shift/reduce conflict for DOUBLEE resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for SIMPLEBAR resolved as shift
  ! shift/reduce conflict for SIMPLEE resolved as shift
  ! shift/reduce conflict for CIRCUMFLEX resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for DOUBLEEQUAL resolved as shift
    PONTOVIRGULA    reduce using rule 57 (exp -> exp REST exp .)
    WHILE           reduce using rule 57 (exp -> exp REST exp .)
    RETURN          reduce using rule 57 (exp -> exp REST exp .)
    ID              reduce using rule 57 (exp -> exp REST exp .)
    DEF             reduce using rule 57 (exp -> exp REST exp .)
    NUMBER          reduce using rule 57 (exp -> exp REST exp .)
    STRING          reduce using rule 57 (exp -> exp REST exp .)
    IF              reduce using rule 57 (exp -> exp REST exp .)
    $end            reduce using rule 57 (exp -> exp REST exp .)
    END             reduce using rule 57 (exp -> exp REST exp .)
    DO              reduce using rule 57 (exp -> exp REST exp .)
    ELSE            reduce using rule 57 (exp -> exp REST exp .)
    THEN            reduce using rule 57 (exp -> exp REST exp .)
    VIRGULA         reduce using rule 57 (exp -> exp REST exp .)
    RPAREN          reduce using rule 57 (exp -> exp REST exp .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51

  ! PLUS            [ reduce using rule 57 (exp -> exp REST exp .) ]
  ! MINUS           [ reduce using rule 57 (exp -> exp REST exp .) ]
  ! TIMES           [ reduce using rule 57 (exp -> exp REST exp .) ]
  ! DIV             [ reduce using rule 57 (exp -> exp REST exp .) ]
  ! EXPO            [ reduce using rule 57 (exp -> exp REST exp .) ]
  ! REST            [ reduce using rule 57 (exp -> exp REST exp .) ]
  ! TRIPLEEQ        [ reduce using rule 57 (exp -> exp REST exp .) ]
  ! SMALL           [ reduce using rule 57 (exp -> exp REST exp .) ]
  ! BIGGEST         [ reduce using rule 57 (exp -> exp REST exp .) ]
  ! DIFF            [ reduce using rule 57 (exp -> exp REST exp .) ]
  ! POINTRANGE      [ reduce using rule 57 (exp -> exp REST exp .) ]
  ! SMALLEQ         [ reduce using rule 57 (exp -> exp REST exp .) ]
  ! BIGGESTEQ       [ reduce using rule 57 (exp -> exp REST exp .) ]
  ! BIGGSMALLEQ     [ reduce using rule 57 (exp -> exp REST exp .) ]
  ! DOUBLEBAR       [ reduce using rule 57 (exp -> exp REST exp .) ]
  ! DOUBLEE         [ reduce using rule 57 (exp -> exp REST exp .) ]
  ! EXCLAMATION     [ reduce using rule 57 (exp -> exp REST exp .) ]
  ! SIMPLEBAR       [ reduce using rule 57 (exp -> exp REST exp .) ]
  ! SIMPLEE         [ reduce using rule 57 (exp -> exp REST exp .) ]
  ! CIRCUMFLEX      [ reduce using rule 57 (exp -> exp REST exp .) ]
  ! NEGATION        [ reduce using rule 57 (exp -> exp REST exp .) ]
  ! LSHIFT          [ reduce using rule 57 (exp -> exp REST exp .) ]
  ! RSHIFT          [ reduce using rule 57 (exp -> exp REST exp .) ]
  ! DOUBLEEQUAL     [ reduce using rule 57 (exp -> exp REST exp .) ]


state 66

    (58) exp -> exp TRIPLEEQ exp .
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXPO resolved as shift
  ! shift/reduce conflict for REST resolved as shift
  ! shift/reduce conflict for TRIPLEEQ resolved as shift
  ! shift/reduce conflict for SMALL resolved as shift
  ! shift/reduce conflict for BIGGEST resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for POINTRANGE resolved as shift
  ! shift/reduce conflict for SMALLEQ resolved as shift
  ! shift/reduce conflict for BIGGESTEQ resolved as shift
  ! shift/reduce conflict for BIGGSMALLEQ resolved as shift
  ! shift/reduce conflict for DOUBLEBAR resolved as shift
  ! shift/reduce conflict for DOUBLEE resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for SIMPLEBAR resolved as shift
  ! shift/reduce conflict for SIMPLEE resolved as shift
  ! shift/reduce conflict for CIRCUMFLEX resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for DOUBLEEQUAL resolved as shift
    PONTOVIRGULA    reduce using rule 58 (exp -> exp TRIPLEEQ exp .)
    WHILE           reduce using rule 58 (exp -> exp TRIPLEEQ exp .)
    RETURN          reduce using rule 58 (exp -> exp TRIPLEEQ exp .)
    ID              reduce using rule 58 (exp -> exp TRIPLEEQ exp .)
    DEF             reduce using rule 58 (exp -> exp TRIPLEEQ exp .)
    NUMBER          reduce using rule 58 (exp -> exp TRIPLEEQ exp .)
    STRING          reduce using rule 58 (exp -> exp TRIPLEEQ exp .)
    IF              reduce using rule 58 (exp -> exp TRIPLEEQ exp .)
    $end            reduce using rule 58 (exp -> exp TRIPLEEQ exp .)
    END             reduce using rule 58 (exp -> exp TRIPLEEQ exp .)
    DO              reduce using rule 58 (exp -> exp TRIPLEEQ exp .)
    ELSE            reduce using rule 58 (exp -> exp TRIPLEEQ exp .)
    THEN            reduce using rule 58 (exp -> exp TRIPLEEQ exp .)
    VIRGULA         reduce using rule 58 (exp -> exp TRIPLEEQ exp .)
    RPAREN          reduce using rule 58 (exp -> exp TRIPLEEQ exp .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51

  ! PLUS            [ reduce using rule 58 (exp -> exp TRIPLEEQ exp .) ]
  ! MINUS           [ reduce using rule 58 (exp -> exp TRIPLEEQ exp .) ]
  ! TIMES           [ reduce using rule 58 (exp -> exp TRIPLEEQ exp .) ]
  ! DIV             [ reduce using rule 58 (exp -> exp TRIPLEEQ exp .) ]
  ! EXPO            [ reduce using rule 58 (exp -> exp TRIPLEEQ exp .) ]
  ! REST            [ reduce using rule 58 (exp -> exp TRIPLEEQ exp .) ]
  ! TRIPLEEQ        [ reduce using rule 58 (exp -> exp TRIPLEEQ exp .) ]
  ! SMALL           [ reduce using rule 58 (exp -> exp TRIPLEEQ exp .) ]
  ! BIGGEST         [ reduce using rule 58 (exp -> exp TRIPLEEQ exp .) ]
  ! DIFF            [ reduce using rule 58 (exp -> exp TRIPLEEQ exp .) ]
  ! POINTRANGE      [ reduce using rule 58 (exp -> exp TRIPLEEQ exp .) ]
  ! SMALLEQ         [ reduce using rule 58 (exp -> exp TRIPLEEQ exp .) ]
  ! BIGGESTEQ       [ reduce using rule 58 (exp -> exp TRIPLEEQ exp .) ]
  ! BIGGSMALLEQ     [ reduce using rule 58 (exp -> exp TRIPLEEQ exp .) ]
  ! DOUBLEBAR       [ reduce using rule 58 (exp -> exp TRIPLEEQ exp .) ]
  ! DOUBLEE         [ reduce using rule 58 (exp -> exp TRIPLEEQ exp .) ]
  ! EXCLAMATION     [ reduce using rule 58 (exp -> exp TRIPLEEQ exp .) ]
  ! SIMPLEBAR       [ reduce using rule 58 (exp -> exp TRIPLEEQ exp .) ]
  ! SIMPLEE         [ reduce using rule 58 (exp -> exp TRIPLEEQ exp .) ]
  ! CIRCUMFLEX      [ reduce using rule 58 (exp -> exp TRIPLEEQ exp .) ]
  ! NEGATION        [ reduce using rule 58 (exp -> exp TRIPLEEQ exp .) ]
  ! LSHIFT          [ reduce using rule 58 (exp -> exp TRIPLEEQ exp .) ]
  ! RSHIFT          [ reduce using rule 58 (exp -> exp TRIPLEEQ exp .) ]
  ! DOUBLEEQUAL     [ reduce using rule 58 (exp -> exp TRIPLEEQ exp .) ]


state 67

    (59) exp -> exp SMALL exp .
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXPO resolved as shift
  ! shift/reduce conflict for REST resolved as shift
  ! shift/reduce conflict for TRIPLEEQ resolved as shift
  ! shift/reduce conflict for SMALL resolved as shift
  ! shift/reduce conflict for BIGGEST resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for POINTRANGE resolved as shift
  ! shift/reduce conflict for SMALLEQ resolved as shift
  ! shift/reduce conflict for BIGGESTEQ resolved as shift
  ! shift/reduce conflict for BIGGSMALLEQ resolved as shift
  ! shift/reduce conflict for DOUBLEBAR resolved as shift
  ! shift/reduce conflict for DOUBLEE resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for SIMPLEBAR resolved as shift
  ! shift/reduce conflict for SIMPLEE resolved as shift
  ! shift/reduce conflict for CIRCUMFLEX resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for DOUBLEEQUAL resolved as shift
    PONTOVIRGULA    reduce using rule 59 (exp -> exp SMALL exp .)
    WHILE           reduce using rule 59 (exp -> exp SMALL exp .)
    RETURN          reduce using rule 59 (exp -> exp SMALL exp .)
    ID              reduce using rule 59 (exp -> exp SMALL exp .)
    DEF             reduce using rule 59 (exp -> exp SMALL exp .)
    NUMBER          reduce using rule 59 (exp -> exp SMALL exp .)
    STRING          reduce using rule 59 (exp -> exp SMALL exp .)
    IF              reduce using rule 59 (exp -> exp SMALL exp .)
    $end            reduce using rule 59 (exp -> exp SMALL exp .)
    END             reduce using rule 59 (exp -> exp SMALL exp .)
    DO              reduce using rule 59 (exp -> exp SMALL exp .)
    ELSE            reduce using rule 59 (exp -> exp SMALL exp .)
    THEN            reduce using rule 59 (exp -> exp SMALL exp .)
    VIRGULA         reduce using rule 59 (exp -> exp SMALL exp .)
    RPAREN          reduce using rule 59 (exp -> exp SMALL exp .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51

  ! PLUS            [ reduce using rule 59 (exp -> exp SMALL exp .) ]
  ! MINUS           [ reduce using rule 59 (exp -> exp SMALL exp .) ]
  ! TIMES           [ reduce using rule 59 (exp -> exp SMALL exp .) ]
  ! DIV             [ reduce using rule 59 (exp -> exp SMALL exp .) ]
  ! EXPO            [ reduce using rule 59 (exp -> exp SMALL exp .) ]
  ! REST            [ reduce using rule 59 (exp -> exp SMALL exp .) ]
  ! TRIPLEEQ        [ reduce using rule 59 (exp -> exp SMALL exp .) ]
  ! SMALL           [ reduce using rule 59 (exp -> exp SMALL exp .) ]
  ! BIGGEST         [ reduce using rule 59 (exp -> exp SMALL exp .) ]
  ! DIFF            [ reduce using rule 59 (exp -> exp SMALL exp .) ]
  ! POINTRANGE      [ reduce using rule 59 (exp -> exp SMALL exp .) ]
  ! SMALLEQ         [ reduce using rule 59 (exp -> exp SMALL exp .) ]
  ! BIGGESTEQ       [ reduce using rule 59 (exp -> exp SMALL exp .) ]
  ! BIGGSMALLEQ     [ reduce using rule 59 (exp -> exp SMALL exp .) ]
  ! DOUBLEBAR       [ reduce using rule 59 (exp -> exp SMALL exp .) ]
  ! DOUBLEE         [ reduce using rule 59 (exp -> exp SMALL exp .) ]
  ! EXCLAMATION     [ reduce using rule 59 (exp -> exp SMALL exp .) ]
  ! SIMPLEBAR       [ reduce using rule 59 (exp -> exp SMALL exp .) ]
  ! SIMPLEE         [ reduce using rule 59 (exp -> exp SMALL exp .) ]
  ! CIRCUMFLEX      [ reduce using rule 59 (exp -> exp SMALL exp .) ]
  ! NEGATION        [ reduce using rule 59 (exp -> exp SMALL exp .) ]
  ! LSHIFT          [ reduce using rule 59 (exp -> exp SMALL exp .) ]
  ! RSHIFT          [ reduce using rule 59 (exp -> exp SMALL exp .) ]
  ! DOUBLEEQUAL     [ reduce using rule 59 (exp -> exp SMALL exp .) ]


state 68

    (60) exp -> exp BIGGEST exp .
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXPO resolved as shift
  ! shift/reduce conflict for REST resolved as shift
  ! shift/reduce conflict for TRIPLEEQ resolved as shift
  ! shift/reduce conflict for SMALL resolved as shift
  ! shift/reduce conflict for BIGGEST resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for POINTRANGE resolved as shift
  ! shift/reduce conflict for SMALLEQ resolved as shift
  ! shift/reduce conflict for BIGGESTEQ resolved as shift
  ! shift/reduce conflict for BIGGSMALLEQ resolved as shift
  ! shift/reduce conflict for DOUBLEBAR resolved as shift
  ! shift/reduce conflict for DOUBLEE resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for SIMPLEBAR resolved as shift
  ! shift/reduce conflict for SIMPLEE resolved as shift
  ! shift/reduce conflict for CIRCUMFLEX resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for DOUBLEEQUAL resolved as shift
    PONTOVIRGULA    reduce using rule 60 (exp -> exp BIGGEST exp .)
    WHILE           reduce using rule 60 (exp -> exp BIGGEST exp .)
    RETURN          reduce using rule 60 (exp -> exp BIGGEST exp .)
    ID              reduce using rule 60 (exp -> exp BIGGEST exp .)
    DEF             reduce using rule 60 (exp -> exp BIGGEST exp .)
    NUMBER          reduce using rule 60 (exp -> exp BIGGEST exp .)
    STRING          reduce using rule 60 (exp -> exp BIGGEST exp .)
    IF              reduce using rule 60 (exp -> exp BIGGEST exp .)
    $end            reduce using rule 60 (exp -> exp BIGGEST exp .)
    END             reduce using rule 60 (exp -> exp BIGGEST exp .)
    DO              reduce using rule 60 (exp -> exp BIGGEST exp .)
    ELSE            reduce using rule 60 (exp -> exp BIGGEST exp .)
    THEN            reduce using rule 60 (exp -> exp BIGGEST exp .)
    VIRGULA         reduce using rule 60 (exp -> exp BIGGEST exp .)
    RPAREN          reduce using rule 60 (exp -> exp BIGGEST exp .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51

  ! PLUS            [ reduce using rule 60 (exp -> exp BIGGEST exp .) ]
  ! MINUS           [ reduce using rule 60 (exp -> exp BIGGEST exp .) ]
  ! TIMES           [ reduce using rule 60 (exp -> exp BIGGEST exp .) ]
  ! DIV             [ reduce using rule 60 (exp -> exp BIGGEST exp .) ]
  ! EXPO            [ reduce using rule 60 (exp -> exp BIGGEST exp .) ]
  ! REST            [ reduce using rule 60 (exp -> exp BIGGEST exp .) ]
  ! TRIPLEEQ        [ reduce using rule 60 (exp -> exp BIGGEST exp .) ]
  ! SMALL           [ reduce using rule 60 (exp -> exp BIGGEST exp .) ]
  ! BIGGEST         [ reduce using rule 60 (exp -> exp BIGGEST exp .) ]
  ! DIFF            [ reduce using rule 60 (exp -> exp BIGGEST exp .) ]
  ! POINTRANGE      [ reduce using rule 60 (exp -> exp BIGGEST exp .) ]
  ! SMALLEQ         [ reduce using rule 60 (exp -> exp BIGGEST exp .) ]
  ! BIGGESTEQ       [ reduce using rule 60 (exp -> exp BIGGEST exp .) ]
  ! BIGGSMALLEQ     [ reduce using rule 60 (exp -> exp BIGGEST exp .) ]
  ! DOUBLEBAR       [ reduce using rule 60 (exp -> exp BIGGEST exp .) ]
  ! DOUBLEE         [ reduce using rule 60 (exp -> exp BIGGEST exp .) ]
  ! EXCLAMATION     [ reduce using rule 60 (exp -> exp BIGGEST exp .) ]
  ! SIMPLEBAR       [ reduce using rule 60 (exp -> exp BIGGEST exp .) ]
  ! SIMPLEE         [ reduce using rule 60 (exp -> exp BIGGEST exp .) ]
  ! CIRCUMFLEX      [ reduce using rule 60 (exp -> exp BIGGEST exp .) ]
  ! NEGATION        [ reduce using rule 60 (exp -> exp BIGGEST exp .) ]
  ! LSHIFT          [ reduce using rule 60 (exp -> exp BIGGEST exp .) ]
  ! RSHIFT          [ reduce using rule 60 (exp -> exp BIGGEST exp .) ]
  ! DOUBLEEQUAL     [ reduce using rule 60 (exp -> exp BIGGEST exp .) ]


state 69

    (61) exp -> exp DIFF exp .
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXPO resolved as shift
  ! shift/reduce conflict for REST resolved as shift
  ! shift/reduce conflict for TRIPLEEQ resolved as shift
  ! shift/reduce conflict for SMALL resolved as shift
  ! shift/reduce conflict for BIGGEST resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for POINTRANGE resolved as shift
  ! shift/reduce conflict for SMALLEQ resolved as shift
  ! shift/reduce conflict for BIGGESTEQ resolved as shift
  ! shift/reduce conflict for BIGGSMALLEQ resolved as shift
  ! shift/reduce conflict for DOUBLEBAR resolved as shift
  ! shift/reduce conflict for DOUBLEE resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for SIMPLEBAR resolved as shift
  ! shift/reduce conflict for SIMPLEE resolved as shift
  ! shift/reduce conflict for CIRCUMFLEX resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for DOUBLEEQUAL resolved as shift
    PONTOVIRGULA    reduce using rule 61 (exp -> exp DIFF exp .)
    WHILE           reduce using rule 61 (exp -> exp DIFF exp .)
    RETURN          reduce using rule 61 (exp -> exp DIFF exp .)
    ID              reduce using rule 61 (exp -> exp DIFF exp .)
    DEF             reduce using rule 61 (exp -> exp DIFF exp .)
    NUMBER          reduce using rule 61 (exp -> exp DIFF exp .)
    STRING          reduce using rule 61 (exp -> exp DIFF exp .)
    IF              reduce using rule 61 (exp -> exp DIFF exp .)
    $end            reduce using rule 61 (exp -> exp DIFF exp .)
    END             reduce using rule 61 (exp -> exp DIFF exp .)
    DO              reduce using rule 61 (exp -> exp DIFF exp .)
    ELSE            reduce using rule 61 (exp -> exp DIFF exp .)
    THEN            reduce using rule 61 (exp -> exp DIFF exp .)
    VIRGULA         reduce using rule 61 (exp -> exp DIFF exp .)
    RPAREN          reduce using rule 61 (exp -> exp DIFF exp .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51

  ! PLUS            [ reduce using rule 61 (exp -> exp DIFF exp .) ]
  ! MINUS           [ reduce using rule 61 (exp -> exp DIFF exp .) ]
  ! TIMES           [ reduce using rule 61 (exp -> exp DIFF exp .) ]
  ! DIV             [ reduce using rule 61 (exp -> exp DIFF exp .) ]
  ! EXPO            [ reduce using rule 61 (exp -> exp DIFF exp .) ]
  ! REST            [ reduce using rule 61 (exp -> exp DIFF exp .) ]
  ! TRIPLEEQ        [ reduce using rule 61 (exp -> exp DIFF exp .) ]
  ! SMALL           [ reduce using rule 61 (exp -> exp DIFF exp .) ]
  ! BIGGEST         [ reduce using rule 61 (exp -> exp DIFF exp .) ]
  ! DIFF            [ reduce using rule 61 (exp -> exp DIFF exp .) ]
  ! POINTRANGE      [ reduce using rule 61 (exp -> exp DIFF exp .) ]
  ! SMALLEQ         [ reduce using rule 61 (exp -> exp DIFF exp .) ]
  ! BIGGESTEQ       [ reduce using rule 61 (exp -> exp DIFF exp .) ]
  ! BIGGSMALLEQ     [ reduce using rule 61 (exp -> exp DIFF exp .) ]
  ! DOUBLEBAR       [ reduce using rule 61 (exp -> exp DIFF exp .) ]
  ! DOUBLEE         [ reduce using rule 61 (exp -> exp DIFF exp .) ]
  ! EXCLAMATION     [ reduce using rule 61 (exp -> exp DIFF exp .) ]
  ! SIMPLEBAR       [ reduce using rule 61 (exp -> exp DIFF exp .) ]
  ! SIMPLEE         [ reduce using rule 61 (exp -> exp DIFF exp .) ]
  ! CIRCUMFLEX      [ reduce using rule 61 (exp -> exp DIFF exp .) ]
  ! NEGATION        [ reduce using rule 61 (exp -> exp DIFF exp .) ]
  ! LSHIFT          [ reduce using rule 61 (exp -> exp DIFF exp .) ]
  ! RSHIFT          [ reduce using rule 61 (exp -> exp DIFF exp .) ]
  ! DOUBLEEQUAL     [ reduce using rule 61 (exp -> exp DIFF exp .) ]


state 70

    (62) exp -> exp POINTRANGE exp .
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXPO resolved as shift
  ! shift/reduce conflict for REST resolved as shift
  ! shift/reduce conflict for TRIPLEEQ resolved as shift
  ! shift/reduce conflict for SMALL resolved as shift
  ! shift/reduce conflict for BIGGEST resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for POINTRANGE resolved as shift
  ! shift/reduce conflict for SMALLEQ resolved as shift
  ! shift/reduce conflict for BIGGESTEQ resolved as shift
  ! shift/reduce conflict for BIGGSMALLEQ resolved as shift
  ! shift/reduce conflict for DOUBLEBAR resolved as shift
  ! shift/reduce conflict for DOUBLEE resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for SIMPLEBAR resolved as shift
  ! shift/reduce conflict for SIMPLEE resolved as shift
  ! shift/reduce conflict for CIRCUMFLEX resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for DOUBLEEQUAL resolved as shift
    PONTOVIRGULA    reduce using rule 62 (exp -> exp POINTRANGE exp .)
    WHILE           reduce using rule 62 (exp -> exp POINTRANGE exp .)
    RETURN          reduce using rule 62 (exp -> exp POINTRANGE exp .)
    ID              reduce using rule 62 (exp -> exp POINTRANGE exp .)
    DEF             reduce using rule 62 (exp -> exp POINTRANGE exp .)
    NUMBER          reduce using rule 62 (exp -> exp POINTRANGE exp .)
    STRING          reduce using rule 62 (exp -> exp POINTRANGE exp .)
    IF              reduce using rule 62 (exp -> exp POINTRANGE exp .)
    $end            reduce using rule 62 (exp -> exp POINTRANGE exp .)
    END             reduce using rule 62 (exp -> exp POINTRANGE exp .)
    DO              reduce using rule 62 (exp -> exp POINTRANGE exp .)
    ELSE            reduce using rule 62 (exp -> exp POINTRANGE exp .)
    THEN            reduce using rule 62 (exp -> exp POINTRANGE exp .)
    VIRGULA         reduce using rule 62 (exp -> exp POINTRANGE exp .)
    RPAREN          reduce using rule 62 (exp -> exp POINTRANGE exp .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51

  ! PLUS            [ reduce using rule 62 (exp -> exp POINTRANGE exp .) ]
  ! MINUS           [ reduce using rule 62 (exp -> exp POINTRANGE exp .) ]
  ! TIMES           [ reduce using rule 62 (exp -> exp POINTRANGE exp .) ]
  ! DIV             [ reduce using rule 62 (exp -> exp POINTRANGE exp .) ]
  ! EXPO            [ reduce using rule 62 (exp -> exp POINTRANGE exp .) ]
  ! REST            [ reduce using rule 62 (exp -> exp POINTRANGE exp .) ]
  ! TRIPLEEQ        [ reduce using rule 62 (exp -> exp POINTRANGE exp .) ]
  ! SMALL           [ reduce using rule 62 (exp -> exp POINTRANGE exp .) ]
  ! BIGGEST         [ reduce using rule 62 (exp -> exp POINTRANGE exp .) ]
  ! DIFF            [ reduce using rule 62 (exp -> exp POINTRANGE exp .) ]
  ! POINTRANGE      [ reduce using rule 62 (exp -> exp POINTRANGE exp .) ]
  ! SMALLEQ         [ reduce using rule 62 (exp -> exp POINTRANGE exp .) ]
  ! BIGGESTEQ       [ reduce using rule 62 (exp -> exp POINTRANGE exp .) ]
  ! BIGGSMALLEQ     [ reduce using rule 62 (exp -> exp POINTRANGE exp .) ]
  ! DOUBLEBAR       [ reduce using rule 62 (exp -> exp POINTRANGE exp .) ]
  ! DOUBLEE         [ reduce using rule 62 (exp -> exp POINTRANGE exp .) ]
  ! EXCLAMATION     [ reduce using rule 62 (exp -> exp POINTRANGE exp .) ]
  ! SIMPLEBAR       [ reduce using rule 62 (exp -> exp POINTRANGE exp .) ]
  ! SIMPLEE         [ reduce using rule 62 (exp -> exp POINTRANGE exp .) ]
  ! CIRCUMFLEX      [ reduce using rule 62 (exp -> exp POINTRANGE exp .) ]
  ! NEGATION        [ reduce using rule 62 (exp -> exp POINTRANGE exp .) ]
  ! LSHIFT          [ reduce using rule 62 (exp -> exp POINTRANGE exp .) ]
  ! RSHIFT          [ reduce using rule 62 (exp -> exp POINTRANGE exp .) ]
  ! DOUBLEEQUAL     [ reduce using rule 62 (exp -> exp POINTRANGE exp .) ]


state 71

    (63) exp -> exp SMALLEQ exp .
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXPO resolved as shift
  ! shift/reduce conflict for REST resolved as shift
  ! shift/reduce conflict for TRIPLEEQ resolved as shift
  ! shift/reduce conflict for SMALL resolved as shift
  ! shift/reduce conflict for BIGGEST resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for POINTRANGE resolved as shift
  ! shift/reduce conflict for SMALLEQ resolved as shift
  ! shift/reduce conflict for BIGGESTEQ resolved as shift
  ! shift/reduce conflict for BIGGSMALLEQ resolved as shift
  ! shift/reduce conflict for DOUBLEBAR resolved as shift
  ! shift/reduce conflict for DOUBLEE resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for SIMPLEBAR resolved as shift
  ! shift/reduce conflict for SIMPLEE resolved as shift
  ! shift/reduce conflict for CIRCUMFLEX resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for DOUBLEEQUAL resolved as shift
    PONTOVIRGULA    reduce using rule 63 (exp -> exp SMALLEQ exp .)
    WHILE           reduce using rule 63 (exp -> exp SMALLEQ exp .)
    RETURN          reduce using rule 63 (exp -> exp SMALLEQ exp .)
    ID              reduce using rule 63 (exp -> exp SMALLEQ exp .)
    DEF             reduce using rule 63 (exp -> exp SMALLEQ exp .)
    NUMBER          reduce using rule 63 (exp -> exp SMALLEQ exp .)
    STRING          reduce using rule 63 (exp -> exp SMALLEQ exp .)
    IF              reduce using rule 63 (exp -> exp SMALLEQ exp .)
    $end            reduce using rule 63 (exp -> exp SMALLEQ exp .)
    END             reduce using rule 63 (exp -> exp SMALLEQ exp .)
    DO              reduce using rule 63 (exp -> exp SMALLEQ exp .)
    ELSE            reduce using rule 63 (exp -> exp SMALLEQ exp .)
    THEN            reduce using rule 63 (exp -> exp SMALLEQ exp .)
    VIRGULA         reduce using rule 63 (exp -> exp SMALLEQ exp .)
    RPAREN          reduce using rule 63 (exp -> exp SMALLEQ exp .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51

  ! PLUS            [ reduce using rule 63 (exp -> exp SMALLEQ exp .) ]
  ! MINUS           [ reduce using rule 63 (exp -> exp SMALLEQ exp .) ]
  ! TIMES           [ reduce using rule 63 (exp -> exp SMALLEQ exp .) ]
  ! DIV             [ reduce using rule 63 (exp -> exp SMALLEQ exp .) ]
  ! EXPO            [ reduce using rule 63 (exp -> exp SMALLEQ exp .) ]
  ! REST            [ reduce using rule 63 (exp -> exp SMALLEQ exp .) ]
  ! TRIPLEEQ        [ reduce using rule 63 (exp -> exp SMALLEQ exp .) ]
  ! SMALL           [ reduce using rule 63 (exp -> exp SMALLEQ exp .) ]
  ! BIGGEST         [ reduce using rule 63 (exp -> exp SMALLEQ exp .) ]
  ! DIFF            [ reduce using rule 63 (exp -> exp SMALLEQ exp .) ]
  ! POINTRANGE      [ reduce using rule 63 (exp -> exp SMALLEQ exp .) ]
  ! SMALLEQ         [ reduce using rule 63 (exp -> exp SMALLEQ exp .) ]
  ! BIGGESTEQ       [ reduce using rule 63 (exp -> exp SMALLEQ exp .) ]
  ! BIGGSMALLEQ     [ reduce using rule 63 (exp -> exp SMALLEQ exp .) ]
  ! DOUBLEBAR       [ reduce using rule 63 (exp -> exp SMALLEQ exp .) ]
  ! DOUBLEE         [ reduce using rule 63 (exp -> exp SMALLEQ exp .) ]
  ! EXCLAMATION     [ reduce using rule 63 (exp -> exp SMALLEQ exp .) ]
  ! SIMPLEBAR       [ reduce using rule 63 (exp -> exp SMALLEQ exp .) ]
  ! SIMPLEE         [ reduce using rule 63 (exp -> exp SMALLEQ exp .) ]
  ! CIRCUMFLEX      [ reduce using rule 63 (exp -> exp SMALLEQ exp .) ]
  ! NEGATION        [ reduce using rule 63 (exp -> exp SMALLEQ exp .) ]
  ! LSHIFT          [ reduce using rule 63 (exp -> exp SMALLEQ exp .) ]
  ! RSHIFT          [ reduce using rule 63 (exp -> exp SMALLEQ exp .) ]
  ! DOUBLEEQUAL     [ reduce using rule 63 (exp -> exp SMALLEQ exp .) ]


state 72

    (64) exp -> exp BIGGESTEQ exp .
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXPO resolved as shift
  ! shift/reduce conflict for REST resolved as shift
  ! shift/reduce conflict for TRIPLEEQ resolved as shift
  ! shift/reduce conflict for SMALL resolved as shift
  ! shift/reduce conflict for BIGGEST resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for POINTRANGE resolved as shift
  ! shift/reduce conflict for SMALLEQ resolved as shift
  ! shift/reduce conflict for BIGGESTEQ resolved as shift
  ! shift/reduce conflict for BIGGSMALLEQ resolved as shift
  ! shift/reduce conflict for DOUBLEBAR resolved as shift
  ! shift/reduce conflict for DOUBLEE resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for SIMPLEBAR resolved as shift
  ! shift/reduce conflict for SIMPLEE resolved as shift
  ! shift/reduce conflict for CIRCUMFLEX resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for DOUBLEEQUAL resolved as shift
    PONTOVIRGULA    reduce using rule 64 (exp -> exp BIGGESTEQ exp .)
    WHILE           reduce using rule 64 (exp -> exp BIGGESTEQ exp .)
    RETURN          reduce using rule 64 (exp -> exp BIGGESTEQ exp .)
    ID              reduce using rule 64 (exp -> exp BIGGESTEQ exp .)
    DEF             reduce using rule 64 (exp -> exp BIGGESTEQ exp .)
    NUMBER          reduce using rule 64 (exp -> exp BIGGESTEQ exp .)
    STRING          reduce using rule 64 (exp -> exp BIGGESTEQ exp .)
    IF              reduce using rule 64 (exp -> exp BIGGESTEQ exp .)
    $end            reduce using rule 64 (exp -> exp BIGGESTEQ exp .)
    END             reduce using rule 64 (exp -> exp BIGGESTEQ exp .)
    DO              reduce using rule 64 (exp -> exp BIGGESTEQ exp .)
    ELSE            reduce using rule 64 (exp -> exp BIGGESTEQ exp .)
    THEN            reduce using rule 64 (exp -> exp BIGGESTEQ exp .)
    VIRGULA         reduce using rule 64 (exp -> exp BIGGESTEQ exp .)
    RPAREN          reduce using rule 64 (exp -> exp BIGGESTEQ exp .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51

  ! PLUS            [ reduce using rule 64 (exp -> exp BIGGESTEQ exp .) ]
  ! MINUS           [ reduce using rule 64 (exp -> exp BIGGESTEQ exp .) ]
  ! TIMES           [ reduce using rule 64 (exp -> exp BIGGESTEQ exp .) ]
  ! DIV             [ reduce using rule 64 (exp -> exp BIGGESTEQ exp .) ]
  ! EXPO            [ reduce using rule 64 (exp -> exp BIGGESTEQ exp .) ]
  ! REST            [ reduce using rule 64 (exp -> exp BIGGESTEQ exp .) ]
  ! TRIPLEEQ        [ reduce using rule 64 (exp -> exp BIGGESTEQ exp .) ]
  ! SMALL           [ reduce using rule 64 (exp -> exp BIGGESTEQ exp .) ]
  ! BIGGEST         [ reduce using rule 64 (exp -> exp BIGGESTEQ exp .) ]
  ! DIFF            [ reduce using rule 64 (exp -> exp BIGGESTEQ exp .) ]
  ! POINTRANGE      [ reduce using rule 64 (exp -> exp BIGGESTEQ exp .) ]
  ! SMALLEQ         [ reduce using rule 64 (exp -> exp BIGGESTEQ exp .) ]
  ! BIGGESTEQ       [ reduce using rule 64 (exp -> exp BIGGESTEQ exp .) ]
  ! BIGGSMALLEQ     [ reduce using rule 64 (exp -> exp BIGGESTEQ exp .) ]
  ! DOUBLEBAR       [ reduce using rule 64 (exp -> exp BIGGESTEQ exp .) ]
  ! DOUBLEE         [ reduce using rule 64 (exp -> exp BIGGESTEQ exp .) ]
  ! EXCLAMATION     [ reduce using rule 64 (exp -> exp BIGGESTEQ exp .) ]
  ! SIMPLEBAR       [ reduce using rule 64 (exp -> exp BIGGESTEQ exp .) ]
  ! SIMPLEE         [ reduce using rule 64 (exp -> exp BIGGESTEQ exp .) ]
  ! CIRCUMFLEX      [ reduce using rule 64 (exp -> exp BIGGESTEQ exp .) ]
  ! NEGATION        [ reduce using rule 64 (exp -> exp BIGGESTEQ exp .) ]
  ! LSHIFT          [ reduce using rule 64 (exp -> exp BIGGESTEQ exp .) ]
  ! RSHIFT          [ reduce using rule 64 (exp -> exp BIGGESTEQ exp .) ]
  ! DOUBLEEQUAL     [ reduce using rule 64 (exp -> exp BIGGESTEQ exp .) ]


state 73

    (65) exp -> exp BIGGSMALLEQ exp .
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXPO resolved as shift
  ! shift/reduce conflict for REST resolved as shift
  ! shift/reduce conflict for TRIPLEEQ resolved as shift
  ! shift/reduce conflict for SMALL resolved as shift
  ! shift/reduce conflict for BIGGEST resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for POINTRANGE resolved as shift
  ! shift/reduce conflict for SMALLEQ resolved as shift
  ! shift/reduce conflict for BIGGESTEQ resolved as shift
  ! shift/reduce conflict for BIGGSMALLEQ resolved as shift
  ! shift/reduce conflict for DOUBLEBAR resolved as shift
  ! shift/reduce conflict for DOUBLEE resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for SIMPLEBAR resolved as shift
  ! shift/reduce conflict for SIMPLEE resolved as shift
  ! shift/reduce conflict for CIRCUMFLEX resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for DOUBLEEQUAL resolved as shift
    PONTOVIRGULA    reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .)
    WHILE           reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .)
    RETURN          reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .)
    ID              reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .)
    DEF             reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .)
    NUMBER          reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .)
    STRING          reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .)
    IF              reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .)
    $end            reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .)
    END             reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .)
    DO              reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .)
    ELSE            reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .)
    THEN            reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .)
    VIRGULA         reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .)
    RPAREN          reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51

  ! PLUS            [ reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .) ]
  ! MINUS           [ reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .) ]
  ! TIMES           [ reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .) ]
  ! DIV             [ reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .) ]
  ! EXPO            [ reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .) ]
  ! REST            [ reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .) ]
  ! TRIPLEEQ        [ reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .) ]
  ! SMALL           [ reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .) ]
  ! BIGGEST         [ reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .) ]
  ! DIFF            [ reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .) ]
  ! POINTRANGE      [ reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .) ]
  ! SMALLEQ         [ reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .) ]
  ! BIGGESTEQ       [ reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .) ]
  ! BIGGSMALLEQ     [ reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .) ]
  ! DOUBLEBAR       [ reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .) ]
  ! DOUBLEE         [ reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .) ]
  ! EXCLAMATION     [ reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .) ]
  ! SIMPLEBAR       [ reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .) ]
  ! SIMPLEE         [ reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .) ]
  ! CIRCUMFLEX      [ reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .) ]
  ! NEGATION        [ reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .) ]
  ! LSHIFT          [ reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .) ]
  ! RSHIFT          [ reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .) ]
  ! DOUBLEEQUAL     [ reduce using rule 65 (exp -> exp BIGGSMALLEQ exp .) ]


state 74

    (66) exp -> exp DOUBLEBAR exp .
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXPO resolved as shift
  ! shift/reduce conflict for REST resolved as shift
  ! shift/reduce conflict for TRIPLEEQ resolved as shift
  ! shift/reduce conflict for SMALL resolved as shift
  ! shift/reduce conflict for BIGGEST resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for POINTRANGE resolved as shift
  ! shift/reduce conflict for SMALLEQ resolved as shift
  ! shift/reduce conflict for BIGGESTEQ resolved as shift
  ! shift/reduce conflict for BIGGSMALLEQ resolved as shift
  ! shift/reduce conflict for DOUBLEBAR resolved as shift
  ! shift/reduce conflict for DOUBLEE resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for SIMPLEBAR resolved as shift
  ! shift/reduce conflict for SIMPLEE resolved as shift
  ! shift/reduce conflict for CIRCUMFLEX resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for DOUBLEEQUAL resolved as shift
    PONTOVIRGULA    reduce using rule 66 (exp -> exp DOUBLEBAR exp .)
    WHILE           reduce using rule 66 (exp -> exp DOUBLEBAR exp .)
    RETURN          reduce using rule 66 (exp -> exp DOUBLEBAR exp .)
    ID              reduce using rule 66 (exp -> exp DOUBLEBAR exp .)
    DEF             reduce using rule 66 (exp -> exp DOUBLEBAR exp .)
    NUMBER          reduce using rule 66 (exp -> exp DOUBLEBAR exp .)
    STRING          reduce using rule 66 (exp -> exp DOUBLEBAR exp .)
    IF              reduce using rule 66 (exp -> exp DOUBLEBAR exp .)
    $end            reduce using rule 66 (exp -> exp DOUBLEBAR exp .)
    END             reduce using rule 66 (exp -> exp DOUBLEBAR exp .)
    DO              reduce using rule 66 (exp -> exp DOUBLEBAR exp .)
    ELSE            reduce using rule 66 (exp -> exp DOUBLEBAR exp .)
    THEN            reduce using rule 66 (exp -> exp DOUBLEBAR exp .)
    VIRGULA         reduce using rule 66 (exp -> exp DOUBLEBAR exp .)
    RPAREN          reduce using rule 66 (exp -> exp DOUBLEBAR exp .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51

  ! PLUS            [ reduce using rule 66 (exp -> exp DOUBLEBAR exp .) ]
  ! MINUS           [ reduce using rule 66 (exp -> exp DOUBLEBAR exp .) ]
  ! TIMES           [ reduce using rule 66 (exp -> exp DOUBLEBAR exp .) ]
  ! DIV             [ reduce using rule 66 (exp -> exp DOUBLEBAR exp .) ]
  ! EXPO            [ reduce using rule 66 (exp -> exp DOUBLEBAR exp .) ]
  ! REST            [ reduce using rule 66 (exp -> exp DOUBLEBAR exp .) ]
  ! TRIPLEEQ        [ reduce using rule 66 (exp -> exp DOUBLEBAR exp .) ]
  ! SMALL           [ reduce using rule 66 (exp -> exp DOUBLEBAR exp .) ]
  ! BIGGEST         [ reduce using rule 66 (exp -> exp DOUBLEBAR exp .) ]
  ! DIFF            [ reduce using rule 66 (exp -> exp DOUBLEBAR exp .) ]
  ! POINTRANGE      [ reduce using rule 66 (exp -> exp DOUBLEBAR exp .) ]
  ! SMALLEQ         [ reduce using rule 66 (exp -> exp DOUBLEBAR exp .) ]
  ! BIGGESTEQ       [ reduce using rule 66 (exp -> exp DOUBLEBAR exp .) ]
  ! BIGGSMALLEQ     [ reduce using rule 66 (exp -> exp DOUBLEBAR exp .) ]
  ! DOUBLEBAR       [ reduce using rule 66 (exp -> exp DOUBLEBAR exp .) ]
  ! DOUBLEE         [ reduce using rule 66 (exp -> exp DOUBLEBAR exp .) ]
  ! EXCLAMATION     [ reduce using rule 66 (exp -> exp DOUBLEBAR exp .) ]
  ! SIMPLEBAR       [ reduce using rule 66 (exp -> exp DOUBLEBAR exp .) ]
  ! SIMPLEE         [ reduce using rule 66 (exp -> exp DOUBLEBAR exp .) ]
  ! CIRCUMFLEX      [ reduce using rule 66 (exp -> exp DOUBLEBAR exp .) ]
  ! NEGATION        [ reduce using rule 66 (exp -> exp DOUBLEBAR exp .) ]
  ! LSHIFT          [ reduce using rule 66 (exp -> exp DOUBLEBAR exp .) ]
  ! RSHIFT          [ reduce using rule 66 (exp -> exp DOUBLEBAR exp .) ]
  ! DOUBLEEQUAL     [ reduce using rule 66 (exp -> exp DOUBLEBAR exp .) ]


state 75

    (67) exp -> exp DOUBLEE exp .
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXPO resolved as shift
  ! shift/reduce conflict for REST resolved as shift
  ! shift/reduce conflict for TRIPLEEQ resolved as shift
  ! shift/reduce conflict for SMALL resolved as shift
  ! shift/reduce conflict for BIGGEST resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for POINTRANGE resolved as shift
  ! shift/reduce conflict for SMALLEQ resolved as shift
  ! shift/reduce conflict for BIGGESTEQ resolved as shift
  ! shift/reduce conflict for BIGGSMALLEQ resolved as shift
  ! shift/reduce conflict for DOUBLEBAR resolved as shift
  ! shift/reduce conflict for DOUBLEE resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for SIMPLEBAR resolved as shift
  ! shift/reduce conflict for SIMPLEE resolved as shift
  ! shift/reduce conflict for CIRCUMFLEX resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for DOUBLEEQUAL resolved as shift
    PONTOVIRGULA    reduce using rule 67 (exp -> exp DOUBLEE exp .)
    WHILE           reduce using rule 67 (exp -> exp DOUBLEE exp .)
    RETURN          reduce using rule 67 (exp -> exp DOUBLEE exp .)
    ID              reduce using rule 67 (exp -> exp DOUBLEE exp .)
    DEF             reduce using rule 67 (exp -> exp DOUBLEE exp .)
    NUMBER          reduce using rule 67 (exp -> exp DOUBLEE exp .)
    STRING          reduce using rule 67 (exp -> exp DOUBLEE exp .)
    IF              reduce using rule 67 (exp -> exp DOUBLEE exp .)
    $end            reduce using rule 67 (exp -> exp DOUBLEE exp .)
    END             reduce using rule 67 (exp -> exp DOUBLEE exp .)
    DO              reduce using rule 67 (exp -> exp DOUBLEE exp .)
    ELSE            reduce using rule 67 (exp -> exp DOUBLEE exp .)
    THEN            reduce using rule 67 (exp -> exp DOUBLEE exp .)
    VIRGULA         reduce using rule 67 (exp -> exp DOUBLEE exp .)
    RPAREN          reduce using rule 67 (exp -> exp DOUBLEE exp .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51

  ! PLUS            [ reduce using rule 67 (exp -> exp DOUBLEE exp .) ]
  ! MINUS           [ reduce using rule 67 (exp -> exp DOUBLEE exp .) ]
  ! TIMES           [ reduce using rule 67 (exp -> exp DOUBLEE exp .) ]
  ! DIV             [ reduce using rule 67 (exp -> exp DOUBLEE exp .) ]
  ! EXPO            [ reduce using rule 67 (exp -> exp DOUBLEE exp .) ]
  ! REST            [ reduce using rule 67 (exp -> exp DOUBLEE exp .) ]
  ! TRIPLEEQ        [ reduce using rule 67 (exp -> exp DOUBLEE exp .) ]
  ! SMALL           [ reduce using rule 67 (exp -> exp DOUBLEE exp .) ]
  ! BIGGEST         [ reduce using rule 67 (exp -> exp DOUBLEE exp .) ]
  ! DIFF            [ reduce using rule 67 (exp -> exp DOUBLEE exp .) ]
  ! POINTRANGE      [ reduce using rule 67 (exp -> exp DOUBLEE exp .) ]
  ! SMALLEQ         [ reduce using rule 67 (exp -> exp DOUBLEE exp .) ]
  ! BIGGESTEQ       [ reduce using rule 67 (exp -> exp DOUBLEE exp .) ]
  ! BIGGSMALLEQ     [ reduce using rule 67 (exp -> exp DOUBLEE exp .) ]
  ! DOUBLEBAR       [ reduce using rule 67 (exp -> exp DOUBLEE exp .) ]
  ! DOUBLEE         [ reduce using rule 67 (exp -> exp DOUBLEE exp .) ]
  ! EXCLAMATION     [ reduce using rule 67 (exp -> exp DOUBLEE exp .) ]
  ! SIMPLEBAR       [ reduce using rule 67 (exp -> exp DOUBLEE exp .) ]
  ! SIMPLEE         [ reduce using rule 67 (exp -> exp DOUBLEE exp .) ]
  ! CIRCUMFLEX      [ reduce using rule 67 (exp -> exp DOUBLEE exp .) ]
  ! NEGATION        [ reduce using rule 67 (exp -> exp DOUBLEE exp .) ]
  ! LSHIFT          [ reduce using rule 67 (exp -> exp DOUBLEE exp .) ]
  ! RSHIFT          [ reduce using rule 67 (exp -> exp DOUBLEE exp .) ]
  ! DOUBLEEQUAL     [ reduce using rule 67 (exp -> exp DOUBLEE exp .) ]


state 76

    (68) exp -> exp EXCLAMATION exp .
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXPO resolved as shift
  ! shift/reduce conflict for REST resolved as shift
  ! shift/reduce conflict for TRIPLEEQ resolved as shift
  ! shift/reduce conflict for SMALL resolved as shift
  ! shift/reduce conflict for BIGGEST resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for POINTRANGE resolved as shift
  ! shift/reduce conflict for SMALLEQ resolved as shift
  ! shift/reduce conflict for BIGGESTEQ resolved as shift
  ! shift/reduce conflict for BIGGSMALLEQ resolved as shift
  ! shift/reduce conflict for DOUBLEBAR resolved as shift
  ! shift/reduce conflict for DOUBLEE resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for SIMPLEBAR resolved as shift
  ! shift/reduce conflict for SIMPLEE resolved as shift
  ! shift/reduce conflict for CIRCUMFLEX resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for DOUBLEEQUAL resolved as shift
    PONTOVIRGULA    reduce using rule 68 (exp -> exp EXCLAMATION exp .)
    WHILE           reduce using rule 68 (exp -> exp EXCLAMATION exp .)
    RETURN          reduce using rule 68 (exp -> exp EXCLAMATION exp .)
    ID              reduce using rule 68 (exp -> exp EXCLAMATION exp .)
    DEF             reduce using rule 68 (exp -> exp EXCLAMATION exp .)
    NUMBER          reduce using rule 68 (exp -> exp EXCLAMATION exp .)
    STRING          reduce using rule 68 (exp -> exp EXCLAMATION exp .)
    IF              reduce using rule 68 (exp -> exp EXCLAMATION exp .)
    $end            reduce using rule 68 (exp -> exp EXCLAMATION exp .)
    END             reduce using rule 68 (exp -> exp EXCLAMATION exp .)
    DO              reduce using rule 68 (exp -> exp EXCLAMATION exp .)
    ELSE            reduce using rule 68 (exp -> exp EXCLAMATION exp .)
    THEN            reduce using rule 68 (exp -> exp EXCLAMATION exp .)
    VIRGULA         reduce using rule 68 (exp -> exp EXCLAMATION exp .)
    RPAREN          reduce using rule 68 (exp -> exp EXCLAMATION exp .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51

  ! PLUS            [ reduce using rule 68 (exp -> exp EXCLAMATION exp .) ]
  ! MINUS           [ reduce using rule 68 (exp -> exp EXCLAMATION exp .) ]
  ! TIMES           [ reduce using rule 68 (exp -> exp EXCLAMATION exp .) ]
  ! DIV             [ reduce using rule 68 (exp -> exp EXCLAMATION exp .) ]
  ! EXPO            [ reduce using rule 68 (exp -> exp EXCLAMATION exp .) ]
  ! REST            [ reduce using rule 68 (exp -> exp EXCLAMATION exp .) ]
  ! TRIPLEEQ        [ reduce using rule 68 (exp -> exp EXCLAMATION exp .) ]
  ! SMALL           [ reduce using rule 68 (exp -> exp EXCLAMATION exp .) ]
  ! BIGGEST         [ reduce using rule 68 (exp -> exp EXCLAMATION exp .) ]
  ! DIFF            [ reduce using rule 68 (exp -> exp EXCLAMATION exp .) ]
  ! POINTRANGE      [ reduce using rule 68 (exp -> exp EXCLAMATION exp .) ]
  ! SMALLEQ         [ reduce using rule 68 (exp -> exp EXCLAMATION exp .) ]
  ! BIGGESTEQ       [ reduce using rule 68 (exp -> exp EXCLAMATION exp .) ]
  ! BIGGSMALLEQ     [ reduce using rule 68 (exp -> exp EXCLAMATION exp .) ]
  ! DOUBLEBAR       [ reduce using rule 68 (exp -> exp EXCLAMATION exp .) ]
  ! DOUBLEE         [ reduce using rule 68 (exp -> exp EXCLAMATION exp .) ]
  ! EXCLAMATION     [ reduce using rule 68 (exp -> exp EXCLAMATION exp .) ]
  ! SIMPLEBAR       [ reduce using rule 68 (exp -> exp EXCLAMATION exp .) ]
  ! SIMPLEE         [ reduce using rule 68 (exp -> exp EXCLAMATION exp .) ]
  ! CIRCUMFLEX      [ reduce using rule 68 (exp -> exp EXCLAMATION exp .) ]
  ! NEGATION        [ reduce using rule 68 (exp -> exp EXCLAMATION exp .) ]
  ! LSHIFT          [ reduce using rule 68 (exp -> exp EXCLAMATION exp .) ]
  ! RSHIFT          [ reduce using rule 68 (exp -> exp EXCLAMATION exp .) ]
  ! DOUBLEEQUAL     [ reduce using rule 68 (exp -> exp EXCLAMATION exp .) ]


state 77

    (69) exp -> exp SIMPLEBAR exp .
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXPO resolved as shift
  ! shift/reduce conflict for REST resolved as shift
  ! shift/reduce conflict for TRIPLEEQ resolved as shift
  ! shift/reduce conflict for SMALL resolved as shift
  ! shift/reduce conflict for BIGGEST resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for POINTRANGE resolved as shift
  ! shift/reduce conflict for SMALLEQ resolved as shift
  ! shift/reduce conflict for BIGGESTEQ resolved as shift
  ! shift/reduce conflict for BIGGSMALLEQ resolved as shift
  ! shift/reduce conflict for DOUBLEBAR resolved as shift
  ! shift/reduce conflict for DOUBLEE resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for SIMPLEBAR resolved as shift
  ! shift/reduce conflict for SIMPLEE resolved as shift
  ! shift/reduce conflict for CIRCUMFLEX resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for DOUBLEEQUAL resolved as shift
    PONTOVIRGULA    reduce using rule 69 (exp -> exp SIMPLEBAR exp .)
    WHILE           reduce using rule 69 (exp -> exp SIMPLEBAR exp .)
    RETURN          reduce using rule 69 (exp -> exp SIMPLEBAR exp .)
    ID              reduce using rule 69 (exp -> exp SIMPLEBAR exp .)
    DEF             reduce using rule 69 (exp -> exp SIMPLEBAR exp .)
    NUMBER          reduce using rule 69 (exp -> exp SIMPLEBAR exp .)
    STRING          reduce using rule 69 (exp -> exp SIMPLEBAR exp .)
    IF              reduce using rule 69 (exp -> exp SIMPLEBAR exp .)
    $end            reduce using rule 69 (exp -> exp SIMPLEBAR exp .)
    END             reduce using rule 69 (exp -> exp SIMPLEBAR exp .)
    DO              reduce using rule 69 (exp -> exp SIMPLEBAR exp .)
    ELSE            reduce using rule 69 (exp -> exp SIMPLEBAR exp .)
    THEN            reduce using rule 69 (exp -> exp SIMPLEBAR exp .)
    VIRGULA         reduce using rule 69 (exp -> exp SIMPLEBAR exp .)
    RPAREN          reduce using rule 69 (exp -> exp SIMPLEBAR exp .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51

  ! PLUS            [ reduce using rule 69 (exp -> exp SIMPLEBAR exp .) ]
  ! MINUS           [ reduce using rule 69 (exp -> exp SIMPLEBAR exp .) ]
  ! TIMES           [ reduce using rule 69 (exp -> exp SIMPLEBAR exp .) ]
  ! DIV             [ reduce using rule 69 (exp -> exp SIMPLEBAR exp .) ]
  ! EXPO            [ reduce using rule 69 (exp -> exp SIMPLEBAR exp .) ]
  ! REST            [ reduce using rule 69 (exp -> exp SIMPLEBAR exp .) ]
  ! TRIPLEEQ        [ reduce using rule 69 (exp -> exp SIMPLEBAR exp .) ]
  ! SMALL           [ reduce using rule 69 (exp -> exp SIMPLEBAR exp .) ]
  ! BIGGEST         [ reduce using rule 69 (exp -> exp SIMPLEBAR exp .) ]
  ! DIFF            [ reduce using rule 69 (exp -> exp SIMPLEBAR exp .) ]
  ! POINTRANGE      [ reduce using rule 69 (exp -> exp SIMPLEBAR exp .) ]
  ! SMALLEQ         [ reduce using rule 69 (exp -> exp SIMPLEBAR exp .) ]
  ! BIGGESTEQ       [ reduce using rule 69 (exp -> exp SIMPLEBAR exp .) ]
  ! BIGGSMALLEQ     [ reduce using rule 69 (exp -> exp SIMPLEBAR exp .) ]
  ! DOUBLEBAR       [ reduce using rule 69 (exp -> exp SIMPLEBAR exp .) ]
  ! DOUBLEE         [ reduce using rule 69 (exp -> exp SIMPLEBAR exp .) ]
  ! EXCLAMATION     [ reduce using rule 69 (exp -> exp SIMPLEBAR exp .) ]
  ! SIMPLEBAR       [ reduce using rule 69 (exp -> exp SIMPLEBAR exp .) ]
  ! SIMPLEE         [ reduce using rule 69 (exp -> exp SIMPLEBAR exp .) ]
  ! CIRCUMFLEX      [ reduce using rule 69 (exp -> exp SIMPLEBAR exp .) ]
  ! NEGATION        [ reduce using rule 69 (exp -> exp SIMPLEBAR exp .) ]
  ! LSHIFT          [ reduce using rule 69 (exp -> exp SIMPLEBAR exp .) ]
  ! RSHIFT          [ reduce using rule 69 (exp -> exp SIMPLEBAR exp .) ]
  ! DOUBLEEQUAL     [ reduce using rule 69 (exp -> exp SIMPLEBAR exp .) ]


state 78

    (70) exp -> exp SIMPLEE exp .
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXPO resolved as shift
  ! shift/reduce conflict for REST resolved as shift
  ! shift/reduce conflict for TRIPLEEQ resolved as shift
  ! shift/reduce conflict for SMALL resolved as shift
  ! shift/reduce conflict for BIGGEST resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for POINTRANGE resolved as shift
  ! shift/reduce conflict for SMALLEQ resolved as shift
  ! shift/reduce conflict for BIGGESTEQ resolved as shift
  ! shift/reduce conflict for BIGGSMALLEQ resolved as shift
  ! shift/reduce conflict for DOUBLEBAR resolved as shift
  ! shift/reduce conflict for DOUBLEE resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for SIMPLEBAR resolved as shift
  ! shift/reduce conflict for SIMPLEE resolved as shift
  ! shift/reduce conflict for CIRCUMFLEX resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for DOUBLEEQUAL resolved as shift
    PONTOVIRGULA    reduce using rule 70 (exp -> exp SIMPLEE exp .)
    WHILE           reduce using rule 70 (exp -> exp SIMPLEE exp .)
    RETURN          reduce using rule 70 (exp -> exp SIMPLEE exp .)
    ID              reduce using rule 70 (exp -> exp SIMPLEE exp .)
    DEF             reduce using rule 70 (exp -> exp SIMPLEE exp .)
    NUMBER          reduce using rule 70 (exp -> exp SIMPLEE exp .)
    STRING          reduce using rule 70 (exp -> exp SIMPLEE exp .)
    IF              reduce using rule 70 (exp -> exp SIMPLEE exp .)
    $end            reduce using rule 70 (exp -> exp SIMPLEE exp .)
    END             reduce using rule 70 (exp -> exp SIMPLEE exp .)
    DO              reduce using rule 70 (exp -> exp SIMPLEE exp .)
    ELSE            reduce using rule 70 (exp -> exp SIMPLEE exp .)
    THEN            reduce using rule 70 (exp -> exp SIMPLEE exp .)
    VIRGULA         reduce using rule 70 (exp -> exp SIMPLEE exp .)
    RPAREN          reduce using rule 70 (exp -> exp SIMPLEE exp .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51

  ! PLUS            [ reduce using rule 70 (exp -> exp SIMPLEE exp .) ]
  ! MINUS           [ reduce using rule 70 (exp -> exp SIMPLEE exp .) ]
  ! TIMES           [ reduce using rule 70 (exp -> exp SIMPLEE exp .) ]
  ! DIV             [ reduce using rule 70 (exp -> exp SIMPLEE exp .) ]
  ! EXPO            [ reduce using rule 70 (exp -> exp SIMPLEE exp .) ]
  ! REST            [ reduce using rule 70 (exp -> exp SIMPLEE exp .) ]
  ! TRIPLEEQ        [ reduce using rule 70 (exp -> exp SIMPLEE exp .) ]
  ! SMALL           [ reduce using rule 70 (exp -> exp SIMPLEE exp .) ]
  ! BIGGEST         [ reduce using rule 70 (exp -> exp SIMPLEE exp .) ]
  ! DIFF            [ reduce using rule 70 (exp -> exp SIMPLEE exp .) ]
  ! POINTRANGE      [ reduce using rule 70 (exp -> exp SIMPLEE exp .) ]
  ! SMALLEQ         [ reduce using rule 70 (exp -> exp SIMPLEE exp .) ]
  ! BIGGESTEQ       [ reduce using rule 70 (exp -> exp SIMPLEE exp .) ]
  ! BIGGSMALLEQ     [ reduce using rule 70 (exp -> exp SIMPLEE exp .) ]
  ! DOUBLEBAR       [ reduce using rule 70 (exp -> exp SIMPLEE exp .) ]
  ! DOUBLEE         [ reduce using rule 70 (exp -> exp SIMPLEE exp .) ]
  ! EXCLAMATION     [ reduce using rule 70 (exp -> exp SIMPLEE exp .) ]
  ! SIMPLEBAR       [ reduce using rule 70 (exp -> exp SIMPLEE exp .) ]
  ! SIMPLEE         [ reduce using rule 70 (exp -> exp SIMPLEE exp .) ]
  ! CIRCUMFLEX      [ reduce using rule 70 (exp -> exp SIMPLEE exp .) ]
  ! NEGATION        [ reduce using rule 70 (exp -> exp SIMPLEE exp .) ]
  ! LSHIFT          [ reduce using rule 70 (exp -> exp SIMPLEE exp .) ]
  ! RSHIFT          [ reduce using rule 70 (exp -> exp SIMPLEE exp .) ]
  ! DOUBLEEQUAL     [ reduce using rule 70 (exp -> exp SIMPLEE exp .) ]


state 79

    (71) exp -> exp CIRCUMFLEX exp .
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXPO resolved as shift
  ! shift/reduce conflict for REST resolved as shift
  ! shift/reduce conflict for TRIPLEEQ resolved as shift
  ! shift/reduce conflict for SMALL resolved as shift
  ! shift/reduce conflict for BIGGEST resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for POINTRANGE resolved as shift
  ! shift/reduce conflict for SMALLEQ resolved as shift
  ! shift/reduce conflict for BIGGESTEQ resolved as shift
  ! shift/reduce conflict for BIGGSMALLEQ resolved as shift
  ! shift/reduce conflict for DOUBLEBAR resolved as shift
  ! shift/reduce conflict for DOUBLEE resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for SIMPLEBAR resolved as shift
  ! shift/reduce conflict for SIMPLEE resolved as shift
  ! shift/reduce conflict for CIRCUMFLEX resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for DOUBLEEQUAL resolved as shift
    PONTOVIRGULA    reduce using rule 71 (exp -> exp CIRCUMFLEX exp .)
    WHILE           reduce using rule 71 (exp -> exp CIRCUMFLEX exp .)
    RETURN          reduce using rule 71 (exp -> exp CIRCUMFLEX exp .)
    ID              reduce using rule 71 (exp -> exp CIRCUMFLEX exp .)
    DEF             reduce using rule 71 (exp -> exp CIRCUMFLEX exp .)
    NUMBER          reduce using rule 71 (exp -> exp CIRCUMFLEX exp .)
    STRING          reduce using rule 71 (exp -> exp CIRCUMFLEX exp .)
    IF              reduce using rule 71 (exp -> exp CIRCUMFLEX exp .)
    $end            reduce using rule 71 (exp -> exp CIRCUMFLEX exp .)
    END             reduce using rule 71 (exp -> exp CIRCUMFLEX exp .)
    DO              reduce using rule 71 (exp -> exp CIRCUMFLEX exp .)
    ELSE            reduce using rule 71 (exp -> exp CIRCUMFLEX exp .)
    THEN            reduce using rule 71 (exp -> exp CIRCUMFLEX exp .)
    VIRGULA         reduce using rule 71 (exp -> exp CIRCUMFLEX exp .)
    RPAREN          reduce using rule 71 (exp -> exp CIRCUMFLEX exp .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51

  ! PLUS            [ reduce using rule 71 (exp -> exp CIRCUMFLEX exp .) ]
  ! MINUS           [ reduce using rule 71 (exp -> exp CIRCUMFLEX exp .) ]
  ! TIMES           [ reduce using rule 71 (exp -> exp CIRCUMFLEX exp .) ]
  ! DIV             [ reduce using rule 71 (exp -> exp CIRCUMFLEX exp .) ]
  ! EXPO            [ reduce using rule 71 (exp -> exp CIRCUMFLEX exp .) ]
  ! REST            [ reduce using rule 71 (exp -> exp CIRCUMFLEX exp .) ]
  ! TRIPLEEQ        [ reduce using rule 71 (exp -> exp CIRCUMFLEX exp .) ]
  ! SMALL           [ reduce using rule 71 (exp -> exp CIRCUMFLEX exp .) ]
  ! BIGGEST         [ reduce using rule 71 (exp -> exp CIRCUMFLEX exp .) ]
  ! DIFF            [ reduce using rule 71 (exp -> exp CIRCUMFLEX exp .) ]
  ! POINTRANGE      [ reduce using rule 71 (exp -> exp CIRCUMFLEX exp .) ]
  ! SMALLEQ         [ reduce using rule 71 (exp -> exp CIRCUMFLEX exp .) ]
  ! BIGGESTEQ       [ reduce using rule 71 (exp -> exp CIRCUMFLEX exp .) ]
  ! BIGGSMALLEQ     [ reduce using rule 71 (exp -> exp CIRCUMFLEX exp .) ]
  ! DOUBLEBAR       [ reduce using rule 71 (exp -> exp CIRCUMFLEX exp .) ]
  ! DOUBLEE         [ reduce using rule 71 (exp -> exp CIRCUMFLEX exp .) ]
  ! EXCLAMATION     [ reduce using rule 71 (exp -> exp CIRCUMFLEX exp .) ]
  ! SIMPLEBAR       [ reduce using rule 71 (exp -> exp CIRCUMFLEX exp .) ]
  ! SIMPLEE         [ reduce using rule 71 (exp -> exp CIRCUMFLEX exp .) ]
  ! CIRCUMFLEX      [ reduce using rule 71 (exp -> exp CIRCUMFLEX exp .) ]
  ! NEGATION        [ reduce using rule 71 (exp -> exp CIRCUMFLEX exp .) ]
  ! LSHIFT          [ reduce using rule 71 (exp -> exp CIRCUMFLEX exp .) ]
  ! RSHIFT          [ reduce using rule 71 (exp -> exp CIRCUMFLEX exp .) ]
  ! DOUBLEEQUAL     [ reduce using rule 71 (exp -> exp CIRCUMFLEX exp .) ]


state 80

    (72) exp -> exp NEGATION exp .
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXPO resolved as shift
  ! shift/reduce conflict for REST resolved as shift
  ! shift/reduce conflict for TRIPLEEQ resolved as shift
  ! shift/reduce conflict for SMALL resolved as shift
  ! shift/reduce conflict for BIGGEST resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for POINTRANGE resolved as shift
  ! shift/reduce conflict for SMALLEQ resolved as shift
  ! shift/reduce conflict for BIGGESTEQ resolved as shift
  ! shift/reduce conflict for BIGGSMALLEQ resolved as shift
  ! shift/reduce conflict for DOUBLEBAR resolved as shift
  ! shift/reduce conflict for DOUBLEE resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for SIMPLEBAR resolved as shift
  ! shift/reduce conflict for SIMPLEE resolved as shift
  ! shift/reduce conflict for CIRCUMFLEX resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for DOUBLEEQUAL resolved as shift
    PONTOVIRGULA    reduce using rule 72 (exp -> exp NEGATION exp .)
    WHILE           reduce using rule 72 (exp -> exp NEGATION exp .)
    RETURN          reduce using rule 72 (exp -> exp NEGATION exp .)
    ID              reduce using rule 72 (exp -> exp NEGATION exp .)
    DEF             reduce using rule 72 (exp -> exp NEGATION exp .)
    NUMBER          reduce using rule 72 (exp -> exp NEGATION exp .)
    STRING          reduce using rule 72 (exp -> exp NEGATION exp .)
    IF              reduce using rule 72 (exp -> exp NEGATION exp .)
    $end            reduce using rule 72 (exp -> exp NEGATION exp .)
    END             reduce using rule 72 (exp -> exp NEGATION exp .)
    DO              reduce using rule 72 (exp -> exp NEGATION exp .)
    ELSE            reduce using rule 72 (exp -> exp NEGATION exp .)
    THEN            reduce using rule 72 (exp -> exp NEGATION exp .)
    VIRGULA         reduce using rule 72 (exp -> exp NEGATION exp .)
    RPAREN          reduce using rule 72 (exp -> exp NEGATION exp .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51

  ! PLUS            [ reduce using rule 72 (exp -> exp NEGATION exp .) ]
  ! MINUS           [ reduce using rule 72 (exp -> exp NEGATION exp .) ]
  ! TIMES           [ reduce using rule 72 (exp -> exp NEGATION exp .) ]
  ! DIV             [ reduce using rule 72 (exp -> exp NEGATION exp .) ]
  ! EXPO            [ reduce using rule 72 (exp -> exp NEGATION exp .) ]
  ! REST            [ reduce using rule 72 (exp -> exp NEGATION exp .) ]
  ! TRIPLEEQ        [ reduce using rule 72 (exp -> exp NEGATION exp .) ]
  ! SMALL           [ reduce using rule 72 (exp -> exp NEGATION exp .) ]
  ! BIGGEST         [ reduce using rule 72 (exp -> exp NEGATION exp .) ]
  ! DIFF            [ reduce using rule 72 (exp -> exp NEGATION exp .) ]
  ! POINTRANGE      [ reduce using rule 72 (exp -> exp NEGATION exp .) ]
  ! SMALLEQ         [ reduce using rule 72 (exp -> exp NEGATION exp .) ]
  ! BIGGESTEQ       [ reduce using rule 72 (exp -> exp NEGATION exp .) ]
  ! BIGGSMALLEQ     [ reduce using rule 72 (exp -> exp NEGATION exp .) ]
  ! DOUBLEBAR       [ reduce using rule 72 (exp -> exp NEGATION exp .) ]
  ! DOUBLEE         [ reduce using rule 72 (exp -> exp NEGATION exp .) ]
  ! EXCLAMATION     [ reduce using rule 72 (exp -> exp NEGATION exp .) ]
  ! SIMPLEBAR       [ reduce using rule 72 (exp -> exp NEGATION exp .) ]
  ! SIMPLEE         [ reduce using rule 72 (exp -> exp NEGATION exp .) ]
  ! CIRCUMFLEX      [ reduce using rule 72 (exp -> exp NEGATION exp .) ]
  ! NEGATION        [ reduce using rule 72 (exp -> exp NEGATION exp .) ]
  ! LSHIFT          [ reduce using rule 72 (exp -> exp NEGATION exp .) ]
  ! RSHIFT          [ reduce using rule 72 (exp -> exp NEGATION exp .) ]
  ! DOUBLEEQUAL     [ reduce using rule 72 (exp -> exp NEGATION exp .) ]


state 81

    (73) exp -> exp LSHIFT exp .
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXPO resolved as shift
  ! shift/reduce conflict for REST resolved as shift
  ! shift/reduce conflict for TRIPLEEQ resolved as shift
  ! shift/reduce conflict for SMALL resolved as shift
  ! shift/reduce conflict for BIGGEST resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for POINTRANGE resolved as shift
  ! shift/reduce conflict for SMALLEQ resolved as shift
  ! shift/reduce conflict for BIGGESTEQ resolved as shift
  ! shift/reduce conflict for BIGGSMALLEQ resolved as shift
  ! shift/reduce conflict for DOUBLEBAR resolved as shift
  ! shift/reduce conflict for DOUBLEE resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for SIMPLEBAR resolved as shift
  ! shift/reduce conflict for SIMPLEE resolved as shift
  ! shift/reduce conflict for CIRCUMFLEX resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for DOUBLEEQUAL resolved as shift
    PONTOVIRGULA    reduce using rule 73 (exp -> exp LSHIFT exp .)
    WHILE           reduce using rule 73 (exp -> exp LSHIFT exp .)
    RETURN          reduce using rule 73 (exp -> exp LSHIFT exp .)
    ID              reduce using rule 73 (exp -> exp LSHIFT exp .)
    DEF             reduce using rule 73 (exp -> exp LSHIFT exp .)
    NUMBER          reduce using rule 73 (exp -> exp LSHIFT exp .)
    STRING          reduce using rule 73 (exp -> exp LSHIFT exp .)
    IF              reduce using rule 73 (exp -> exp LSHIFT exp .)
    $end            reduce using rule 73 (exp -> exp LSHIFT exp .)
    END             reduce using rule 73 (exp -> exp LSHIFT exp .)
    DO              reduce using rule 73 (exp -> exp LSHIFT exp .)
    ELSE            reduce using rule 73 (exp -> exp LSHIFT exp .)
    THEN            reduce using rule 73 (exp -> exp LSHIFT exp .)
    VIRGULA         reduce using rule 73 (exp -> exp LSHIFT exp .)
    RPAREN          reduce using rule 73 (exp -> exp LSHIFT exp .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51

  ! PLUS            [ reduce using rule 73 (exp -> exp LSHIFT exp .) ]
  ! MINUS           [ reduce using rule 73 (exp -> exp LSHIFT exp .) ]
  ! TIMES           [ reduce using rule 73 (exp -> exp LSHIFT exp .) ]
  ! DIV             [ reduce using rule 73 (exp -> exp LSHIFT exp .) ]
  ! EXPO            [ reduce using rule 73 (exp -> exp LSHIFT exp .) ]
  ! REST            [ reduce using rule 73 (exp -> exp LSHIFT exp .) ]
  ! TRIPLEEQ        [ reduce using rule 73 (exp -> exp LSHIFT exp .) ]
  ! SMALL           [ reduce using rule 73 (exp -> exp LSHIFT exp .) ]
  ! BIGGEST         [ reduce using rule 73 (exp -> exp LSHIFT exp .) ]
  ! DIFF            [ reduce using rule 73 (exp -> exp LSHIFT exp .) ]
  ! POINTRANGE      [ reduce using rule 73 (exp -> exp LSHIFT exp .) ]
  ! SMALLEQ         [ reduce using rule 73 (exp -> exp LSHIFT exp .) ]
  ! BIGGESTEQ       [ reduce using rule 73 (exp -> exp LSHIFT exp .) ]
  ! BIGGSMALLEQ     [ reduce using rule 73 (exp -> exp LSHIFT exp .) ]
  ! DOUBLEBAR       [ reduce using rule 73 (exp -> exp LSHIFT exp .) ]
  ! DOUBLEE         [ reduce using rule 73 (exp -> exp LSHIFT exp .) ]
  ! EXCLAMATION     [ reduce using rule 73 (exp -> exp LSHIFT exp .) ]
  ! SIMPLEBAR       [ reduce using rule 73 (exp -> exp LSHIFT exp .) ]
  ! SIMPLEE         [ reduce using rule 73 (exp -> exp LSHIFT exp .) ]
  ! CIRCUMFLEX      [ reduce using rule 73 (exp -> exp LSHIFT exp .) ]
  ! NEGATION        [ reduce using rule 73 (exp -> exp LSHIFT exp .) ]
  ! LSHIFT          [ reduce using rule 73 (exp -> exp LSHIFT exp .) ]
  ! RSHIFT          [ reduce using rule 73 (exp -> exp LSHIFT exp .) ]
  ! DOUBLEEQUAL     [ reduce using rule 73 (exp -> exp LSHIFT exp .) ]


state 82

    (74) exp -> exp RSHIFT exp .
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXPO resolved as shift
  ! shift/reduce conflict for REST resolved as shift
  ! shift/reduce conflict for TRIPLEEQ resolved as shift
  ! shift/reduce conflict for SMALL resolved as shift
  ! shift/reduce conflict for BIGGEST resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for POINTRANGE resolved as shift
  ! shift/reduce conflict for SMALLEQ resolved as shift
  ! shift/reduce conflict for BIGGESTEQ resolved as shift
  ! shift/reduce conflict for BIGGSMALLEQ resolved as shift
  ! shift/reduce conflict for DOUBLEBAR resolved as shift
  ! shift/reduce conflict for DOUBLEE resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for SIMPLEBAR resolved as shift
  ! shift/reduce conflict for SIMPLEE resolved as shift
  ! shift/reduce conflict for CIRCUMFLEX resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for DOUBLEEQUAL resolved as shift
    PONTOVIRGULA    reduce using rule 74 (exp -> exp RSHIFT exp .)
    WHILE           reduce using rule 74 (exp -> exp RSHIFT exp .)
    RETURN          reduce using rule 74 (exp -> exp RSHIFT exp .)
    ID              reduce using rule 74 (exp -> exp RSHIFT exp .)
    DEF             reduce using rule 74 (exp -> exp RSHIFT exp .)
    NUMBER          reduce using rule 74 (exp -> exp RSHIFT exp .)
    STRING          reduce using rule 74 (exp -> exp RSHIFT exp .)
    IF              reduce using rule 74 (exp -> exp RSHIFT exp .)
    $end            reduce using rule 74 (exp -> exp RSHIFT exp .)
    END             reduce using rule 74 (exp -> exp RSHIFT exp .)
    DO              reduce using rule 74 (exp -> exp RSHIFT exp .)
    ELSE            reduce using rule 74 (exp -> exp RSHIFT exp .)
    THEN            reduce using rule 74 (exp -> exp RSHIFT exp .)
    VIRGULA         reduce using rule 74 (exp -> exp RSHIFT exp .)
    RPAREN          reduce using rule 74 (exp -> exp RSHIFT exp .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51

  ! PLUS            [ reduce using rule 74 (exp -> exp RSHIFT exp .) ]
  ! MINUS           [ reduce using rule 74 (exp -> exp RSHIFT exp .) ]
  ! TIMES           [ reduce using rule 74 (exp -> exp RSHIFT exp .) ]
  ! DIV             [ reduce using rule 74 (exp -> exp RSHIFT exp .) ]
  ! EXPO            [ reduce using rule 74 (exp -> exp RSHIFT exp .) ]
  ! REST            [ reduce using rule 74 (exp -> exp RSHIFT exp .) ]
  ! TRIPLEEQ        [ reduce using rule 74 (exp -> exp RSHIFT exp .) ]
  ! SMALL           [ reduce using rule 74 (exp -> exp RSHIFT exp .) ]
  ! BIGGEST         [ reduce using rule 74 (exp -> exp RSHIFT exp .) ]
  ! DIFF            [ reduce using rule 74 (exp -> exp RSHIFT exp .) ]
  ! POINTRANGE      [ reduce using rule 74 (exp -> exp RSHIFT exp .) ]
  ! SMALLEQ         [ reduce using rule 74 (exp -> exp RSHIFT exp .) ]
  ! BIGGESTEQ       [ reduce using rule 74 (exp -> exp RSHIFT exp .) ]
  ! BIGGSMALLEQ     [ reduce using rule 74 (exp -> exp RSHIFT exp .) ]
  ! DOUBLEBAR       [ reduce using rule 74 (exp -> exp RSHIFT exp .) ]
  ! DOUBLEE         [ reduce using rule 74 (exp -> exp RSHIFT exp .) ]
  ! EXCLAMATION     [ reduce using rule 74 (exp -> exp RSHIFT exp .) ]
  ! SIMPLEBAR       [ reduce using rule 74 (exp -> exp RSHIFT exp .) ]
  ! SIMPLEE         [ reduce using rule 74 (exp -> exp RSHIFT exp .) ]
  ! CIRCUMFLEX      [ reduce using rule 74 (exp -> exp RSHIFT exp .) ]
  ! NEGATION        [ reduce using rule 74 (exp -> exp RSHIFT exp .) ]
  ! LSHIFT          [ reduce using rule 74 (exp -> exp RSHIFT exp .) ]
  ! RSHIFT          [ reduce using rule 74 (exp -> exp RSHIFT exp .) ]
  ! DOUBLEEQUAL     [ reduce using rule 74 (exp -> exp RSHIFT exp .) ]


state 83

    (80) exp -> exp DOUBLEEQUAL exp .
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXPO resolved as shift
  ! shift/reduce conflict for REST resolved as shift
  ! shift/reduce conflict for TRIPLEEQ resolved as shift
  ! shift/reduce conflict for SMALL resolved as shift
  ! shift/reduce conflict for BIGGEST resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for POINTRANGE resolved as shift
  ! shift/reduce conflict for SMALLEQ resolved as shift
  ! shift/reduce conflict for BIGGESTEQ resolved as shift
  ! shift/reduce conflict for BIGGSMALLEQ resolved as shift
  ! shift/reduce conflict for DOUBLEBAR resolved as shift
  ! shift/reduce conflict for DOUBLEE resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for SIMPLEBAR resolved as shift
  ! shift/reduce conflict for SIMPLEE resolved as shift
  ! shift/reduce conflict for CIRCUMFLEX resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for DOUBLEEQUAL resolved as shift
    PONTOVIRGULA    reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .)
    WHILE           reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .)
    RETURN          reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .)
    ID              reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .)
    DEF             reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .)
    NUMBER          reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .)
    STRING          reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .)
    IF              reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .)
    $end            reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .)
    END             reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .)
    DO              reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .)
    ELSE            reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .)
    THEN            reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .)
    VIRGULA         reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .)
    RPAREN          reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51

  ! PLUS            [ reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .) ]
  ! MINUS           [ reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .) ]
  ! TIMES           [ reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .) ]
  ! DIV             [ reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .) ]
  ! EXPO            [ reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .) ]
  ! REST            [ reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .) ]
  ! TRIPLEEQ        [ reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .) ]
  ! SMALL           [ reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .) ]
  ! BIGGEST         [ reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .) ]
  ! DIFF            [ reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .) ]
  ! POINTRANGE      [ reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .) ]
  ! SMALLEQ         [ reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .) ]
  ! BIGGESTEQ       [ reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .) ]
  ! BIGGSMALLEQ     [ reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .) ]
  ! DOUBLEBAR       [ reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .) ]
  ! DOUBLEE         [ reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .) ]
  ! EXCLAMATION     [ reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .) ]
  ! SIMPLEBAR       [ reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .) ]
  ! SIMPLEE         [ reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .) ]
  ! CIRCUMFLEX      [ reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .) ]
  ! NEGATION        [ reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .) ]
  ! LSHIFT          [ reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .) ]
  ! RSHIFT          [ reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .) ]
  ! DOUBLEEQUAL     [ reduce using rule 80 (exp -> exp DOUBLEEQUAL exp .) ]


state 84

    (48) stm -> WHILE exp body .

    WHILE           reduce using rule 48 (stm -> WHILE exp body .)
    RETURN          reduce using rule 48 (stm -> WHILE exp body .)
    ID              reduce using rule 48 (stm -> WHILE exp body .)
    DEF             reduce using rule 48 (stm -> WHILE exp body .)
    NUMBER          reduce using rule 48 (stm -> WHILE exp body .)
    STRING          reduce using rule 48 (stm -> WHILE exp body .)
    IF              reduce using rule 48 (stm -> WHILE exp body .)
    $end            reduce using rule 48 (stm -> WHILE exp body .)
    END             reduce using rule 48 (stm -> WHILE exp body .)
    ELSE            reduce using rule 48 (stm -> WHILE exp body .)


state 85

    (49) stm -> WHILE exp DO . body
    (8) body -> . stms END
    (9) stms -> . stm
    (10) stms -> . stm stms
    (11) stm -> . exp
    (12) stm -> . exp PONTOVIRGULA
    (13) stm -> . s
    (48) stm -> . WHILE exp body
    (49) stm -> . WHILE exp DO body
    (50) stm -> . RETURN exp
    (51) stm -> . RETURN exp PONTOVIRGULA
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (14) s -> . s1
    (15) s -> . s2
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp
    (16) s1 -> . stms
    (17) s1 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (18) s1 -> . IF LPAREN exp RPAREN body ELSE body
    (19) s1 -> . IF LPAREN exp RPAREN s1 ELSE body
    (20) s1 -> . IF LPAREN exp RPAREN body ELSE s1
    (22) s1 -> . IF LPAREN exp RPAREN body
    (23) s1 -> . IF LPAREN exp RPAREN s1 ELSE s2
    (24) s1 -> . IF LPAREN exp RPAREN body ELSE s2
    (25) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (26) s1 -> . IF LPAREN exp RPAREN THEN body ELSE body
    (27) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE body
    (28) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s1
    (30) s1 -> . IF LPAREN exp RPAREN THEN body
    (31) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s2
    (32) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s2
    (33) s1 -> . IF exp s1 ELSE s1
    (34) s1 -> . IF exp body ELSE body
    (35) s1 -> . IF exp s1 ELSE body
    (36) s1 -> . IF exp body ELSE s1
    (38) s1 -> . IF exp body
    (39) s1 -> . IF exp body ELSE s2
    (40) s1 -> . IF exp THEN s1 ELSE s1
    (41) s1 -> . IF exp THEN body ELSE body
    (42) s1 -> . IF exp THEN s1 ELSE body
    (43) s1 -> . IF exp THEN body ELSE s1
    (45) s1 -> . IF exp THEN body
    (46) s1 -> . IF exp THEN s1 ELSE s2
    (47) s1 -> . IF exp THEN body ELSE s2
    (21) s2 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (29) s2 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (37) s2 -> . IF exp s1 ELSE s1
    (44) s2 -> . IF exp THEN s2 ELSE s2

    WHILE           shift and go to state 8
    RETURN          shift and go to state 9
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26
    IF              shift and go to state 18

    exp                            shift and go to state 6
    body                           shift and go to state 96
    stms                           shift and go to state 23
    stm                            shift and go to state 24
    s                              shift and go to state 7
    call                           shift and go to state 25
    assign                         shift and go to state 12
    s1                             shift and go to state 15
    s2                             shift and go to state 16

state 86

    (51) stm -> RETURN exp PONTOVIRGULA .

    WHILE           reduce using rule 51 (stm -> RETURN exp PONTOVIRGULA .)
    RETURN          reduce using rule 51 (stm -> RETURN exp PONTOVIRGULA .)
    ID              reduce using rule 51 (stm -> RETURN exp PONTOVIRGULA .)
    DEF             reduce using rule 51 (stm -> RETURN exp PONTOVIRGULA .)
    NUMBER          reduce using rule 51 (stm -> RETURN exp PONTOVIRGULA .)
    STRING          reduce using rule 51 (stm -> RETURN exp PONTOVIRGULA .)
    IF              reduce using rule 51 (stm -> RETURN exp PONTOVIRGULA .)
    $end            reduce using rule 51 (stm -> RETURN exp PONTOVIRGULA .)
    END             reduce using rule 51 (stm -> RETURN exp PONTOVIRGULA .)
    ELSE            reduce using rule 51 (stm -> RETURN exp PONTOVIRGULA .)


state 87

    (82) call -> ID LPAREN params . RPAREN

    RPAREN          shift and go to state 97


state 88

    (83) call -> ID LPAREN RPAREN .

    $end            reduce using rule 83 (call -> ID LPAREN RPAREN .)
    PONTOVIRGULA    reduce using rule 83 (call -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 83 (call -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 83 (call -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 83 (call -> ID LPAREN RPAREN .)
    DIV             reduce using rule 83 (call -> ID LPAREN RPAREN .)
    EXPO            reduce using rule 83 (call -> ID LPAREN RPAREN .)
    REST            reduce using rule 83 (call -> ID LPAREN RPAREN .)
    TRIPLEEQ        reduce using rule 83 (call -> ID LPAREN RPAREN .)
    SMALL           reduce using rule 83 (call -> ID LPAREN RPAREN .)
    BIGGEST         reduce using rule 83 (call -> ID LPAREN RPAREN .)
    DIFF            reduce using rule 83 (call -> ID LPAREN RPAREN .)
    POINTRANGE      reduce using rule 83 (call -> ID LPAREN RPAREN .)
    SMALLEQ         reduce using rule 83 (call -> ID LPAREN RPAREN .)
    BIGGESTEQ       reduce using rule 83 (call -> ID LPAREN RPAREN .)
    BIGGSMALLEQ     reduce using rule 83 (call -> ID LPAREN RPAREN .)
    DOUBLEBAR       reduce using rule 83 (call -> ID LPAREN RPAREN .)
    DOUBLEE         reduce using rule 83 (call -> ID LPAREN RPAREN .)
    EXCLAMATION     reduce using rule 83 (call -> ID LPAREN RPAREN .)
    SIMPLEBAR       reduce using rule 83 (call -> ID LPAREN RPAREN .)
    SIMPLEE         reduce using rule 83 (call -> ID LPAREN RPAREN .)
    CIRCUMFLEX      reduce using rule 83 (call -> ID LPAREN RPAREN .)
    NEGATION        reduce using rule 83 (call -> ID LPAREN RPAREN .)
    LSHIFT          reduce using rule 83 (call -> ID LPAREN RPAREN .)
    RSHIFT          reduce using rule 83 (call -> ID LPAREN RPAREN .)
    DOUBLEEQUAL     reduce using rule 83 (call -> ID LPAREN RPAREN .)
    WHILE           reduce using rule 83 (call -> ID LPAREN RPAREN .)
    RETURN          reduce using rule 83 (call -> ID LPAREN RPAREN .)
    ID              reduce using rule 83 (call -> ID LPAREN RPAREN .)
    DEF             reduce using rule 83 (call -> ID LPAREN RPAREN .)
    NUMBER          reduce using rule 83 (call -> ID LPAREN RPAREN .)
    STRING          reduce using rule 83 (call -> ID LPAREN RPAREN .)
    IF              reduce using rule 83 (call -> ID LPAREN RPAREN .)
    END             reduce using rule 83 (call -> ID LPAREN RPAREN .)
    DO              reduce using rule 83 (call -> ID LPAREN RPAREN .)
    ELSE            reduce using rule 83 (call -> ID LPAREN RPAREN .)
    THEN            reduce using rule 83 (call -> ID LPAREN RPAREN .)
    VIRGULA         reduce using rule 83 (call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 83 (call -> ID LPAREN RPAREN .)


state 89

    (84) params -> exp . VIRGULA params
    (85) params -> exp .
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

    VIRGULA         shift and go to state 98
    RPAREN          reduce using rule 85 (params -> exp .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51


state 90

    (81) assign -> ID EQ exp .
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EXPO resolved as shift
  ! shift/reduce conflict for REST resolved as shift
  ! shift/reduce conflict for TRIPLEEQ resolved as shift
  ! shift/reduce conflict for SMALL resolved as shift
  ! shift/reduce conflict for BIGGEST resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for POINTRANGE resolved as shift
  ! shift/reduce conflict for SMALLEQ resolved as shift
  ! shift/reduce conflict for BIGGESTEQ resolved as shift
  ! shift/reduce conflict for BIGGSMALLEQ resolved as shift
  ! shift/reduce conflict for DOUBLEBAR resolved as shift
  ! shift/reduce conflict for DOUBLEE resolved as shift
  ! shift/reduce conflict for EXCLAMATION resolved as shift
  ! shift/reduce conflict for SIMPLEBAR resolved as shift
  ! shift/reduce conflict for SIMPLEE resolved as shift
  ! shift/reduce conflict for CIRCUMFLEX resolved as shift
  ! shift/reduce conflict for NEGATION resolved as shift
  ! shift/reduce conflict for LSHIFT resolved as shift
  ! shift/reduce conflict for RSHIFT resolved as shift
  ! shift/reduce conflict for DOUBLEEQUAL resolved as shift
    PONTOVIRGULA    reduce using rule 81 (assign -> ID EQ exp .)
    WHILE           reduce using rule 81 (assign -> ID EQ exp .)
    RETURN          reduce using rule 81 (assign -> ID EQ exp .)
    ID              reduce using rule 81 (assign -> ID EQ exp .)
    DEF             reduce using rule 81 (assign -> ID EQ exp .)
    NUMBER          reduce using rule 81 (assign -> ID EQ exp .)
    STRING          reduce using rule 81 (assign -> ID EQ exp .)
    IF              reduce using rule 81 (assign -> ID EQ exp .)
    $end            reduce using rule 81 (assign -> ID EQ exp .)
    END             reduce using rule 81 (assign -> ID EQ exp .)
    DO              reduce using rule 81 (assign -> ID EQ exp .)
    ELSE            reduce using rule 81 (assign -> ID EQ exp .)
    THEN            reduce using rule 81 (assign -> ID EQ exp .)
    VIRGULA         reduce using rule 81 (assign -> ID EQ exp .)
    RPAREN          reduce using rule 81 (assign -> ID EQ exp .)
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51

  ! PLUS            [ reduce using rule 81 (assign -> ID EQ exp .) ]
  ! MINUS           [ reduce using rule 81 (assign -> ID EQ exp .) ]
  ! TIMES           [ reduce using rule 81 (assign -> ID EQ exp .) ]
  ! DIV             [ reduce using rule 81 (assign -> ID EQ exp .) ]
  ! EXPO            [ reduce using rule 81 (assign -> ID EQ exp .) ]
  ! REST            [ reduce using rule 81 (assign -> ID EQ exp .) ]
  ! TRIPLEEQ        [ reduce using rule 81 (assign -> ID EQ exp .) ]
  ! SMALL           [ reduce using rule 81 (assign -> ID EQ exp .) ]
  ! BIGGEST         [ reduce using rule 81 (assign -> ID EQ exp .) ]
  ! DIFF            [ reduce using rule 81 (assign -> ID EQ exp .) ]
  ! POINTRANGE      [ reduce using rule 81 (assign -> ID EQ exp .) ]
  ! SMALLEQ         [ reduce using rule 81 (assign -> ID EQ exp .) ]
  ! BIGGESTEQ       [ reduce using rule 81 (assign -> ID EQ exp .) ]
  ! BIGGSMALLEQ     [ reduce using rule 81 (assign -> ID EQ exp .) ]
  ! DOUBLEBAR       [ reduce using rule 81 (assign -> ID EQ exp .) ]
  ! DOUBLEE         [ reduce using rule 81 (assign -> ID EQ exp .) ]
  ! EXCLAMATION     [ reduce using rule 81 (assign -> ID EQ exp .) ]
  ! SIMPLEBAR       [ reduce using rule 81 (assign -> ID EQ exp .) ]
  ! SIMPLEE         [ reduce using rule 81 (assign -> ID EQ exp .) ]
  ! CIRCUMFLEX      [ reduce using rule 81 (assign -> ID EQ exp .) ]
  ! NEGATION        [ reduce using rule 81 (assign -> ID EQ exp .) ]
  ! LSHIFT          [ reduce using rule 81 (assign -> ID EQ exp .) ]
  ! RSHIFT          [ reduce using rule 81 (assign -> ID EQ exp .) ]
  ! DOUBLEEQUAL     [ reduce using rule 81 (assign -> ID EQ exp .) ]


state 91

    (17) s1 -> IF LPAREN exp . RPAREN s1 ELSE s1
    (18) s1 -> IF LPAREN exp . RPAREN body ELSE body
    (19) s1 -> IF LPAREN exp . RPAREN s1 ELSE body
    (20) s1 -> IF LPAREN exp . RPAREN body ELSE s1
    (22) s1 -> IF LPAREN exp . RPAREN body
    (23) s1 -> IF LPAREN exp . RPAREN s1 ELSE s2
    (24) s1 -> IF LPAREN exp . RPAREN body ELSE s2
    (25) s1 -> IF LPAREN exp . RPAREN THEN s1 ELSE s1
    (26) s1 -> IF LPAREN exp . RPAREN THEN body ELSE body
    (27) s1 -> IF LPAREN exp . RPAREN THEN s1 ELSE body
    (28) s1 -> IF LPAREN exp . RPAREN THEN body ELSE s1
    (30) s1 -> IF LPAREN exp . RPAREN THEN body
    (31) s1 -> IF LPAREN exp . RPAREN THEN s1 ELSE s2
    (32) s1 -> IF LPAREN exp . RPAREN THEN body ELSE s2
    (21) s2 -> IF LPAREN exp . RPAREN s1 ELSE s1
    (29) s2 -> IF LPAREN exp . RPAREN THEN s1 ELSE s1
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

    RPAREN          shift and go to state 99
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51


state 92

    (33) s1 -> IF exp s1 . ELSE s1
    (35) s1 -> IF exp s1 . ELSE body
    (37) s2 -> IF exp s1 . ELSE s1
    (14) s -> s1 .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 100
    END             reduce using rule 14 (s -> s1 .)
    WHILE           reduce using rule 14 (s -> s1 .)
    RETURN          reduce using rule 14 (s -> s1 .)
    NUMBER          reduce using rule 14 (s -> s1 .)
    STRING          reduce using rule 14 (s -> s1 .)
    ID              reduce using rule 14 (s -> s1 .)
    IF              reduce using rule 14 (s -> s1 .)

  ! ELSE            [ reduce using rule 14 (s -> s1 .) ]


state 93

    (34) s1 -> IF exp body . ELSE body
    (36) s1 -> IF exp body . ELSE s1
    (38) s1 -> IF exp body .
    (39) s1 -> IF exp body . ELSE s2

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 101
    WHILE           reduce using rule 38 (s1 -> IF exp body .)
    RETURN          reduce using rule 38 (s1 -> IF exp body .)
    ID              reduce using rule 38 (s1 -> IF exp body .)
    DEF             reduce using rule 38 (s1 -> IF exp body .)
    NUMBER          reduce using rule 38 (s1 -> IF exp body .)
    STRING          reduce using rule 38 (s1 -> IF exp body .)
    IF              reduce using rule 38 (s1 -> IF exp body .)
    $end            reduce using rule 38 (s1 -> IF exp body .)
    END             reduce using rule 38 (s1 -> IF exp body .)

  ! ELSE            [ reduce using rule 38 (s1 -> IF exp body .) ]


state 94

    (40) s1 -> IF exp THEN . s1 ELSE s1
    (41) s1 -> IF exp THEN . body ELSE body
    (42) s1 -> IF exp THEN . s1 ELSE body
    (43) s1 -> IF exp THEN . body ELSE s1
    (45) s1 -> IF exp THEN . body
    (46) s1 -> IF exp THEN . s1 ELSE s2
    (47) s1 -> IF exp THEN . body ELSE s2
    (44) s2 -> IF exp THEN . s2 ELSE s2
    (16) s1 -> . stms
    (17) s1 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (18) s1 -> . IF LPAREN exp RPAREN body ELSE body
    (19) s1 -> . IF LPAREN exp RPAREN s1 ELSE body
    (20) s1 -> . IF LPAREN exp RPAREN body ELSE s1
    (22) s1 -> . IF LPAREN exp RPAREN body
    (23) s1 -> . IF LPAREN exp RPAREN s1 ELSE s2
    (24) s1 -> . IF LPAREN exp RPAREN body ELSE s2
    (25) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (26) s1 -> . IF LPAREN exp RPAREN THEN body ELSE body
    (27) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE body
    (28) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s1
    (30) s1 -> . IF LPAREN exp RPAREN THEN body
    (31) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s2
    (32) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s2
    (33) s1 -> . IF exp s1 ELSE s1
    (34) s1 -> . IF exp body ELSE body
    (35) s1 -> . IF exp s1 ELSE body
    (36) s1 -> . IF exp body ELSE s1
    (38) s1 -> . IF exp body
    (39) s1 -> . IF exp body ELSE s2
    (40) s1 -> . IF exp THEN s1 ELSE s1
    (41) s1 -> . IF exp THEN body ELSE body
    (42) s1 -> . IF exp THEN s1 ELSE body
    (43) s1 -> . IF exp THEN body ELSE s1
    (45) s1 -> . IF exp THEN body
    (46) s1 -> . IF exp THEN s1 ELSE s2
    (47) s1 -> . IF exp THEN body ELSE s2
    (8) body -> . stms END
    (21) s2 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (29) s2 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (37) s2 -> . IF exp s1 ELSE s1
    (44) s2 -> . IF exp THEN s2 ELSE s2
    (9) stms -> . stm
    (10) stms -> . stm stms
    (11) stm -> . exp
    (12) stm -> . exp PONTOVIRGULA
    (13) stm -> . s
    (48) stm -> . WHILE exp body
    (49) stm -> . WHILE exp DO body
    (50) stm -> . RETURN exp
    (51) stm -> . RETURN exp PONTOVIRGULA
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (14) s -> . s1
    (15) s -> . s2
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    IF              shift and go to state 18
    WHILE           shift and go to state 8
    RETURN          shift and go to state 9
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 6
    s1                             shift and go to state 102
    body                           shift and go to state 103
    s2                             shift and go to state 104
    stms                           shift and go to state 95
    stm                            shift and go to state 24
    s                              shift and go to state 7
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 95

    (16) s1 -> stms .
    (8) body -> stms . END

  ! shift/reduce conflict for END resolved as shift
    ELSE            reduce using rule 16 (s1 -> stms .)
    WHILE           reduce using rule 16 (s1 -> stms .)
    RETURN          reduce using rule 16 (s1 -> stms .)
    NUMBER          reduce using rule 16 (s1 -> stms .)
    STRING          reduce using rule 16 (s1 -> stms .)
    ID              reduce using rule 16 (s1 -> stms .)
    IF              reduce using rule 16 (s1 -> stms .)
    DEF             reduce using rule 16 (s1 -> stms .)
    $end            reduce using rule 16 (s1 -> stms .)
    END             shift and go to state 59

  ! END             [ reduce using rule 16 (s1 -> stms .) ]


state 96

    (49) stm -> WHILE exp DO body .

    WHILE           reduce using rule 49 (stm -> WHILE exp DO body .)
    RETURN          reduce using rule 49 (stm -> WHILE exp DO body .)
    ID              reduce using rule 49 (stm -> WHILE exp DO body .)
    DEF             reduce using rule 49 (stm -> WHILE exp DO body .)
    NUMBER          reduce using rule 49 (stm -> WHILE exp DO body .)
    STRING          reduce using rule 49 (stm -> WHILE exp DO body .)
    IF              reduce using rule 49 (stm -> WHILE exp DO body .)
    $end            reduce using rule 49 (stm -> WHILE exp DO body .)
    END             reduce using rule 49 (stm -> WHILE exp DO body .)
    ELSE            reduce using rule 49 (stm -> WHILE exp DO body .)


state 97

    (82) call -> ID LPAREN params RPAREN .

    $end            reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    PONTOVIRGULA    reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    PLUS            reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    MINUS           reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    TIMES           reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    DIV             reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    EXPO            reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    REST            reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    TRIPLEEQ        reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    SMALL           reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    BIGGEST         reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    DIFF            reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    POINTRANGE      reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    SMALLEQ         reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    BIGGESTEQ       reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    BIGGSMALLEQ     reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    DOUBLEBAR       reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    DOUBLEE         reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    EXCLAMATION     reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    SIMPLEBAR       reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    SIMPLEE         reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    CIRCUMFLEX      reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    NEGATION        reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    LSHIFT          reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    RSHIFT          reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    DOUBLEEQUAL     reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    WHILE           reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    RETURN          reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    ID              reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    DEF             reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    NUMBER          reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    STRING          reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    IF              reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    END             reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    DO              reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    ELSE            reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    THEN            reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    VIRGULA         reduce using rule 82 (call -> ID LPAREN params RPAREN .)
    RPAREN          reduce using rule 82 (call -> ID LPAREN params RPAREN .)


state 98

    (84) params -> exp VIRGULA . params
    (84) params -> . exp VIRGULA params
    (85) params -> . exp
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 89
    params                         shift and go to state 105
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 99

    (17) s1 -> IF LPAREN exp RPAREN . s1 ELSE s1
    (18) s1 -> IF LPAREN exp RPAREN . body ELSE body
    (19) s1 -> IF LPAREN exp RPAREN . s1 ELSE body
    (20) s1 -> IF LPAREN exp RPAREN . body ELSE s1
    (22) s1 -> IF LPAREN exp RPAREN . body
    (23) s1 -> IF LPAREN exp RPAREN . s1 ELSE s2
    (24) s1 -> IF LPAREN exp RPAREN . body ELSE s2
    (25) s1 -> IF LPAREN exp RPAREN . THEN s1 ELSE s1
    (26) s1 -> IF LPAREN exp RPAREN . THEN body ELSE body
    (27) s1 -> IF LPAREN exp RPAREN . THEN s1 ELSE body
    (28) s1 -> IF LPAREN exp RPAREN . THEN body ELSE s1
    (30) s1 -> IF LPAREN exp RPAREN . THEN body
    (31) s1 -> IF LPAREN exp RPAREN . THEN s1 ELSE s2
    (32) s1 -> IF LPAREN exp RPAREN . THEN body ELSE s2
    (21) s2 -> IF LPAREN exp RPAREN . s1 ELSE s1
    (29) s2 -> IF LPAREN exp RPAREN . THEN s1 ELSE s1
    (16) s1 -> . stms
    (17) s1 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (18) s1 -> . IF LPAREN exp RPAREN body ELSE body
    (19) s1 -> . IF LPAREN exp RPAREN s1 ELSE body
    (20) s1 -> . IF LPAREN exp RPAREN body ELSE s1
    (22) s1 -> . IF LPAREN exp RPAREN body
    (23) s1 -> . IF LPAREN exp RPAREN s1 ELSE s2
    (24) s1 -> . IF LPAREN exp RPAREN body ELSE s2
    (25) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (26) s1 -> . IF LPAREN exp RPAREN THEN body ELSE body
    (27) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE body
    (28) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s1
    (30) s1 -> . IF LPAREN exp RPAREN THEN body
    (31) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s2
    (32) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s2
    (33) s1 -> . IF exp s1 ELSE s1
    (34) s1 -> . IF exp body ELSE body
    (35) s1 -> . IF exp s1 ELSE body
    (36) s1 -> . IF exp body ELSE s1
    (38) s1 -> . IF exp body
    (39) s1 -> . IF exp body ELSE s2
    (40) s1 -> . IF exp THEN s1 ELSE s1
    (41) s1 -> . IF exp THEN body ELSE body
    (42) s1 -> . IF exp THEN s1 ELSE body
    (43) s1 -> . IF exp THEN body ELSE s1
    (45) s1 -> . IF exp THEN body
    (46) s1 -> . IF exp THEN s1 ELSE s2
    (47) s1 -> . IF exp THEN body ELSE s2
    (8) body -> . stms END
    (9) stms -> . stm
    (10) stms -> . stm stms
    (11) stm -> . exp
    (12) stm -> . exp PONTOVIRGULA
    (13) stm -> . s
    (48) stm -> . WHILE exp body
    (49) stm -> . WHILE exp DO body
    (50) stm -> . RETURN exp
    (51) stm -> . RETURN exp PONTOVIRGULA
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (14) s -> . s1
    (15) s -> . s2
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp
    (21) s2 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (29) s2 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (37) s2 -> . IF exp s1 ELSE s1
    (44) s2 -> . IF exp THEN s2 ELSE s2

    THEN            shift and go to state 108
    IF              shift and go to state 18
    WHILE           shift and go to state 8
    RETURN          shift and go to state 9
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 6
    s1                             shift and go to state 106
    body                           shift and go to state 107
    s2                             shift and go to state 16
    stms                           shift and go to state 95
    stm                            shift and go to state 24
    s                              shift and go to state 7
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 100

    (33) s1 -> IF exp s1 ELSE . s1
    (35) s1 -> IF exp s1 ELSE . body
    (37) s2 -> IF exp s1 ELSE . s1
    (16) s1 -> . stms
    (17) s1 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (18) s1 -> . IF LPAREN exp RPAREN body ELSE body
    (19) s1 -> . IF LPAREN exp RPAREN s1 ELSE body
    (20) s1 -> . IF LPAREN exp RPAREN body ELSE s1
    (22) s1 -> . IF LPAREN exp RPAREN body
    (23) s1 -> . IF LPAREN exp RPAREN s1 ELSE s2
    (24) s1 -> . IF LPAREN exp RPAREN body ELSE s2
    (25) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (26) s1 -> . IF LPAREN exp RPAREN THEN body ELSE body
    (27) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE body
    (28) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s1
    (30) s1 -> . IF LPAREN exp RPAREN THEN body
    (31) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s2
    (32) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s2
    (33) s1 -> . IF exp s1 ELSE s1
    (34) s1 -> . IF exp body ELSE body
    (35) s1 -> . IF exp s1 ELSE body
    (36) s1 -> . IF exp body ELSE s1
    (38) s1 -> . IF exp body
    (39) s1 -> . IF exp body ELSE s2
    (40) s1 -> . IF exp THEN s1 ELSE s1
    (41) s1 -> . IF exp THEN body ELSE body
    (42) s1 -> . IF exp THEN s1 ELSE body
    (43) s1 -> . IF exp THEN body ELSE s1
    (45) s1 -> . IF exp THEN body
    (46) s1 -> . IF exp THEN s1 ELSE s2
    (47) s1 -> . IF exp THEN body ELSE s2
    (8) body -> . stms END
    (9) stms -> . stm
    (10) stms -> . stm stms
    (11) stm -> . exp
    (12) stm -> . exp PONTOVIRGULA
    (13) stm -> . s
    (48) stm -> . WHILE exp body
    (49) stm -> . WHILE exp DO body
    (50) stm -> . RETURN exp
    (51) stm -> . RETURN exp PONTOVIRGULA
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (14) s -> . s1
    (15) s -> . s2
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp
    (21) s2 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (29) s2 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (37) s2 -> . IF exp s1 ELSE s1
    (44) s2 -> . IF exp THEN s2 ELSE s2

    IF              shift and go to state 18
    WHILE           shift and go to state 8
    RETURN          shift and go to state 9
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 6
    s1                             shift and go to state 109
    body                           shift and go to state 110
    stms                           shift and go to state 95
    s2                             shift and go to state 16
    stm                            shift and go to state 24
    s                              shift and go to state 7
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 101

    (34) s1 -> IF exp body ELSE . body
    (36) s1 -> IF exp body ELSE . s1
    (39) s1 -> IF exp body ELSE . s2
    (8) body -> . stms END
    (16) s1 -> . stms
    (17) s1 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (18) s1 -> . IF LPAREN exp RPAREN body ELSE body
    (19) s1 -> . IF LPAREN exp RPAREN s1 ELSE body
    (20) s1 -> . IF LPAREN exp RPAREN body ELSE s1
    (22) s1 -> . IF LPAREN exp RPAREN body
    (23) s1 -> . IF LPAREN exp RPAREN s1 ELSE s2
    (24) s1 -> . IF LPAREN exp RPAREN body ELSE s2
    (25) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (26) s1 -> . IF LPAREN exp RPAREN THEN body ELSE body
    (27) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE body
    (28) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s1
    (30) s1 -> . IF LPAREN exp RPAREN THEN body
    (31) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s2
    (32) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s2
    (33) s1 -> . IF exp s1 ELSE s1
    (34) s1 -> . IF exp body ELSE body
    (35) s1 -> . IF exp s1 ELSE body
    (36) s1 -> . IF exp body ELSE s1
    (38) s1 -> . IF exp body
    (39) s1 -> . IF exp body ELSE s2
    (40) s1 -> . IF exp THEN s1 ELSE s1
    (41) s1 -> . IF exp THEN body ELSE body
    (42) s1 -> . IF exp THEN s1 ELSE body
    (43) s1 -> . IF exp THEN body ELSE s1
    (45) s1 -> . IF exp THEN body
    (46) s1 -> . IF exp THEN s1 ELSE s2
    (47) s1 -> . IF exp THEN body ELSE s2
    (21) s2 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (29) s2 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (37) s2 -> . IF exp s1 ELSE s1
    (44) s2 -> . IF exp THEN s2 ELSE s2
    (9) stms -> . stm
    (10) stms -> . stm stms
    (11) stm -> . exp
    (12) stm -> . exp PONTOVIRGULA
    (13) stm -> . s
    (48) stm -> . WHILE exp body
    (49) stm -> . WHILE exp DO body
    (50) stm -> . RETURN exp
    (51) stm -> . RETURN exp PONTOVIRGULA
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (14) s -> . s1
    (15) s -> . s2
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    IF              shift and go to state 18
    WHILE           shift and go to state 8
    RETURN          shift and go to state 9
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 6
    body                           shift and go to state 111
    s1                             shift and go to state 112
    s2                             shift and go to state 113
    stms                           shift and go to state 23
    stm                            shift and go to state 24
    s                              shift and go to state 7
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 102

    (40) s1 -> IF exp THEN s1 . ELSE s1
    (42) s1 -> IF exp THEN s1 . ELSE body
    (46) s1 -> IF exp THEN s1 . ELSE s2
    (14) s -> s1 .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 114
    END             reduce using rule 14 (s -> s1 .)
    WHILE           reduce using rule 14 (s -> s1 .)
    RETURN          reduce using rule 14 (s -> s1 .)
    NUMBER          reduce using rule 14 (s -> s1 .)
    STRING          reduce using rule 14 (s -> s1 .)
    ID              reduce using rule 14 (s -> s1 .)
    IF              reduce using rule 14 (s -> s1 .)

  ! ELSE            [ reduce using rule 14 (s -> s1 .) ]


state 103

    (41) s1 -> IF exp THEN body . ELSE body
    (43) s1 -> IF exp THEN body . ELSE s1
    (45) s1 -> IF exp THEN body .
    (47) s1 -> IF exp THEN body . ELSE s2

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 115
    WHILE           reduce using rule 45 (s1 -> IF exp THEN body .)
    RETURN          reduce using rule 45 (s1 -> IF exp THEN body .)
    ID              reduce using rule 45 (s1 -> IF exp THEN body .)
    DEF             reduce using rule 45 (s1 -> IF exp THEN body .)
    NUMBER          reduce using rule 45 (s1 -> IF exp THEN body .)
    STRING          reduce using rule 45 (s1 -> IF exp THEN body .)
    IF              reduce using rule 45 (s1 -> IF exp THEN body .)
    $end            reduce using rule 45 (s1 -> IF exp THEN body .)
    END             reduce using rule 45 (s1 -> IF exp THEN body .)

  ! ELSE            [ reduce using rule 45 (s1 -> IF exp THEN body .) ]


state 104

    (44) s2 -> IF exp THEN s2 . ELSE s2
    (15) s -> s2 .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 116
    END             reduce using rule 15 (s -> s2 .)
    WHILE           reduce using rule 15 (s -> s2 .)
    RETURN          reduce using rule 15 (s -> s2 .)
    NUMBER          reduce using rule 15 (s -> s2 .)
    STRING          reduce using rule 15 (s -> s2 .)
    ID              reduce using rule 15 (s -> s2 .)
    IF              reduce using rule 15 (s -> s2 .)

  ! ELSE            [ reduce using rule 15 (s -> s2 .) ]


state 105

    (84) params -> exp VIRGULA params .

    RPAREN          reduce using rule 84 (params -> exp VIRGULA params .)


state 106

    (17) s1 -> IF LPAREN exp RPAREN s1 . ELSE s1
    (19) s1 -> IF LPAREN exp RPAREN s1 . ELSE body
    (23) s1 -> IF LPAREN exp RPAREN s1 . ELSE s2
    (21) s2 -> IF LPAREN exp RPAREN s1 . ELSE s1
    (14) s -> s1 .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 117
    END             reduce using rule 14 (s -> s1 .)
    WHILE           reduce using rule 14 (s -> s1 .)
    RETURN          reduce using rule 14 (s -> s1 .)
    NUMBER          reduce using rule 14 (s -> s1 .)
    STRING          reduce using rule 14 (s -> s1 .)
    ID              reduce using rule 14 (s -> s1 .)
    IF              reduce using rule 14 (s -> s1 .)

  ! ELSE            [ reduce using rule 14 (s -> s1 .) ]


state 107

    (18) s1 -> IF LPAREN exp RPAREN body . ELSE body
    (20) s1 -> IF LPAREN exp RPAREN body . ELSE s1
    (22) s1 -> IF LPAREN exp RPAREN body .
    (24) s1 -> IF LPAREN exp RPAREN body . ELSE s2

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 118
    WHILE           reduce using rule 22 (s1 -> IF LPAREN exp RPAREN body .)
    RETURN          reduce using rule 22 (s1 -> IF LPAREN exp RPAREN body .)
    ID              reduce using rule 22 (s1 -> IF LPAREN exp RPAREN body .)
    DEF             reduce using rule 22 (s1 -> IF LPAREN exp RPAREN body .)
    NUMBER          reduce using rule 22 (s1 -> IF LPAREN exp RPAREN body .)
    STRING          reduce using rule 22 (s1 -> IF LPAREN exp RPAREN body .)
    IF              reduce using rule 22 (s1 -> IF LPAREN exp RPAREN body .)
    $end            reduce using rule 22 (s1 -> IF LPAREN exp RPAREN body .)
    END             reduce using rule 22 (s1 -> IF LPAREN exp RPAREN body .)

  ! ELSE            [ reduce using rule 22 (s1 -> IF LPAREN exp RPAREN body .) ]


state 108

    (25) s1 -> IF LPAREN exp RPAREN THEN . s1 ELSE s1
    (26) s1 -> IF LPAREN exp RPAREN THEN . body ELSE body
    (27) s1 -> IF LPAREN exp RPAREN THEN . s1 ELSE body
    (28) s1 -> IF LPAREN exp RPAREN THEN . body ELSE s1
    (30) s1 -> IF LPAREN exp RPAREN THEN . body
    (31) s1 -> IF LPAREN exp RPAREN THEN . s1 ELSE s2
    (32) s1 -> IF LPAREN exp RPAREN THEN . body ELSE s2
    (29) s2 -> IF LPAREN exp RPAREN THEN . s1 ELSE s1
    (16) s1 -> . stms
    (17) s1 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (18) s1 -> . IF LPAREN exp RPAREN body ELSE body
    (19) s1 -> . IF LPAREN exp RPAREN s1 ELSE body
    (20) s1 -> . IF LPAREN exp RPAREN body ELSE s1
    (22) s1 -> . IF LPAREN exp RPAREN body
    (23) s1 -> . IF LPAREN exp RPAREN s1 ELSE s2
    (24) s1 -> . IF LPAREN exp RPAREN body ELSE s2
    (25) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (26) s1 -> . IF LPAREN exp RPAREN THEN body ELSE body
    (27) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE body
    (28) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s1
    (30) s1 -> . IF LPAREN exp RPAREN THEN body
    (31) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s2
    (32) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s2
    (33) s1 -> . IF exp s1 ELSE s1
    (34) s1 -> . IF exp body ELSE body
    (35) s1 -> . IF exp s1 ELSE body
    (36) s1 -> . IF exp body ELSE s1
    (38) s1 -> . IF exp body
    (39) s1 -> . IF exp body ELSE s2
    (40) s1 -> . IF exp THEN s1 ELSE s1
    (41) s1 -> . IF exp THEN body ELSE body
    (42) s1 -> . IF exp THEN s1 ELSE body
    (43) s1 -> . IF exp THEN body ELSE s1
    (45) s1 -> . IF exp THEN body
    (46) s1 -> . IF exp THEN s1 ELSE s2
    (47) s1 -> . IF exp THEN body ELSE s2
    (8) body -> . stms END
    (9) stms -> . stm
    (10) stms -> . stm stms
    (11) stm -> . exp
    (12) stm -> . exp PONTOVIRGULA
    (13) stm -> . s
    (48) stm -> . WHILE exp body
    (49) stm -> . WHILE exp DO body
    (50) stm -> . RETURN exp
    (51) stm -> . RETURN exp PONTOVIRGULA
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (14) s -> . s1
    (15) s -> . s2
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp
    (21) s2 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (29) s2 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (37) s2 -> . IF exp s1 ELSE s1
    (44) s2 -> . IF exp THEN s2 ELSE s2

    IF              shift and go to state 18
    WHILE           shift and go to state 8
    RETURN          shift and go to state 9
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 6
    s1                             shift and go to state 119
    body                           shift and go to state 120
    s2                             shift and go to state 16
    stms                           shift and go to state 95
    stm                            shift and go to state 24
    s                              shift and go to state 7
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 109

    (33) s1 -> IF exp s1 ELSE s1 .
    (37) s2 -> IF exp s1 ELSE s1 .
    (14) s -> s1 .

  ! reduce/reduce conflict for WHILE resolved using rule 33 (s1 -> IF exp s1 ELSE s1 .)
  ! reduce/reduce conflict for RETURN resolved using rule 33 (s1 -> IF exp s1 ELSE s1 .)
  ! reduce/reduce conflict for ID resolved using rule 33 (s1 -> IF exp s1 ELSE s1 .)
  ! reduce/reduce conflict for DEF resolved using rule 33 (s1 -> IF exp s1 ELSE s1 .)
  ! reduce/reduce conflict for NUMBER resolved using rule 33 (s1 -> IF exp s1 ELSE s1 .)
  ! reduce/reduce conflict for STRING resolved using rule 33 (s1 -> IF exp s1 ELSE s1 .)
  ! reduce/reduce conflict for IF resolved using rule 33 (s1 -> IF exp s1 ELSE s1 .)
  ! reduce/reduce conflict for $end resolved using rule 33 (s1 -> IF exp s1 ELSE s1 .)
  ! reduce/reduce conflict for END resolved using rule 33 (s1 -> IF exp s1 ELSE s1 .)
  ! reduce/reduce conflict for ELSE resolved using rule 33 (s1 -> IF exp s1 ELSE s1 .)
  ! reduce/reduce conflict for WHILE resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for RETURN resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for NUMBER resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for STRING resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for ID resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for IF resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for END resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for ELSE resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for DEF resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for $end resolved using rule 14 (s -> s1 .)
    WHILE           reduce using rule 14 (s -> s1 .)
    RETURN          reduce using rule 14 (s -> s1 .)
    NUMBER          reduce using rule 14 (s -> s1 .)
    STRING          reduce using rule 14 (s -> s1 .)
    ID              reduce using rule 14 (s -> s1 .)
    IF              reduce using rule 14 (s -> s1 .)
    END             reduce using rule 14 (s -> s1 .)
    ELSE            reduce using rule 14 (s -> s1 .)
    DEF             reduce using rule 14 (s -> s1 .)
    $end            reduce using rule 14 (s -> s1 .)

  ! WHILE           [ reduce using rule 33 (s1 -> IF exp s1 ELSE s1 .) ]
  ! RETURN          [ reduce using rule 33 (s1 -> IF exp s1 ELSE s1 .) ]
  ! ID              [ reduce using rule 33 (s1 -> IF exp s1 ELSE s1 .) ]
  ! DEF             [ reduce using rule 33 (s1 -> IF exp s1 ELSE s1 .) ]
  ! NUMBER          [ reduce using rule 33 (s1 -> IF exp s1 ELSE s1 .) ]
  ! STRING          [ reduce using rule 33 (s1 -> IF exp s1 ELSE s1 .) ]
  ! IF              [ reduce using rule 33 (s1 -> IF exp s1 ELSE s1 .) ]
  ! $end            [ reduce using rule 33 (s1 -> IF exp s1 ELSE s1 .) ]
  ! END             [ reduce using rule 33 (s1 -> IF exp s1 ELSE s1 .) ]
  ! ELSE            [ reduce using rule 33 (s1 -> IF exp s1 ELSE s1 .) ]
  ! WHILE           [ reduce using rule 37 (s2 -> IF exp s1 ELSE s1 .) ]
  ! RETURN          [ reduce using rule 37 (s2 -> IF exp s1 ELSE s1 .) ]
  ! ID              [ reduce using rule 37 (s2 -> IF exp s1 ELSE s1 .) ]
  ! DEF             [ reduce using rule 37 (s2 -> IF exp s1 ELSE s1 .) ]
  ! NUMBER          [ reduce using rule 37 (s2 -> IF exp s1 ELSE s1 .) ]
  ! STRING          [ reduce using rule 37 (s2 -> IF exp s1 ELSE s1 .) ]
  ! IF              [ reduce using rule 37 (s2 -> IF exp s1 ELSE s1 .) ]
  ! $end            [ reduce using rule 37 (s2 -> IF exp s1 ELSE s1 .) ]
  ! END             [ reduce using rule 37 (s2 -> IF exp s1 ELSE s1 .) ]
  ! ELSE            [ reduce using rule 37 (s2 -> IF exp s1 ELSE s1 .) ]


state 110

    (35) s1 -> IF exp s1 ELSE body .

    WHILE           reduce using rule 35 (s1 -> IF exp s1 ELSE body .)
    RETURN          reduce using rule 35 (s1 -> IF exp s1 ELSE body .)
    ID              reduce using rule 35 (s1 -> IF exp s1 ELSE body .)
    DEF             reduce using rule 35 (s1 -> IF exp s1 ELSE body .)
    NUMBER          reduce using rule 35 (s1 -> IF exp s1 ELSE body .)
    STRING          reduce using rule 35 (s1 -> IF exp s1 ELSE body .)
    IF              reduce using rule 35 (s1 -> IF exp s1 ELSE body .)
    $end            reduce using rule 35 (s1 -> IF exp s1 ELSE body .)
    END             reduce using rule 35 (s1 -> IF exp s1 ELSE body .)
    ELSE            reduce using rule 35 (s1 -> IF exp s1 ELSE body .)


state 111

    (34) s1 -> IF exp body ELSE body .

    WHILE           reduce using rule 34 (s1 -> IF exp body ELSE body .)
    RETURN          reduce using rule 34 (s1 -> IF exp body ELSE body .)
    ID              reduce using rule 34 (s1 -> IF exp body ELSE body .)
    DEF             reduce using rule 34 (s1 -> IF exp body ELSE body .)
    NUMBER          reduce using rule 34 (s1 -> IF exp body ELSE body .)
    STRING          reduce using rule 34 (s1 -> IF exp body ELSE body .)
    IF              reduce using rule 34 (s1 -> IF exp body ELSE body .)
    $end            reduce using rule 34 (s1 -> IF exp body ELSE body .)
    END             reduce using rule 34 (s1 -> IF exp body ELSE body .)
    ELSE            reduce using rule 34 (s1 -> IF exp body ELSE body .)


state 112

    (36) s1 -> IF exp body ELSE s1 .
    (14) s -> s1 .

  ! reduce/reduce conflict for WHILE resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for RETURN resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for NUMBER resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for STRING resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for ID resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for IF resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for END resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for ELSE resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for DEF resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for $end resolved using rule 14 (s -> s1 .)
    WHILE           reduce using rule 14 (s -> s1 .)
    RETURN          reduce using rule 14 (s -> s1 .)
    NUMBER          reduce using rule 14 (s -> s1 .)
    STRING          reduce using rule 14 (s -> s1 .)
    ID              reduce using rule 14 (s -> s1 .)
    IF              reduce using rule 14 (s -> s1 .)
    END             reduce using rule 14 (s -> s1 .)
    ELSE            reduce using rule 14 (s -> s1 .)
    DEF             reduce using rule 14 (s -> s1 .)
    $end            reduce using rule 14 (s -> s1 .)

  ! WHILE           [ reduce using rule 36 (s1 -> IF exp body ELSE s1 .) ]
  ! RETURN          [ reduce using rule 36 (s1 -> IF exp body ELSE s1 .) ]
  ! ID              [ reduce using rule 36 (s1 -> IF exp body ELSE s1 .) ]
  ! DEF             [ reduce using rule 36 (s1 -> IF exp body ELSE s1 .) ]
  ! NUMBER          [ reduce using rule 36 (s1 -> IF exp body ELSE s1 .) ]
  ! STRING          [ reduce using rule 36 (s1 -> IF exp body ELSE s1 .) ]
  ! IF              [ reduce using rule 36 (s1 -> IF exp body ELSE s1 .) ]
  ! $end            [ reduce using rule 36 (s1 -> IF exp body ELSE s1 .) ]
  ! END             [ reduce using rule 36 (s1 -> IF exp body ELSE s1 .) ]
  ! ELSE            [ reduce using rule 36 (s1 -> IF exp body ELSE s1 .) ]


state 113

    (39) s1 -> IF exp body ELSE s2 .
    (15) s -> s2 .

  ! reduce/reduce conflict for WHILE resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for RETURN resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for NUMBER resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for STRING resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for ID resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for IF resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for END resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for ELSE resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for DEF resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for $end resolved using rule 15 (s -> s2 .)
    WHILE           reduce using rule 15 (s -> s2 .)
    RETURN          reduce using rule 15 (s -> s2 .)
    NUMBER          reduce using rule 15 (s -> s2 .)
    STRING          reduce using rule 15 (s -> s2 .)
    ID              reduce using rule 15 (s -> s2 .)
    IF              reduce using rule 15 (s -> s2 .)
    END             reduce using rule 15 (s -> s2 .)
    ELSE            reduce using rule 15 (s -> s2 .)
    DEF             reduce using rule 15 (s -> s2 .)
    $end            reduce using rule 15 (s -> s2 .)

  ! WHILE           [ reduce using rule 39 (s1 -> IF exp body ELSE s2 .) ]
  ! RETURN          [ reduce using rule 39 (s1 -> IF exp body ELSE s2 .) ]
  ! ID              [ reduce using rule 39 (s1 -> IF exp body ELSE s2 .) ]
  ! DEF             [ reduce using rule 39 (s1 -> IF exp body ELSE s2 .) ]
  ! NUMBER          [ reduce using rule 39 (s1 -> IF exp body ELSE s2 .) ]
  ! STRING          [ reduce using rule 39 (s1 -> IF exp body ELSE s2 .) ]
  ! IF              [ reduce using rule 39 (s1 -> IF exp body ELSE s2 .) ]
  ! $end            [ reduce using rule 39 (s1 -> IF exp body ELSE s2 .) ]
  ! END             [ reduce using rule 39 (s1 -> IF exp body ELSE s2 .) ]
  ! ELSE            [ reduce using rule 39 (s1 -> IF exp body ELSE s2 .) ]


state 114

    (40) s1 -> IF exp THEN s1 ELSE . s1
    (42) s1 -> IF exp THEN s1 ELSE . body
    (46) s1 -> IF exp THEN s1 ELSE . s2
    (16) s1 -> . stms
    (17) s1 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (18) s1 -> . IF LPAREN exp RPAREN body ELSE body
    (19) s1 -> . IF LPAREN exp RPAREN s1 ELSE body
    (20) s1 -> . IF LPAREN exp RPAREN body ELSE s1
    (22) s1 -> . IF LPAREN exp RPAREN body
    (23) s1 -> . IF LPAREN exp RPAREN s1 ELSE s2
    (24) s1 -> . IF LPAREN exp RPAREN body ELSE s2
    (25) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (26) s1 -> . IF LPAREN exp RPAREN THEN body ELSE body
    (27) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE body
    (28) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s1
    (30) s1 -> . IF LPAREN exp RPAREN THEN body
    (31) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s2
    (32) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s2
    (33) s1 -> . IF exp s1 ELSE s1
    (34) s1 -> . IF exp body ELSE body
    (35) s1 -> . IF exp s1 ELSE body
    (36) s1 -> . IF exp body ELSE s1
    (38) s1 -> . IF exp body
    (39) s1 -> . IF exp body ELSE s2
    (40) s1 -> . IF exp THEN s1 ELSE s1
    (41) s1 -> . IF exp THEN body ELSE body
    (42) s1 -> . IF exp THEN s1 ELSE body
    (43) s1 -> . IF exp THEN body ELSE s1
    (45) s1 -> . IF exp THEN body
    (46) s1 -> . IF exp THEN s1 ELSE s2
    (47) s1 -> . IF exp THEN body ELSE s2
    (8) body -> . stms END
    (21) s2 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (29) s2 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (37) s2 -> . IF exp s1 ELSE s1
    (44) s2 -> . IF exp THEN s2 ELSE s2
    (9) stms -> . stm
    (10) stms -> . stm stms
    (11) stm -> . exp
    (12) stm -> . exp PONTOVIRGULA
    (13) stm -> . s
    (48) stm -> . WHILE exp body
    (49) stm -> . WHILE exp DO body
    (50) stm -> . RETURN exp
    (51) stm -> . RETURN exp PONTOVIRGULA
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (14) s -> . s1
    (15) s -> . s2
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    IF              shift and go to state 18
    WHILE           shift and go to state 8
    RETURN          shift and go to state 9
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 6
    s1                             shift and go to state 121
    body                           shift and go to state 122
    s2                             shift and go to state 123
    stms                           shift and go to state 95
    stm                            shift and go to state 24
    s                              shift and go to state 7
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 115

    (41) s1 -> IF exp THEN body ELSE . body
    (43) s1 -> IF exp THEN body ELSE . s1
    (47) s1 -> IF exp THEN body ELSE . s2
    (8) body -> . stms END
    (16) s1 -> . stms
    (17) s1 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (18) s1 -> . IF LPAREN exp RPAREN body ELSE body
    (19) s1 -> . IF LPAREN exp RPAREN s1 ELSE body
    (20) s1 -> . IF LPAREN exp RPAREN body ELSE s1
    (22) s1 -> . IF LPAREN exp RPAREN body
    (23) s1 -> . IF LPAREN exp RPAREN s1 ELSE s2
    (24) s1 -> . IF LPAREN exp RPAREN body ELSE s2
    (25) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (26) s1 -> . IF LPAREN exp RPAREN THEN body ELSE body
    (27) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE body
    (28) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s1
    (30) s1 -> . IF LPAREN exp RPAREN THEN body
    (31) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s2
    (32) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s2
    (33) s1 -> . IF exp s1 ELSE s1
    (34) s1 -> . IF exp body ELSE body
    (35) s1 -> . IF exp s1 ELSE body
    (36) s1 -> . IF exp body ELSE s1
    (38) s1 -> . IF exp body
    (39) s1 -> . IF exp body ELSE s2
    (40) s1 -> . IF exp THEN s1 ELSE s1
    (41) s1 -> . IF exp THEN body ELSE body
    (42) s1 -> . IF exp THEN s1 ELSE body
    (43) s1 -> . IF exp THEN body ELSE s1
    (45) s1 -> . IF exp THEN body
    (46) s1 -> . IF exp THEN s1 ELSE s2
    (47) s1 -> . IF exp THEN body ELSE s2
    (21) s2 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (29) s2 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (37) s2 -> . IF exp s1 ELSE s1
    (44) s2 -> . IF exp THEN s2 ELSE s2
    (9) stms -> . stm
    (10) stms -> . stm stms
    (11) stm -> . exp
    (12) stm -> . exp PONTOVIRGULA
    (13) stm -> . s
    (48) stm -> . WHILE exp body
    (49) stm -> . WHILE exp DO body
    (50) stm -> . RETURN exp
    (51) stm -> . RETURN exp PONTOVIRGULA
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (14) s -> . s1
    (15) s -> . s2
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    IF              shift and go to state 18
    WHILE           shift and go to state 8
    RETURN          shift and go to state 9
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 6
    body                           shift and go to state 124
    s1                             shift and go to state 125
    s2                             shift and go to state 126
    stms                           shift and go to state 23
    stm                            shift and go to state 24
    s                              shift and go to state 7
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 116

    (44) s2 -> IF exp THEN s2 ELSE . s2
    (21) s2 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (29) s2 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (37) s2 -> . IF exp s1 ELSE s1
    (44) s2 -> . IF exp THEN s2 ELSE s2

    IF              shift and go to state 127

    s2                             shift and go to state 128

state 117

    (17) s1 -> IF LPAREN exp RPAREN s1 ELSE . s1
    (19) s1 -> IF LPAREN exp RPAREN s1 ELSE . body
    (23) s1 -> IF LPAREN exp RPAREN s1 ELSE . s2
    (21) s2 -> IF LPAREN exp RPAREN s1 ELSE . s1
    (16) s1 -> . stms
    (17) s1 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (18) s1 -> . IF LPAREN exp RPAREN body ELSE body
    (19) s1 -> . IF LPAREN exp RPAREN s1 ELSE body
    (20) s1 -> . IF LPAREN exp RPAREN body ELSE s1
    (22) s1 -> . IF LPAREN exp RPAREN body
    (23) s1 -> . IF LPAREN exp RPAREN s1 ELSE s2
    (24) s1 -> . IF LPAREN exp RPAREN body ELSE s2
    (25) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (26) s1 -> . IF LPAREN exp RPAREN THEN body ELSE body
    (27) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE body
    (28) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s1
    (30) s1 -> . IF LPAREN exp RPAREN THEN body
    (31) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s2
    (32) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s2
    (33) s1 -> . IF exp s1 ELSE s1
    (34) s1 -> . IF exp body ELSE body
    (35) s1 -> . IF exp s1 ELSE body
    (36) s1 -> . IF exp body ELSE s1
    (38) s1 -> . IF exp body
    (39) s1 -> . IF exp body ELSE s2
    (40) s1 -> . IF exp THEN s1 ELSE s1
    (41) s1 -> . IF exp THEN body ELSE body
    (42) s1 -> . IF exp THEN s1 ELSE body
    (43) s1 -> . IF exp THEN body ELSE s1
    (45) s1 -> . IF exp THEN body
    (46) s1 -> . IF exp THEN s1 ELSE s2
    (47) s1 -> . IF exp THEN body ELSE s2
    (8) body -> . stms END
    (21) s2 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (29) s2 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (37) s2 -> . IF exp s1 ELSE s1
    (44) s2 -> . IF exp THEN s2 ELSE s2
    (9) stms -> . stm
    (10) stms -> . stm stms
    (11) stm -> . exp
    (12) stm -> . exp PONTOVIRGULA
    (13) stm -> . s
    (48) stm -> . WHILE exp body
    (49) stm -> . WHILE exp DO body
    (50) stm -> . RETURN exp
    (51) stm -> . RETURN exp PONTOVIRGULA
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (14) s -> . s1
    (15) s -> . s2
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    IF              shift and go to state 18
    WHILE           shift and go to state 8
    RETURN          shift and go to state 9
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 6
    s1                             shift and go to state 129
    body                           shift and go to state 130
    s2                             shift and go to state 131
    stms                           shift and go to state 95
    stm                            shift and go to state 24
    s                              shift and go to state 7
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 118

    (18) s1 -> IF LPAREN exp RPAREN body ELSE . body
    (20) s1 -> IF LPAREN exp RPAREN body ELSE . s1
    (24) s1 -> IF LPAREN exp RPAREN body ELSE . s2
    (8) body -> . stms END
    (16) s1 -> . stms
    (17) s1 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (18) s1 -> . IF LPAREN exp RPAREN body ELSE body
    (19) s1 -> . IF LPAREN exp RPAREN s1 ELSE body
    (20) s1 -> . IF LPAREN exp RPAREN body ELSE s1
    (22) s1 -> . IF LPAREN exp RPAREN body
    (23) s1 -> . IF LPAREN exp RPAREN s1 ELSE s2
    (24) s1 -> . IF LPAREN exp RPAREN body ELSE s2
    (25) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (26) s1 -> . IF LPAREN exp RPAREN THEN body ELSE body
    (27) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE body
    (28) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s1
    (30) s1 -> . IF LPAREN exp RPAREN THEN body
    (31) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s2
    (32) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s2
    (33) s1 -> . IF exp s1 ELSE s1
    (34) s1 -> . IF exp body ELSE body
    (35) s1 -> . IF exp s1 ELSE body
    (36) s1 -> . IF exp body ELSE s1
    (38) s1 -> . IF exp body
    (39) s1 -> . IF exp body ELSE s2
    (40) s1 -> . IF exp THEN s1 ELSE s1
    (41) s1 -> . IF exp THEN body ELSE body
    (42) s1 -> . IF exp THEN s1 ELSE body
    (43) s1 -> . IF exp THEN body ELSE s1
    (45) s1 -> . IF exp THEN body
    (46) s1 -> . IF exp THEN s1 ELSE s2
    (47) s1 -> . IF exp THEN body ELSE s2
    (21) s2 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (29) s2 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (37) s2 -> . IF exp s1 ELSE s1
    (44) s2 -> . IF exp THEN s2 ELSE s2
    (9) stms -> . stm
    (10) stms -> . stm stms
    (11) stm -> . exp
    (12) stm -> . exp PONTOVIRGULA
    (13) stm -> . s
    (48) stm -> . WHILE exp body
    (49) stm -> . WHILE exp DO body
    (50) stm -> . RETURN exp
    (51) stm -> . RETURN exp PONTOVIRGULA
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (14) s -> . s1
    (15) s -> . s2
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    IF              shift and go to state 18
    WHILE           shift and go to state 8
    RETURN          shift and go to state 9
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 6
    body                           shift and go to state 132
    s1                             shift and go to state 133
    s2                             shift and go to state 134
    stms                           shift and go to state 23
    stm                            shift and go to state 24
    s                              shift and go to state 7
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 119

    (25) s1 -> IF LPAREN exp RPAREN THEN s1 . ELSE s1
    (27) s1 -> IF LPAREN exp RPAREN THEN s1 . ELSE body
    (31) s1 -> IF LPAREN exp RPAREN THEN s1 . ELSE s2
    (29) s2 -> IF LPAREN exp RPAREN THEN s1 . ELSE s1
    (14) s -> s1 .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 135
    WHILE           reduce using rule 14 (s -> s1 .)
    RETURN          reduce using rule 14 (s -> s1 .)
    NUMBER          reduce using rule 14 (s -> s1 .)
    STRING          reduce using rule 14 (s -> s1 .)
    ID              reduce using rule 14 (s -> s1 .)
    IF              reduce using rule 14 (s -> s1 .)
    END             reduce using rule 14 (s -> s1 .)

  ! ELSE            [ reduce using rule 14 (s -> s1 .) ]


state 120

    (26) s1 -> IF LPAREN exp RPAREN THEN body . ELSE body
    (28) s1 -> IF LPAREN exp RPAREN THEN body . ELSE s1
    (30) s1 -> IF LPAREN exp RPAREN THEN body .
    (32) s1 -> IF LPAREN exp RPAREN THEN body . ELSE s2

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 136
    WHILE           reduce using rule 30 (s1 -> IF LPAREN exp RPAREN THEN body .)
    RETURN          reduce using rule 30 (s1 -> IF LPAREN exp RPAREN THEN body .)
    ID              reduce using rule 30 (s1 -> IF LPAREN exp RPAREN THEN body .)
    DEF             reduce using rule 30 (s1 -> IF LPAREN exp RPAREN THEN body .)
    NUMBER          reduce using rule 30 (s1 -> IF LPAREN exp RPAREN THEN body .)
    STRING          reduce using rule 30 (s1 -> IF LPAREN exp RPAREN THEN body .)
    IF              reduce using rule 30 (s1 -> IF LPAREN exp RPAREN THEN body .)
    $end            reduce using rule 30 (s1 -> IF LPAREN exp RPAREN THEN body .)
    END             reduce using rule 30 (s1 -> IF LPAREN exp RPAREN THEN body .)

  ! ELSE            [ reduce using rule 30 (s1 -> IF LPAREN exp RPAREN THEN body .) ]


state 121

    (40) s1 -> IF exp THEN s1 ELSE s1 .
    (14) s -> s1 .

  ! reduce/reduce conflict for WHILE resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for RETURN resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for NUMBER resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for STRING resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for ID resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for IF resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for END resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for ELSE resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for DEF resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for $end resolved using rule 14 (s -> s1 .)
    WHILE           reduce using rule 14 (s -> s1 .)
    RETURN          reduce using rule 14 (s -> s1 .)
    NUMBER          reduce using rule 14 (s -> s1 .)
    STRING          reduce using rule 14 (s -> s1 .)
    ID              reduce using rule 14 (s -> s1 .)
    IF              reduce using rule 14 (s -> s1 .)
    END             reduce using rule 14 (s -> s1 .)
    ELSE            reduce using rule 14 (s -> s1 .)
    DEF             reduce using rule 14 (s -> s1 .)
    $end            reduce using rule 14 (s -> s1 .)

  ! WHILE           [ reduce using rule 40 (s1 -> IF exp THEN s1 ELSE s1 .) ]
  ! RETURN          [ reduce using rule 40 (s1 -> IF exp THEN s1 ELSE s1 .) ]
  ! ID              [ reduce using rule 40 (s1 -> IF exp THEN s1 ELSE s1 .) ]
  ! DEF             [ reduce using rule 40 (s1 -> IF exp THEN s1 ELSE s1 .) ]
  ! NUMBER          [ reduce using rule 40 (s1 -> IF exp THEN s1 ELSE s1 .) ]
  ! STRING          [ reduce using rule 40 (s1 -> IF exp THEN s1 ELSE s1 .) ]
  ! IF              [ reduce using rule 40 (s1 -> IF exp THEN s1 ELSE s1 .) ]
  ! $end            [ reduce using rule 40 (s1 -> IF exp THEN s1 ELSE s1 .) ]
  ! END             [ reduce using rule 40 (s1 -> IF exp THEN s1 ELSE s1 .) ]
  ! ELSE            [ reduce using rule 40 (s1 -> IF exp THEN s1 ELSE s1 .) ]


state 122

    (42) s1 -> IF exp THEN s1 ELSE body .

    WHILE           reduce using rule 42 (s1 -> IF exp THEN s1 ELSE body .)
    RETURN          reduce using rule 42 (s1 -> IF exp THEN s1 ELSE body .)
    ID              reduce using rule 42 (s1 -> IF exp THEN s1 ELSE body .)
    DEF             reduce using rule 42 (s1 -> IF exp THEN s1 ELSE body .)
    NUMBER          reduce using rule 42 (s1 -> IF exp THEN s1 ELSE body .)
    STRING          reduce using rule 42 (s1 -> IF exp THEN s1 ELSE body .)
    IF              reduce using rule 42 (s1 -> IF exp THEN s1 ELSE body .)
    $end            reduce using rule 42 (s1 -> IF exp THEN s1 ELSE body .)
    END             reduce using rule 42 (s1 -> IF exp THEN s1 ELSE body .)
    ELSE            reduce using rule 42 (s1 -> IF exp THEN s1 ELSE body .)


state 123

    (46) s1 -> IF exp THEN s1 ELSE s2 .
    (15) s -> s2 .

  ! reduce/reduce conflict for WHILE resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for RETURN resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for NUMBER resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for STRING resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for ID resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for IF resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for END resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for ELSE resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for DEF resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for $end resolved using rule 15 (s -> s2 .)
    WHILE           reduce using rule 15 (s -> s2 .)
    RETURN          reduce using rule 15 (s -> s2 .)
    NUMBER          reduce using rule 15 (s -> s2 .)
    STRING          reduce using rule 15 (s -> s2 .)
    ID              reduce using rule 15 (s -> s2 .)
    IF              reduce using rule 15 (s -> s2 .)
    END             reduce using rule 15 (s -> s2 .)
    ELSE            reduce using rule 15 (s -> s2 .)
    DEF             reduce using rule 15 (s -> s2 .)
    $end            reduce using rule 15 (s -> s2 .)

  ! WHILE           [ reduce using rule 46 (s1 -> IF exp THEN s1 ELSE s2 .) ]
  ! RETURN          [ reduce using rule 46 (s1 -> IF exp THEN s1 ELSE s2 .) ]
  ! ID              [ reduce using rule 46 (s1 -> IF exp THEN s1 ELSE s2 .) ]
  ! DEF             [ reduce using rule 46 (s1 -> IF exp THEN s1 ELSE s2 .) ]
  ! NUMBER          [ reduce using rule 46 (s1 -> IF exp THEN s1 ELSE s2 .) ]
  ! STRING          [ reduce using rule 46 (s1 -> IF exp THEN s1 ELSE s2 .) ]
  ! IF              [ reduce using rule 46 (s1 -> IF exp THEN s1 ELSE s2 .) ]
  ! $end            [ reduce using rule 46 (s1 -> IF exp THEN s1 ELSE s2 .) ]
  ! END             [ reduce using rule 46 (s1 -> IF exp THEN s1 ELSE s2 .) ]
  ! ELSE            [ reduce using rule 46 (s1 -> IF exp THEN s1 ELSE s2 .) ]


state 124

    (41) s1 -> IF exp THEN body ELSE body .

    WHILE           reduce using rule 41 (s1 -> IF exp THEN body ELSE body .)
    RETURN          reduce using rule 41 (s1 -> IF exp THEN body ELSE body .)
    ID              reduce using rule 41 (s1 -> IF exp THEN body ELSE body .)
    DEF             reduce using rule 41 (s1 -> IF exp THEN body ELSE body .)
    NUMBER          reduce using rule 41 (s1 -> IF exp THEN body ELSE body .)
    STRING          reduce using rule 41 (s1 -> IF exp THEN body ELSE body .)
    IF              reduce using rule 41 (s1 -> IF exp THEN body ELSE body .)
    $end            reduce using rule 41 (s1 -> IF exp THEN body ELSE body .)
    END             reduce using rule 41 (s1 -> IF exp THEN body ELSE body .)
    ELSE            reduce using rule 41 (s1 -> IF exp THEN body ELSE body .)


state 125

    (43) s1 -> IF exp THEN body ELSE s1 .
    (14) s -> s1 .

  ! reduce/reduce conflict for WHILE resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for RETURN resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for NUMBER resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for STRING resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for ID resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for IF resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for END resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for ELSE resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for DEF resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for $end resolved using rule 14 (s -> s1 .)
    WHILE           reduce using rule 14 (s -> s1 .)
    RETURN          reduce using rule 14 (s -> s1 .)
    NUMBER          reduce using rule 14 (s -> s1 .)
    STRING          reduce using rule 14 (s -> s1 .)
    ID              reduce using rule 14 (s -> s1 .)
    IF              reduce using rule 14 (s -> s1 .)
    END             reduce using rule 14 (s -> s1 .)
    ELSE            reduce using rule 14 (s -> s1 .)
    DEF             reduce using rule 14 (s -> s1 .)
    $end            reduce using rule 14 (s -> s1 .)

  ! WHILE           [ reduce using rule 43 (s1 -> IF exp THEN body ELSE s1 .) ]
  ! RETURN          [ reduce using rule 43 (s1 -> IF exp THEN body ELSE s1 .) ]
  ! ID              [ reduce using rule 43 (s1 -> IF exp THEN body ELSE s1 .) ]
  ! DEF             [ reduce using rule 43 (s1 -> IF exp THEN body ELSE s1 .) ]
  ! NUMBER          [ reduce using rule 43 (s1 -> IF exp THEN body ELSE s1 .) ]
  ! STRING          [ reduce using rule 43 (s1 -> IF exp THEN body ELSE s1 .) ]
  ! IF              [ reduce using rule 43 (s1 -> IF exp THEN body ELSE s1 .) ]
  ! $end            [ reduce using rule 43 (s1 -> IF exp THEN body ELSE s1 .) ]
  ! END             [ reduce using rule 43 (s1 -> IF exp THEN body ELSE s1 .) ]
  ! ELSE            [ reduce using rule 43 (s1 -> IF exp THEN body ELSE s1 .) ]


state 126

    (47) s1 -> IF exp THEN body ELSE s2 .
    (15) s -> s2 .

  ! reduce/reduce conflict for WHILE resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for RETURN resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for NUMBER resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for STRING resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for ID resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for IF resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for END resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for ELSE resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for DEF resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for $end resolved using rule 15 (s -> s2 .)
    WHILE           reduce using rule 15 (s -> s2 .)
    RETURN          reduce using rule 15 (s -> s2 .)
    NUMBER          reduce using rule 15 (s -> s2 .)
    STRING          reduce using rule 15 (s -> s2 .)
    ID              reduce using rule 15 (s -> s2 .)
    IF              reduce using rule 15 (s -> s2 .)
    END             reduce using rule 15 (s -> s2 .)
    ELSE            reduce using rule 15 (s -> s2 .)
    DEF             reduce using rule 15 (s -> s2 .)
    $end            reduce using rule 15 (s -> s2 .)

  ! WHILE           [ reduce using rule 47 (s1 -> IF exp THEN body ELSE s2 .) ]
  ! RETURN          [ reduce using rule 47 (s1 -> IF exp THEN body ELSE s2 .) ]
  ! ID              [ reduce using rule 47 (s1 -> IF exp THEN body ELSE s2 .) ]
  ! DEF             [ reduce using rule 47 (s1 -> IF exp THEN body ELSE s2 .) ]
  ! NUMBER          [ reduce using rule 47 (s1 -> IF exp THEN body ELSE s2 .) ]
  ! STRING          [ reduce using rule 47 (s1 -> IF exp THEN body ELSE s2 .) ]
  ! IF              [ reduce using rule 47 (s1 -> IF exp THEN body ELSE s2 .) ]
  ! $end            [ reduce using rule 47 (s1 -> IF exp THEN body ELSE s2 .) ]
  ! END             [ reduce using rule 47 (s1 -> IF exp THEN body ELSE s2 .) ]
  ! ELSE            [ reduce using rule 47 (s1 -> IF exp THEN body ELSE s2 .) ]


state 127

    (21) s2 -> IF . LPAREN exp RPAREN s1 ELSE s1
    (29) s2 -> IF . LPAREN exp RPAREN THEN s1 ELSE s1
    (37) s2 -> IF . exp s1 ELSE s1
    (44) s2 -> IF . exp THEN s2 ELSE s2
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    LPAREN          shift and go to state 137
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 138
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 128

    (44) s2 -> IF exp THEN s2 ELSE s2 .

    WHILE           reduce using rule 44 (s2 -> IF exp THEN s2 ELSE s2 .)
    RETURN          reduce using rule 44 (s2 -> IF exp THEN s2 ELSE s2 .)
    ID              reduce using rule 44 (s2 -> IF exp THEN s2 ELSE s2 .)
    DEF             reduce using rule 44 (s2 -> IF exp THEN s2 ELSE s2 .)
    NUMBER          reduce using rule 44 (s2 -> IF exp THEN s2 ELSE s2 .)
    STRING          reduce using rule 44 (s2 -> IF exp THEN s2 ELSE s2 .)
    IF              reduce using rule 44 (s2 -> IF exp THEN s2 ELSE s2 .)
    $end            reduce using rule 44 (s2 -> IF exp THEN s2 ELSE s2 .)
    END             reduce using rule 44 (s2 -> IF exp THEN s2 ELSE s2 .)
    ELSE            reduce using rule 44 (s2 -> IF exp THEN s2 ELSE s2 .)


state 129

    (17) s1 -> IF LPAREN exp RPAREN s1 ELSE s1 .
    (21) s2 -> IF LPAREN exp RPAREN s1 ELSE s1 .
    (14) s -> s1 .

  ! reduce/reduce conflict for WHILE resolved using rule 17 (s1 -> IF LPAREN exp RPAREN s1 ELSE s1 .)
  ! reduce/reduce conflict for RETURN resolved using rule 17 (s1 -> IF LPAREN exp RPAREN s1 ELSE s1 .)
  ! reduce/reduce conflict for ID resolved using rule 17 (s1 -> IF LPAREN exp RPAREN s1 ELSE s1 .)
  ! reduce/reduce conflict for DEF resolved using rule 17 (s1 -> IF LPAREN exp RPAREN s1 ELSE s1 .)
  ! reduce/reduce conflict for NUMBER resolved using rule 17 (s1 -> IF LPAREN exp RPAREN s1 ELSE s1 .)
  ! reduce/reduce conflict for STRING resolved using rule 17 (s1 -> IF LPAREN exp RPAREN s1 ELSE s1 .)
  ! reduce/reduce conflict for IF resolved using rule 17 (s1 -> IF LPAREN exp RPAREN s1 ELSE s1 .)
  ! reduce/reduce conflict for $end resolved using rule 17 (s1 -> IF LPAREN exp RPAREN s1 ELSE s1 .)
  ! reduce/reduce conflict for END resolved using rule 17 (s1 -> IF LPAREN exp RPAREN s1 ELSE s1 .)
  ! reduce/reduce conflict for ELSE resolved using rule 17 (s1 -> IF LPAREN exp RPAREN s1 ELSE s1 .)
  ! reduce/reduce conflict for WHILE resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for RETURN resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for NUMBER resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for STRING resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for ID resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for IF resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for END resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for ELSE resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for DEF resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for $end resolved using rule 14 (s -> s1 .)
    WHILE           reduce using rule 14 (s -> s1 .)
    RETURN          reduce using rule 14 (s -> s1 .)
    NUMBER          reduce using rule 14 (s -> s1 .)
    STRING          reduce using rule 14 (s -> s1 .)
    ID              reduce using rule 14 (s -> s1 .)
    IF              reduce using rule 14 (s -> s1 .)
    END             reduce using rule 14 (s -> s1 .)
    ELSE            reduce using rule 14 (s -> s1 .)
    DEF             reduce using rule 14 (s -> s1 .)
    $end            reduce using rule 14 (s -> s1 .)

  ! WHILE           [ reduce using rule 17 (s1 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]
  ! RETURN          [ reduce using rule 17 (s1 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]
  ! ID              [ reduce using rule 17 (s1 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]
  ! DEF             [ reduce using rule 17 (s1 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]
  ! NUMBER          [ reduce using rule 17 (s1 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]
  ! STRING          [ reduce using rule 17 (s1 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]
  ! IF              [ reduce using rule 17 (s1 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]
  ! $end            [ reduce using rule 17 (s1 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]
  ! END             [ reduce using rule 17 (s1 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]
  ! ELSE            [ reduce using rule 17 (s1 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]
  ! WHILE           [ reduce using rule 21 (s2 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]
  ! RETURN          [ reduce using rule 21 (s2 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]
  ! ID              [ reduce using rule 21 (s2 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]
  ! DEF             [ reduce using rule 21 (s2 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]
  ! NUMBER          [ reduce using rule 21 (s2 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]
  ! STRING          [ reduce using rule 21 (s2 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]
  ! IF              [ reduce using rule 21 (s2 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]
  ! $end            [ reduce using rule 21 (s2 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]
  ! END             [ reduce using rule 21 (s2 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]
  ! ELSE            [ reduce using rule 21 (s2 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]


state 130

    (19) s1 -> IF LPAREN exp RPAREN s1 ELSE body .

    WHILE           reduce using rule 19 (s1 -> IF LPAREN exp RPAREN s1 ELSE body .)
    RETURN          reduce using rule 19 (s1 -> IF LPAREN exp RPAREN s1 ELSE body .)
    ID              reduce using rule 19 (s1 -> IF LPAREN exp RPAREN s1 ELSE body .)
    DEF             reduce using rule 19 (s1 -> IF LPAREN exp RPAREN s1 ELSE body .)
    NUMBER          reduce using rule 19 (s1 -> IF LPAREN exp RPAREN s1 ELSE body .)
    STRING          reduce using rule 19 (s1 -> IF LPAREN exp RPAREN s1 ELSE body .)
    IF              reduce using rule 19 (s1 -> IF LPAREN exp RPAREN s1 ELSE body .)
    $end            reduce using rule 19 (s1 -> IF LPAREN exp RPAREN s1 ELSE body .)
    END             reduce using rule 19 (s1 -> IF LPAREN exp RPAREN s1 ELSE body .)
    ELSE            reduce using rule 19 (s1 -> IF LPAREN exp RPAREN s1 ELSE body .)


state 131

    (23) s1 -> IF LPAREN exp RPAREN s1 ELSE s2 .
    (15) s -> s2 .

  ! reduce/reduce conflict for WHILE resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for RETURN resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for NUMBER resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for STRING resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for ID resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for IF resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for END resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for ELSE resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for DEF resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for $end resolved using rule 15 (s -> s2 .)
    WHILE           reduce using rule 15 (s -> s2 .)
    RETURN          reduce using rule 15 (s -> s2 .)
    NUMBER          reduce using rule 15 (s -> s2 .)
    STRING          reduce using rule 15 (s -> s2 .)
    ID              reduce using rule 15 (s -> s2 .)
    IF              reduce using rule 15 (s -> s2 .)
    END             reduce using rule 15 (s -> s2 .)
    ELSE            reduce using rule 15 (s -> s2 .)
    DEF             reduce using rule 15 (s -> s2 .)
    $end            reduce using rule 15 (s -> s2 .)

  ! WHILE           [ reduce using rule 23 (s1 -> IF LPAREN exp RPAREN s1 ELSE s2 .) ]
  ! RETURN          [ reduce using rule 23 (s1 -> IF LPAREN exp RPAREN s1 ELSE s2 .) ]
  ! ID              [ reduce using rule 23 (s1 -> IF LPAREN exp RPAREN s1 ELSE s2 .) ]
  ! DEF             [ reduce using rule 23 (s1 -> IF LPAREN exp RPAREN s1 ELSE s2 .) ]
  ! NUMBER          [ reduce using rule 23 (s1 -> IF LPAREN exp RPAREN s1 ELSE s2 .) ]
  ! STRING          [ reduce using rule 23 (s1 -> IF LPAREN exp RPAREN s1 ELSE s2 .) ]
  ! IF              [ reduce using rule 23 (s1 -> IF LPAREN exp RPAREN s1 ELSE s2 .) ]
  ! $end            [ reduce using rule 23 (s1 -> IF LPAREN exp RPAREN s1 ELSE s2 .) ]
  ! END             [ reduce using rule 23 (s1 -> IF LPAREN exp RPAREN s1 ELSE s2 .) ]
  ! ELSE            [ reduce using rule 23 (s1 -> IF LPAREN exp RPAREN s1 ELSE s2 .) ]


state 132

    (18) s1 -> IF LPAREN exp RPAREN body ELSE body .

    WHILE           reduce using rule 18 (s1 -> IF LPAREN exp RPAREN body ELSE body .)
    RETURN          reduce using rule 18 (s1 -> IF LPAREN exp RPAREN body ELSE body .)
    ID              reduce using rule 18 (s1 -> IF LPAREN exp RPAREN body ELSE body .)
    DEF             reduce using rule 18 (s1 -> IF LPAREN exp RPAREN body ELSE body .)
    NUMBER          reduce using rule 18 (s1 -> IF LPAREN exp RPAREN body ELSE body .)
    STRING          reduce using rule 18 (s1 -> IF LPAREN exp RPAREN body ELSE body .)
    IF              reduce using rule 18 (s1 -> IF LPAREN exp RPAREN body ELSE body .)
    $end            reduce using rule 18 (s1 -> IF LPAREN exp RPAREN body ELSE body .)
    END             reduce using rule 18 (s1 -> IF LPAREN exp RPAREN body ELSE body .)
    ELSE            reduce using rule 18 (s1 -> IF LPAREN exp RPAREN body ELSE body .)


state 133

    (20) s1 -> IF LPAREN exp RPAREN body ELSE s1 .
    (14) s -> s1 .

  ! reduce/reduce conflict for WHILE resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for RETURN resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for NUMBER resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for STRING resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for ID resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for IF resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for END resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for ELSE resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for DEF resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for $end resolved using rule 14 (s -> s1 .)
    WHILE           reduce using rule 14 (s -> s1 .)
    RETURN          reduce using rule 14 (s -> s1 .)
    NUMBER          reduce using rule 14 (s -> s1 .)
    STRING          reduce using rule 14 (s -> s1 .)
    ID              reduce using rule 14 (s -> s1 .)
    IF              reduce using rule 14 (s -> s1 .)
    END             reduce using rule 14 (s -> s1 .)
    ELSE            reduce using rule 14 (s -> s1 .)
    DEF             reduce using rule 14 (s -> s1 .)
    $end            reduce using rule 14 (s -> s1 .)

  ! WHILE           [ reduce using rule 20 (s1 -> IF LPAREN exp RPAREN body ELSE s1 .) ]
  ! RETURN          [ reduce using rule 20 (s1 -> IF LPAREN exp RPAREN body ELSE s1 .) ]
  ! ID              [ reduce using rule 20 (s1 -> IF LPAREN exp RPAREN body ELSE s1 .) ]
  ! DEF             [ reduce using rule 20 (s1 -> IF LPAREN exp RPAREN body ELSE s1 .) ]
  ! NUMBER          [ reduce using rule 20 (s1 -> IF LPAREN exp RPAREN body ELSE s1 .) ]
  ! STRING          [ reduce using rule 20 (s1 -> IF LPAREN exp RPAREN body ELSE s1 .) ]
  ! IF              [ reduce using rule 20 (s1 -> IF LPAREN exp RPAREN body ELSE s1 .) ]
  ! $end            [ reduce using rule 20 (s1 -> IF LPAREN exp RPAREN body ELSE s1 .) ]
  ! END             [ reduce using rule 20 (s1 -> IF LPAREN exp RPAREN body ELSE s1 .) ]
  ! ELSE            [ reduce using rule 20 (s1 -> IF LPAREN exp RPAREN body ELSE s1 .) ]


state 134

    (24) s1 -> IF LPAREN exp RPAREN body ELSE s2 .
    (15) s -> s2 .

  ! reduce/reduce conflict for WHILE resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for RETURN resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for NUMBER resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for STRING resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for ID resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for IF resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for END resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for ELSE resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for DEF resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for $end resolved using rule 15 (s -> s2 .)
    WHILE           reduce using rule 15 (s -> s2 .)
    RETURN          reduce using rule 15 (s -> s2 .)
    NUMBER          reduce using rule 15 (s -> s2 .)
    STRING          reduce using rule 15 (s -> s2 .)
    ID              reduce using rule 15 (s -> s2 .)
    IF              reduce using rule 15 (s -> s2 .)
    END             reduce using rule 15 (s -> s2 .)
    ELSE            reduce using rule 15 (s -> s2 .)
    DEF             reduce using rule 15 (s -> s2 .)
    $end            reduce using rule 15 (s -> s2 .)

  ! WHILE           [ reduce using rule 24 (s1 -> IF LPAREN exp RPAREN body ELSE s2 .) ]
  ! RETURN          [ reduce using rule 24 (s1 -> IF LPAREN exp RPAREN body ELSE s2 .) ]
  ! ID              [ reduce using rule 24 (s1 -> IF LPAREN exp RPAREN body ELSE s2 .) ]
  ! DEF             [ reduce using rule 24 (s1 -> IF LPAREN exp RPAREN body ELSE s2 .) ]
  ! NUMBER          [ reduce using rule 24 (s1 -> IF LPAREN exp RPAREN body ELSE s2 .) ]
  ! STRING          [ reduce using rule 24 (s1 -> IF LPAREN exp RPAREN body ELSE s2 .) ]
  ! IF              [ reduce using rule 24 (s1 -> IF LPAREN exp RPAREN body ELSE s2 .) ]
  ! $end            [ reduce using rule 24 (s1 -> IF LPAREN exp RPAREN body ELSE s2 .) ]
  ! END             [ reduce using rule 24 (s1 -> IF LPAREN exp RPAREN body ELSE s2 .) ]
  ! ELSE            [ reduce using rule 24 (s1 -> IF LPAREN exp RPAREN body ELSE s2 .) ]


state 135

    (25) s1 -> IF LPAREN exp RPAREN THEN s1 ELSE . s1
    (27) s1 -> IF LPAREN exp RPAREN THEN s1 ELSE . body
    (31) s1 -> IF LPAREN exp RPAREN THEN s1 ELSE . s2
    (29) s2 -> IF LPAREN exp RPAREN THEN s1 ELSE . s1
    (16) s1 -> . stms
    (17) s1 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (18) s1 -> . IF LPAREN exp RPAREN body ELSE body
    (19) s1 -> . IF LPAREN exp RPAREN s1 ELSE body
    (20) s1 -> . IF LPAREN exp RPAREN body ELSE s1
    (22) s1 -> . IF LPAREN exp RPAREN body
    (23) s1 -> . IF LPAREN exp RPAREN s1 ELSE s2
    (24) s1 -> . IF LPAREN exp RPAREN body ELSE s2
    (25) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (26) s1 -> . IF LPAREN exp RPAREN THEN body ELSE body
    (27) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE body
    (28) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s1
    (30) s1 -> . IF LPAREN exp RPAREN THEN body
    (31) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s2
    (32) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s2
    (33) s1 -> . IF exp s1 ELSE s1
    (34) s1 -> . IF exp body ELSE body
    (35) s1 -> . IF exp s1 ELSE body
    (36) s1 -> . IF exp body ELSE s1
    (38) s1 -> . IF exp body
    (39) s1 -> . IF exp body ELSE s2
    (40) s1 -> . IF exp THEN s1 ELSE s1
    (41) s1 -> . IF exp THEN body ELSE body
    (42) s1 -> . IF exp THEN s1 ELSE body
    (43) s1 -> . IF exp THEN body ELSE s1
    (45) s1 -> . IF exp THEN body
    (46) s1 -> . IF exp THEN s1 ELSE s2
    (47) s1 -> . IF exp THEN body ELSE s2
    (8) body -> . stms END
    (21) s2 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (29) s2 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (37) s2 -> . IF exp s1 ELSE s1
    (44) s2 -> . IF exp THEN s2 ELSE s2
    (9) stms -> . stm
    (10) stms -> . stm stms
    (11) stm -> . exp
    (12) stm -> . exp PONTOVIRGULA
    (13) stm -> . s
    (48) stm -> . WHILE exp body
    (49) stm -> . WHILE exp DO body
    (50) stm -> . RETURN exp
    (51) stm -> . RETURN exp PONTOVIRGULA
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (14) s -> . s1
    (15) s -> . s2
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    IF              shift and go to state 18
    WHILE           shift and go to state 8
    RETURN          shift and go to state 9
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 6
    s1                             shift and go to state 139
    body                           shift and go to state 140
    s2                             shift and go to state 141
    stms                           shift and go to state 95
    stm                            shift and go to state 24
    s                              shift and go to state 7
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 136

    (26) s1 -> IF LPAREN exp RPAREN THEN body ELSE . body
    (28) s1 -> IF LPAREN exp RPAREN THEN body ELSE . s1
    (32) s1 -> IF LPAREN exp RPAREN THEN body ELSE . s2
    (8) body -> . stms END
    (16) s1 -> . stms
    (17) s1 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (18) s1 -> . IF LPAREN exp RPAREN body ELSE body
    (19) s1 -> . IF LPAREN exp RPAREN s1 ELSE body
    (20) s1 -> . IF LPAREN exp RPAREN body ELSE s1
    (22) s1 -> . IF LPAREN exp RPAREN body
    (23) s1 -> . IF LPAREN exp RPAREN s1 ELSE s2
    (24) s1 -> . IF LPAREN exp RPAREN body ELSE s2
    (25) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (26) s1 -> . IF LPAREN exp RPAREN THEN body ELSE body
    (27) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE body
    (28) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s1
    (30) s1 -> . IF LPAREN exp RPAREN THEN body
    (31) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s2
    (32) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s2
    (33) s1 -> . IF exp s1 ELSE s1
    (34) s1 -> . IF exp body ELSE body
    (35) s1 -> . IF exp s1 ELSE body
    (36) s1 -> . IF exp body ELSE s1
    (38) s1 -> . IF exp body
    (39) s1 -> . IF exp body ELSE s2
    (40) s1 -> . IF exp THEN s1 ELSE s1
    (41) s1 -> . IF exp THEN body ELSE body
    (42) s1 -> . IF exp THEN s1 ELSE body
    (43) s1 -> . IF exp THEN body ELSE s1
    (45) s1 -> . IF exp THEN body
    (46) s1 -> . IF exp THEN s1 ELSE s2
    (47) s1 -> . IF exp THEN body ELSE s2
    (21) s2 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (29) s2 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (37) s2 -> . IF exp s1 ELSE s1
    (44) s2 -> . IF exp THEN s2 ELSE s2
    (9) stms -> . stm
    (10) stms -> . stm stms
    (11) stm -> . exp
    (12) stm -> . exp PONTOVIRGULA
    (13) stm -> . s
    (48) stm -> . WHILE exp body
    (49) stm -> . WHILE exp DO body
    (50) stm -> . RETURN exp
    (51) stm -> . RETURN exp PONTOVIRGULA
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (14) s -> . s1
    (15) s -> . s2
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    IF              shift and go to state 18
    WHILE           shift and go to state 8
    RETURN          shift and go to state 9
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 6
    body                           shift and go to state 142
    s1                             shift and go to state 143
    s2                             shift and go to state 144
    stms                           shift and go to state 23
    stm                            shift and go to state 24
    s                              shift and go to state 7
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 137

    (21) s2 -> IF LPAREN . exp RPAREN s1 ELSE s1
    (29) s2 -> IF LPAREN . exp RPAREN THEN s1 ELSE s1
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp

    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 145
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 138

    (37) s2 -> IF exp . s1 ELSE s1
    (44) s2 -> IF exp . THEN s2 ELSE s2
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp
    (16) s1 -> . stms
    (17) s1 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (18) s1 -> . IF LPAREN exp RPAREN body ELSE body
    (19) s1 -> . IF LPAREN exp RPAREN s1 ELSE body
    (20) s1 -> . IF LPAREN exp RPAREN body ELSE s1
    (22) s1 -> . IF LPAREN exp RPAREN body
    (23) s1 -> . IF LPAREN exp RPAREN s1 ELSE s2
    (24) s1 -> . IF LPAREN exp RPAREN body ELSE s2
    (25) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (26) s1 -> . IF LPAREN exp RPAREN THEN body ELSE body
    (27) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE body
    (28) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s1
    (30) s1 -> . IF LPAREN exp RPAREN THEN body
    (31) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s2
    (32) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s2
    (33) s1 -> . IF exp s1 ELSE s1
    (34) s1 -> . IF exp body ELSE body
    (35) s1 -> . IF exp s1 ELSE body
    (36) s1 -> . IF exp body ELSE s1
    (38) s1 -> . IF exp body
    (39) s1 -> . IF exp body ELSE s2
    (40) s1 -> . IF exp THEN s1 ELSE s1
    (41) s1 -> . IF exp THEN body ELSE body
    (42) s1 -> . IF exp THEN s1 ELSE body
    (43) s1 -> . IF exp THEN body ELSE s1
    (45) s1 -> . IF exp THEN body
    (46) s1 -> . IF exp THEN s1 ELSE s2
    (47) s1 -> . IF exp THEN body ELSE s2
    (9) stms -> . stm
    (10) stms -> . stm stms
    (11) stm -> . exp
    (12) stm -> . exp PONTOVIRGULA
    (13) stm -> . s
    (48) stm -> . WHILE exp body
    (49) stm -> . WHILE exp DO body
    (50) stm -> . RETURN exp
    (51) stm -> . RETURN exp PONTOVIRGULA
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (14) s -> . s1
    (15) s -> . s2
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp
    (21) s2 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (29) s2 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (37) s2 -> . IF exp s1 ELSE s1
    (44) s2 -> . IF exp THEN s2 ELSE s2

    THEN            shift and go to state 147
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51
    IF              shift and go to state 18
    WHILE           shift and go to state 8
    RETURN          shift and go to state 9
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 6
    s1                             shift and go to state 146
    s2                             shift and go to state 16
    stms                           shift and go to state 17
    stm                            shift and go to state 24
    s                              shift and go to state 7
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 139

    (25) s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .
    (29) s2 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .
    (14) s -> s1 .

  ! reduce/reduce conflict for WHILE resolved using rule 25 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .)
  ! reduce/reduce conflict for RETURN resolved using rule 25 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .)
  ! reduce/reduce conflict for ID resolved using rule 25 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .)
  ! reduce/reduce conflict for DEF resolved using rule 25 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .)
  ! reduce/reduce conflict for NUMBER resolved using rule 25 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .)
  ! reduce/reduce conflict for STRING resolved using rule 25 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .)
  ! reduce/reduce conflict for IF resolved using rule 25 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .)
  ! reduce/reduce conflict for $end resolved using rule 25 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .)
  ! reduce/reduce conflict for END resolved using rule 25 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .)
  ! reduce/reduce conflict for ELSE resolved using rule 25 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .)
  ! reduce/reduce conflict for WHILE resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for RETURN resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for NUMBER resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for STRING resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for ID resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for IF resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for END resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for ELSE resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for DEF resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for $end resolved using rule 14 (s -> s1 .)
    WHILE           reduce using rule 14 (s -> s1 .)
    RETURN          reduce using rule 14 (s -> s1 .)
    NUMBER          reduce using rule 14 (s -> s1 .)
    STRING          reduce using rule 14 (s -> s1 .)
    ID              reduce using rule 14 (s -> s1 .)
    IF              reduce using rule 14 (s -> s1 .)
    END             reduce using rule 14 (s -> s1 .)
    ELSE            reduce using rule 14 (s -> s1 .)
    DEF             reduce using rule 14 (s -> s1 .)
    $end            reduce using rule 14 (s -> s1 .)

  ! WHILE           [ reduce using rule 25 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]
  ! RETURN          [ reduce using rule 25 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]
  ! ID              [ reduce using rule 25 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]
  ! DEF             [ reduce using rule 25 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]
  ! NUMBER          [ reduce using rule 25 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]
  ! STRING          [ reduce using rule 25 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]
  ! IF              [ reduce using rule 25 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]
  ! $end            [ reduce using rule 25 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]
  ! END             [ reduce using rule 25 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]
  ! ELSE            [ reduce using rule 25 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]
  ! WHILE           [ reduce using rule 29 (s2 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]
  ! RETURN          [ reduce using rule 29 (s2 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]
  ! ID              [ reduce using rule 29 (s2 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]
  ! DEF             [ reduce using rule 29 (s2 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]
  ! NUMBER          [ reduce using rule 29 (s2 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]
  ! STRING          [ reduce using rule 29 (s2 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]
  ! IF              [ reduce using rule 29 (s2 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]
  ! $end            [ reduce using rule 29 (s2 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]
  ! END             [ reduce using rule 29 (s2 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]
  ! ELSE            [ reduce using rule 29 (s2 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]


state 140

    (27) s1 -> IF LPAREN exp RPAREN THEN s1 ELSE body .

    WHILE           reduce using rule 27 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE body .)
    RETURN          reduce using rule 27 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE body .)
    ID              reduce using rule 27 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE body .)
    DEF             reduce using rule 27 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE body .)
    NUMBER          reduce using rule 27 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE body .)
    STRING          reduce using rule 27 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE body .)
    IF              reduce using rule 27 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE body .)
    $end            reduce using rule 27 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE body .)
    END             reduce using rule 27 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE body .)
    ELSE            reduce using rule 27 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE body .)


state 141

    (31) s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s2 .
    (15) s -> s2 .

  ! reduce/reduce conflict for WHILE resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for RETURN resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for NUMBER resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for STRING resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for ID resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for IF resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for END resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for ELSE resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for DEF resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for $end resolved using rule 15 (s -> s2 .)
    WHILE           reduce using rule 15 (s -> s2 .)
    RETURN          reduce using rule 15 (s -> s2 .)
    NUMBER          reduce using rule 15 (s -> s2 .)
    STRING          reduce using rule 15 (s -> s2 .)
    ID              reduce using rule 15 (s -> s2 .)
    IF              reduce using rule 15 (s -> s2 .)
    END             reduce using rule 15 (s -> s2 .)
    ELSE            reduce using rule 15 (s -> s2 .)
    DEF             reduce using rule 15 (s -> s2 .)
    $end            reduce using rule 15 (s -> s2 .)

  ! WHILE           [ reduce using rule 31 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s2 .) ]
  ! RETURN          [ reduce using rule 31 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s2 .) ]
  ! ID              [ reduce using rule 31 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s2 .) ]
  ! DEF             [ reduce using rule 31 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s2 .) ]
  ! NUMBER          [ reduce using rule 31 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s2 .) ]
  ! STRING          [ reduce using rule 31 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s2 .) ]
  ! IF              [ reduce using rule 31 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s2 .) ]
  ! $end            [ reduce using rule 31 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s2 .) ]
  ! END             [ reduce using rule 31 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s2 .) ]
  ! ELSE            [ reduce using rule 31 (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s2 .) ]


state 142

    (26) s1 -> IF LPAREN exp RPAREN THEN body ELSE body .

    WHILE           reduce using rule 26 (s1 -> IF LPAREN exp RPAREN THEN body ELSE body .)
    RETURN          reduce using rule 26 (s1 -> IF LPAREN exp RPAREN THEN body ELSE body .)
    ID              reduce using rule 26 (s1 -> IF LPAREN exp RPAREN THEN body ELSE body .)
    DEF             reduce using rule 26 (s1 -> IF LPAREN exp RPAREN THEN body ELSE body .)
    NUMBER          reduce using rule 26 (s1 -> IF LPAREN exp RPAREN THEN body ELSE body .)
    STRING          reduce using rule 26 (s1 -> IF LPAREN exp RPAREN THEN body ELSE body .)
    IF              reduce using rule 26 (s1 -> IF LPAREN exp RPAREN THEN body ELSE body .)
    $end            reduce using rule 26 (s1 -> IF LPAREN exp RPAREN THEN body ELSE body .)
    END             reduce using rule 26 (s1 -> IF LPAREN exp RPAREN THEN body ELSE body .)
    ELSE            reduce using rule 26 (s1 -> IF LPAREN exp RPAREN THEN body ELSE body .)


state 143

    (28) s1 -> IF LPAREN exp RPAREN THEN body ELSE s1 .
    (14) s -> s1 .

  ! reduce/reduce conflict for WHILE resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for RETURN resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for NUMBER resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for STRING resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for ID resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for IF resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for END resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for ELSE resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for DEF resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for $end resolved using rule 14 (s -> s1 .)
    WHILE           reduce using rule 14 (s -> s1 .)
    RETURN          reduce using rule 14 (s -> s1 .)
    NUMBER          reduce using rule 14 (s -> s1 .)
    STRING          reduce using rule 14 (s -> s1 .)
    ID              reduce using rule 14 (s -> s1 .)
    IF              reduce using rule 14 (s -> s1 .)
    END             reduce using rule 14 (s -> s1 .)
    ELSE            reduce using rule 14 (s -> s1 .)
    DEF             reduce using rule 14 (s -> s1 .)
    $end            reduce using rule 14 (s -> s1 .)

  ! WHILE           [ reduce using rule 28 (s1 -> IF LPAREN exp RPAREN THEN body ELSE s1 .) ]
  ! RETURN          [ reduce using rule 28 (s1 -> IF LPAREN exp RPAREN THEN body ELSE s1 .) ]
  ! ID              [ reduce using rule 28 (s1 -> IF LPAREN exp RPAREN THEN body ELSE s1 .) ]
  ! DEF             [ reduce using rule 28 (s1 -> IF LPAREN exp RPAREN THEN body ELSE s1 .) ]
  ! NUMBER          [ reduce using rule 28 (s1 -> IF LPAREN exp RPAREN THEN body ELSE s1 .) ]
  ! STRING          [ reduce using rule 28 (s1 -> IF LPAREN exp RPAREN THEN body ELSE s1 .) ]
  ! IF              [ reduce using rule 28 (s1 -> IF LPAREN exp RPAREN THEN body ELSE s1 .) ]
  ! $end            [ reduce using rule 28 (s1 -> IF LPAREN exp RPAREN THEN body ELSE s1 .) ]
  ! END             [ reduce using rule 28 (s1 -> IF LPAREN exp RPAREN THEN body ELSE s1 .) ]
  ! ELSE            [ reduce using rule 28 (s1 -> IF LPAREN exp RPAREN THEN body ELSE s1 .) ]


state 144

    (32) s1 -> IF LPAREN exp RPAREN THEN body ELSE s2 .
    (15) s -> s2 .

  ! reduce/reduce conflict for WHILE resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for RETURN resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for NUMBER resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for STRING resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for ID resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for IF resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for END resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for ELSE resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for DEF resolved using rule 15 (s -> s2 .)
  ! reduce/reduce conflict for $end resolved using rule 15 (s -> s2 .)
    WHILE           reduce using rule 15 (s -> s2 .)
    RETURN          reduce using rule 15 (s -> s2 .)
    NUMBER          reduce using rule 15 (s -> s2 .)
    STRING          reduce using rule 15 (s -> s2 .)
    ID              reduce using rule 15 (s -> s2 .)
    IF              reduce using rule 15 (s -> s2 .)
    END             reduce using rule 15 (s -> s2 .)
    ELSE            reduce using rule 15 (s -> s2 .)
    DEF             reduce using rule 15 (s -> s2 .)
    $end            reduce using rule 15 (s -> s2 .)

  ! WHILE           [ reduce using rule 32 (s1 -> IF LPAREN exp RPAREN THEN body ELSE s2 .) ]
  ! RETURN          [ reduce using rule 32 (s1 -> IF LPAREN exp RPAREN THEN body ELSE s2 .) ]
  ! ID              [ reduce using rule 32 (s1 -> IF LPAREN exp RPAREN THEN body ELSE s2 .) ]
  ! DEF             [ reduce using rule 32 (s1 -> IF LPAREN exp RPAREN THEN body ELSE s2 .) ]
  ! NUMBER          [ reduce using rule 32 (s1 -> IF LPAREN exp RPAREN THEN body ELSE s2 .) ]
  ! STRING          [ reduce using rule 32 (s1 -> IF LPAREN exp RPAREN THEN body ELSE s2 .) ]
  ! IF              [ reduce using rule 32 (s1 -> IF LPAREN exp RPAREN THEN body ELSE s2 .) ]
  ! $end            [ reduce using rule 32 (s1 -> IF LPAREN exp RPAREN THEN body ELSE s2 .) ]
  ! END             [ reduce using rule 32 (s1 -> IF LPAREN exp RPAREN THEN body ELSE s2 .) ]
  ! ELSE            [ reduce using rule 32 (s1 -> IF LPAREN exp RPAREN THEN body ELSE s2 .) ]


state 145

    (21) s2 -> IF LPAREN exp . RPAREN s1 ELSE s1
    (29) s2 -> IF LPAREN exp . RPAREN THEN s1 ELSE s1
    (52) exp -> exp . PLUS exp
    (53) exp -> exp . MINUS exp
    (54) exp -> exp . TIMES exp
    (55) exp -> exp . DIV exp
    (56) exp -> exp . EXPO exp
    (57) exp -> exp . REST exp
    (58) exp -> exp . TRIPLEEQ exp
    (59) exp -> exp . SMALL exp
    (60) exp -> exp . BIGGEST exp
    (61) exp -> exp . DIFF exp
    (62) exp -> exp . POINTRANGE exp
    (63) exp -> exp . SMALLEQ exp
    (64) exp -> exp . BIGGESTEQ exp
    (65) exp -> exp . BIGGSMALLEQ exp
    (66) exp -> exp . DOUBLEBAR exp
    (67) exp -> exp . DOUBLEE exp
    (68) exp -> exp . EXCLAMATION exp
    (69) exp -> exp . SIMPLEBAR exp
    (70) exp -> exp . SIMPLEE exp
    (71) exp -> exp . CIRCUMFLEX exp
    (72) exp -> exp . NEGATION exp
    (73) exp -> exp . LSHIFT exp
    (74) exp -> exp . RSHIFT exp
    (80) exp -> exp . DOUBLEEQUAL exp

    RPAREN          shift and go to state 148
    PLUS            shift and go to state 28
    MINUS           shift and go to state 29
    TIMES           shift and go to state 30
    DIV             shift and go to state 31
    EXPO            shift and go to state 32
    REST            shift and go to state 33
    TRIPLEEQ        shift and go to state 34
    SMALL           shift and go to state 35
    BIGGEST         shift and go to state 36
    DIFF            shift and go to state 37
    POINTRANGE      shift and go to state 38
    SMALLEQ         shift and go to state 39
    BIGGESTEQ       shift and go to state 40
    BIGGSMALLEQ     shift and go to state 41
    DOUBLEBAR       shift and go to state 42
    DOUBLEE         shift and go to state 43
    EXCLAMATION     shift and go to state 44
    SIMPLEBAR       shift and go to state 45
    SIMPLEE         shift and go to state 46
    CIRCUMFLEX      shift and go to state 47
    NEGATION        shift and go to state 48
    LSHIFT          shift and go to state 49
    RSHIFT          shift and go to state 50
    DOUBLEEQUAL     shift and go to state 51


state 146

    (37) s2 -> IF exp s1 . ELSE s1
    (14) s -> s1 .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 149
    WHILE           reduce using rule 14 (s -> s1 .)
    RETURN          reduce using rule 14 (s -> s1 .)
    NUMBER          reduce using rule 14 (s -> s1 .)
    STRING          reduce using rule 14 (s -> s1 .)
    ID              reduce using rule 14 (s -> s1 .)
    IF              reduce using rule 14 (s -> s1 .)

  ! ELSE            [ reduce using rule 14 (s -> s1 .) ]


state 147

    (44) s2 -> IF exp THEN . s2 ELSE s2
    (21) s2 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (29) s2 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (37) s2 -> . IF exp s1 ELSE s1
    (44) s2 -> . IF exp THEN s2 ELSE s2

    IF              shift and go to state 127

    s2                             shift and go to state 150

state 148

    (21) s2 -> IF LPAREN exp RPAREN . s1 ELSE s1
    (29) s2 -> IF LPAREN exp RPAREN . THEN s1 ELSE s1
    (16) s1 -> . stms
    (17) s1 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (18) s1 -> . IF LPAREN exp RPAREN body ELSE body
    (19) s1 -> . IF LPAREN exp RPAREN s1 ELSE body
    (20) s1 -> . IF LPAREN exp RPAREN body ELSE s1
    (22) s1 -> . IF LPAREN exp RPAREN body
    (23) s1 -> . IF LPAREN exp RPAREN s1 ELSE s2
    (24) s1 -> . IF LPAREN exp RPAREN body ELSE s2
    (25) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (26) s1 -> . IF LPAREN exp RPAREN THEN body ELSE body
    (27) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE body
    (28) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s1
    (30) s1 -> . IF LPAREN exp RPAREN THEN body
    (31) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s2
    (32) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s2
    (33) s1 -> . IF exp s1 ELSE s1
    (34) s1 -> . IF exp body ELSE body
    (35) s1 -> . IF exp s1 ELSE body
    (36) s1 -> . IF exp body ELSE s1
    (38) s1 -> . IF exp body
    (39) s1 -> . IF exp body ELSE s2
    (40) s1 -> . IF exp THEN s1 ELSE s1
    (41) s1 -> . IF exp THEN body ELSE body
    (42) s1 -> . IF exp THEN s1 ELSE body
    (43) s1 -> . IF exp THEN body ELSE s1
    (45) s1 -> . IF exp THEN body
    (46) s1 -> . IF exp THEN s1 ELSE s2
    (47) s1 -> . IF exp THEN body ELSE s2
    (9) stms -> . stm
    (10) stms -> . stm stms
    (11) stm -> . exp
    (12) stm -> . exp PONTOVIRGULA
    (13) stm -> . s
    (48) stm -> . WHILE exp body
    (49) stm -> . WHILE exp DO body
    (50) stm -> . RETURN exp
    (51) stm -> . RETURN exp PONTOVIRGULA
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (14) s -> . s1
    (15) s -> . s2
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp
    (21) s2 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (29) s2 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (37) s2 -> . IF exp s1 ELSE s1
    (44) s2 -> . IF exp THEN s2 ELSE s2

    THEN            shift and go to state 152
    IF              shift and go to state 18
    WHILE           shift and go to state 8
    RETURN          shift and go to state 9
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 6
    s1                             shift and go to state 151
    stms                           shift and go to state 17
    s2                             shift and go to state 16
    stm                            shift and go to state 24
    s                              shift and go to state 7
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 149

    (37) s2 -> IF exp s1 ELSE . s1
    (16) s1 -> . stms
    (17) s1 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (18) s1 -> . IF LPAREN exp RPAREN body ELSE body
    (19) s1 -> . IF LPAREN exp RPAREN s1 ELSE body
    (20) s1 -> . IF LPAREN exp RPAREN body ELSE s1
    (22) s1 -> . IF LPAREN exp RPAREN body
    (23) s1 -> . IF LPAREN exp RPAREN s1 ELSE s2
    (24) s1 -> . IF LPAREN exp RPAREN body ELSE s2
    (25) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (26) s1 -> . IF LPAREN exp RPAREN THEN body ELSE body
    (27) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE body
    (28) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s1
    (30) s1 -> . IF LPAREN exp RPAREN THEN body
    (31) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s2
    (32) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s2
    (33) s1 -> . IF exp s1 ELSE s1
    (34) s1 -> . IF exp body ELSE body
    (35) s1 -> . IF exp s1 ELSE body
    (36) s1 -> . IF exp body ELSE s1
    (38) s1 -> . IF exp body
    (39) s1 -> . IF exp body ELSE s2
    (40) s1 -> . IF exp THEN s1 ELSE s1
    (41) s1 -> . IF exp THEN body ELSE body
    (42) s1 -> . IF exp THEN s1 ELSE body
    (43) s1 -> . IF exp THEN body ELSE s1
    (45) s1 -> . IF exp THEN body
    (46) s1 -> . IF exp THEN s1 ELSE s2
    (47) s1 -> . IF exp THEN body ELSE s2
    (9) stms -> . stm
    (10) stms -> . stm stms
    (11) stm -> . exp
    (12) stm -> . exp PONTOVIRGULA
    (13) stm -> . s
    (48) stm -> . WHILE exp body
    (49) stm -> . WHILE exp DO body
    (50) stm -> . RETURN exp
    (51) stm -> . RETURN exp PONTOVIRGULA
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (14) s -> . s1
    (15) s -> . s2
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp
    (21) s2 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (29) s2 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (37) s2 -> . IF exp s1 ELSE s1
    (44) s2 -> . IF exp THEN s2 ELSE s2

    IF              shift and go to state 18
    WHILE           shift and go to state 8
    RETURN          shift and go to state 9
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 6
    s1                             shift and go to state 153
    stms                           shift and go to state 17
    s2                             shift and go to state 16
    stm                            shift and go to state 24
    s                              shift and go to state 7
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 150

    (44) s2 -> IF exp THEN s2 . ELSE s2

    ELSE            shift and go to state 116


state 151

    (21) s2 -> IF LPAREN exp RPAREN s1 . ELSE s1
    (14) s -> s1 .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 154
    WHILE           reduce using rule 14 (s -> s1 .)
    RETURN          reduce using rule 14 (s -> s1 .)
    NUMBER          reduce using rule 14 (s -> s1 .)
    STRING          reduce using rule 14 (s -> s1 .)
    ID              reduce using rule 14 (s -> s1 .)
    IF              reduce using rule 14 (s -> s1 .)

  ! ELSE            [ reduce using rule 14 (s -> s1 .) ]


state 152

    (29) s2 -> IF LPAREN exp RPAREN THEN . s1 ELSE s1
    (16) s1 -> . stms
    (17) s1 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (18) s1 -> . IF LPAREN exp RPAREN body ELSE body
    (19) s1 -> . IF LPAREN exp RPAREN s1 ELSE body
    (20) s1 -> . IF LPAREN exp RPAREN body ELSE s1
    (22) s1 -> . IF LPAREN exp RPAREN body
    (23) s1 -> . IF LPAREN exp RPAREN s1 ELSE s2
    (24) s1 -> . IF LPAREN exp RPAREN body ELSE s2
    (25) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (26) s1 -> . IF LPAREN exp RPAREN THEN body ELSE body
    (27) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE body
    (28) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s1
    (30) s1 -> . IF LPAREN exp RPAREN THEN body
    (31) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s2
    (32) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s2
    (33) s1 -> . IF exp s1 ELSE s1
    (34) s1 -> . IF exp body ELSE body
    (35) s1 -> . IF exp s1 ELSE body
    (36) s1 -> . IF exp body ELSE s1
    (38) s1 -> . IF exp body
    (39) s1 -> . IF exp body ELSE s2
    (40) s1 -> . IF exp THEN s1 ELSE s1
    (41) s1 -> . IF exp THEN body ELSE body
    (42) s1 -> . IF exp THEN s1 ELSE body
    (43) s1 -> . IF exp THEN body ELSE s1
    (45) s1 -> . IF exp THEN body
    (46) s1 -> . IF exp THEN s1 ELSE s2
    (47) s1 -> . IF exp THEN body ELSE s2
    (9) stms -> . stm
    (10) stms -> . stm stms
    (11) stm -> . exp
    (12) stm -> . exp PONTOVIRGULA
    (13) stm -> . s
    (48) stm -> . WHILE exp body
    (49) stm -> . WHILE exp DO body
    (50) stm -> . RETURN exp
    (51) stm -> . RETURN exp PONTOVIRGULA
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (14) s -> . s1
    (15) s -> . s2
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp
    (21) s2 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (29) s2 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (37) s2 -> . IF exp s1 ELSE s1
    (44) s2 -> . IF exp THEN s2 ELSE s2

    IF              shift and go to state 18
    WHILE           shift and go to state 8
    RETURN          shift and go to state 9
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 6
    s1                             shift and go to state 155
    stms                           shift and go to state 17
    s2                             shift and go to state 16
    stm                            shift and go to state 24
    s                              shift and go to state 7
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 153

    (37) s2 -> IF exp s1 ELSE s1 .
    (14) s -> s1 .

  ! reduce/reduce conflict for WHILE resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for RETURN resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for NUMBER resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for STRING resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for ID resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for IF resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for END resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for ELSE resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for DEF resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for $end resolved using rule 14 (s -> s1 .)
    WHILE           reduce using rule 14 (s -> s1 .)
    RETURN          reduce using rule 14 (s -> s1 .)
    NUMBER          reduce using rule 14 (s -> s1 .)
    STRING          reduce using rule 14 (s -> s1 .)
    ID              reduce using rule 14 (s -> s1 .)
    IF              reduce using rule 14 (s -> s1 .)
    END             reduce using rule 14 (s -> s1 .)
    ELSE            reduce using rule 14 (s -> s1 .)
    DEF             reduce using rule 14 (s -> s1 .)
    $end            reduce using rule 14 (s -> s1 .)

  ! WHILE           [ reduce using rule 37 (s2 -> IF exp s1 ELSE s1 .) ]
  ! RETURN          [ reduce using rule 37 (s2 -> IF exp s1 ELSE s1 .) ]
  ! NUMBER          [ reduce using rule 37 (s2 -> IF exp s1 ELSE s1 .) ]
  ! STRING          [ reduce using rule 37 (s2 -> IF exp s1 ELSE s1 .) ]
  ! ID              [ reduce using rule 37 (s2 -> IF exp s1 ELSE s1 .) ]
  ! IF              [ reduce using rule 37 (s2 -> IF exp s1 ELSE s1 .) ]
  ! END             [ reduce using rule 37 (s2 -> IF exp s1 ELSE s1 .) ]
  ! ELSE            [ reduce using rule 37 (s2 -> IF exp s1 ELSE s1 .) ]
  ! DEF             [ reduce using rule 37 (s2 -> IF exp s1 ELSE s1 .) ]
  ! $end            [ reduce using rule 37 (s2 -> IF exp s1 ELSE s1 .) ]


state 154

    (21) s2 -> IF LPAREN exp RPAREN s1 ELSE . s1
    (16) s1 -> . stms
    (17) s1 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (18) s1 -> . IF LPAREN exp RPAREN body ELSE body
    (19) s1 -> . IF LPAREN exp RPAREN s1 ELSE body
    (20) s1 -> . IF LPAREN exp RPAREN body ELSE s1
    (22) s1 -> . IF LPAREN exp RPAREN body
    (23) s1 -> . IF LPAREN exp RPAREN s1 ELSE s2
    (24) s1 -> . IF LPAREN exp RPAREN body ELSE s2
    (25) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (26) s1 -> . IF LPAREN exp RPAREN THEN body ELSE body
    (27) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE body
    (28) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s1
    (30) s1 -> . IF LPAREN exp RPAREN THEN body
    (31) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s2
    (32) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s2
    (33) s1 -> . IF exp s1 ELSE s1
    (34) s1 -> . IF exp body ELSE body
    (35) s1 -> . IF exp s1 ELSE body
    (36) s1 -> . IF exp body ELSE s1
    (38) s1 -> . IF exp body
    (39) s1 -> . IF exp body ELSE s2
    (40) s1 -> . IF exp THEN s1 ELSE s1
    (41) s1 -> . IF exp THEN body ELSE body
    (42) s1 -> . IF exp THEN s1 ELSE body
    (43) s1 -> . IF exp THEN body ELSE s1
    (45) s1 -> . IF exp THEN body
    (46) s1 -> . IF exp THEN s1 ELSE s2
    (47) s1 -> . IF exp THEN body ELSE s2
    (9) stms -> . stm
    (10) stms -> . stm stms
    (11) stm -> . exp
    (12) stm -> . exp PONTOVIRGULA
    (13) stm -> . s
    (48) stm -> . WHILE exp body
    (49) stm -> . WHILE exp DO body
    (50) stm -> . RETURN exp
    (51) stm -> . RETURN exp PONTOVIRGULA
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (14) s -> . s1
    (15) s -> . s2
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp
    (21) s2 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (29) s2 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (37) s2 -> . IF exp s1 ELSE s1
    (44) s2 -> . IF exp THEN s2 ELSE s2

    IF              shift and go to state 18
    WHILE           shift and go to state 8
    RETURN          shift and go to state 9
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 6
    s1                             shift and go to state 156
    stms                           shift and go to state 17
    s2                             shift and go to state 16
    stm                            shift and go to state 24
    s                              shift and go to state 7
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 155

    (29) s2 -> IF LPAREN exp RPAREN THEN s1 . ELSE s1
    (14) s -> s1 .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 157
    WHILE           reduce using rule 14 (s -> s1 .)
    RETURN          reduce using rule 14 (s -> s1 .)
    NUMBER          reduce using rule 14 (s -> s1 .)
    STRING          reduce using rule 14 (s -> s1 .)
    ID              reduce using rule 14 (s -> s1 .)
    IF              reduce using rule 14 (s -> s1 .)

  ! ELSE            [ reduce using rule 14 (s -> s1 .) ]


state 156

    (21) s2 -> IF LPAREN exp RPAREN s1 ELSE s1 .
    (14) s -> s1 .

  ! reduce/reduce conflict for WHILE resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for RETURN resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for NUMBER resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for STRING resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for ID resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for IF resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for END resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for ELSE resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for DEF resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for $end resolved using rule 14 (s -> s1 .)
    WHILE           reduce using rule 14 (s -> s1 .)
    RETURN          reduce using rule 14 (s -> s1 .)
    NUMBER          reduce using rule 14 (s -> s1 .)
    STRING          reduce using rule 14 (s -> s1 .)
    ID              reduce using rule 14 (s -> s1 .)
    IF              reduce using rule 14 (s -> s1 .)
    END             reduce using rule 14 (s -> s1 .)
    ELSE            reduce using rule 14 (s -> s1 .)
    DEF             reduce using rule 14 (s -> s1 .)
    $end            reduce using rule 14 (s -> s1 .)

  ! WHILE           [ reduce using rule 21 (s2 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]
  ! RETURN          [ reduce using rule 21 (s2 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]
  ! NUMBER          [ reduce using rule 21 (s2 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]
  ! STRING          [ reduce using rule 21 (s2 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]
  ! ID              [ reduce using rule 21 (s2 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]
  ! IF              [ reduce using rule 21 (s2 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]
  ! END             [ reduce using rule 21 (s2 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]
  ! ELSE            [ reduce using rule 21 (s2 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]
  ! DEF             [ reduce using rule 21 (s2 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]
  ! $end            [ reduce using rule 21 (s2 -> IF LPAREN exp RPAREN s1 ELSE s1 .) ]


state 157

    (29) s2 -> IF LPAREN exp RPAREN THEN s1 ELSE . s1
    (16) s1 -> . stms
    (17) s1 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (18) s1 -> . IF LPAREN exp RPAREN body ELSE body
    (19) s1 -> . IF LPAREN exp RPAREN s1 ELSE body
    (20) s1 -> . IF LPAREN exp RPAREN body ELSE s1
    (22) s1 -> . IF LPAREN exp RPAREN body
    (23) s1 -> . IF LPAREN exp RPAREN s1 ELSE s2
    (24) s1 -> . IF LPAREN exp RPAREN body ELSE s2
    (25) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (26) s1 -> . IF LPAREN exp RPAREN THEN body ELSE body
    (27) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE body
    (28) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s1
    (30) s1 -> . IF LPAREN exp RPAREN THEN body
    (31) s1 -> . IF LPAREN exp RPAREN THEN s1 ELSE s2
    (32) s1 -> . IF LPAREN exp RPAREN THEN body ELSE s2
    (33) s1 -> . IF exp s1 ELSE s1
    (34) s1 -> . IF exp body ELSE body
    (35) s1 -> . IF exp s1 ELSE body
    (36) s1 -> . IF exp body ELSE s1
    (38) s1 -> . IF exp body
    (39) s1 -> . IF exp body ELSE s2
    (40) s1 -> . IF exp THEN s1 ELSE s1
    (41) s1 -> . IF exp THEN body ELSE body
    (42) s1 -> . IF exp THEN s1 ELSE body
    (43) s1 -> . IF exp THEN body ELSE s1
    (45) s1 -> . IF exp THEN body
    (46) s1 -> . IF exp THEN s1 ELSE s2
    (47) s1 -> . IF exp THEN body ELSE s2
    (9) stms -> . stm
    (10) stms -> . stm stms
    (11) stm -> . exp
    (12) stm -> . exp PONTOVIRGULA
    (13) stm -> . s
    (48) stm -> . WHILE exp body
    (49) stm -> . WHILE exp DO body
    (50) stm -> . RETURN exp
    (51) stm -> . RETURN exp PONTOVIRGULA
    (52) exp -> . exp PLUS exp
    (53) exp -> . exp MINUS exp
    (54) exp -> . exp TIMES exp
    (55) exp -> . exp DIV exp
    (56) exp -> . exp EXPO exp
    (57) exp -> . exp REST exp
    (58) exp -> . exp TRIPLEEQ exp
    (59) exp -> . exp SMALL exp
    (60) exp -> . exp BIGGEST exp
    (61) exp -> . exp DIFF exp
    (62) exp -> . exp POINTRANGE exp
    (63) exp -> . exp SMALLEQ exp
    (64) exp -> . exp BIGGESTEQ exp
    (65) exp -> . exp BIGGSMALLEQ exp
    (66) exp -> . exp DOUBLEBAR exp
    (67) exp -> . exp DOUBLEE exp
    (68) exp -> . exp EXCLAMATION exp
    (69) exp -> . exp SIMPLEBAR exp
    (70) exp -> . exp SIMPLEE exp
    (71) exp -> . exp CIRCUMFLEX exp
    (72) exp -> . exp NEGATION exp
    (73) exp -> . exp LSHIFT exp
    (74) exp -> . exp RSHIFT exp
    (75) exp -> . call
    (76) exp -> . assign
    (77) exp -> . NUMBER
    (78) exp -> . STRING
    (79) exp -> . ID
    (80) exp -> . exp DOUBLEEQUAL exp
    (14) s -> . s1
    (15) s -> . s2
    (82) call -> . ID LPAREN params RPAREN
    (83) call -> . ID LPAREN RPAREN
    (81) assign -> . ID EQ exp
    (21) s2 -> . IF LPAREN exp RPAREN s1 ELSE s1
    (29) s2 -> . IF LPAREN exp RPAREN THEN s1 ELSE s1
    (37) s2 -> . IF exp s1 ELSE s1
    (44) s2 -> . IF exp THEN s2 ELSE s2

    IF              shift and go to state 18
    WHILE           shift and go to state 8
    RETURN          shift and go to state 9
    NUMBER          shift and go to state 13
    STRING          shift and go to state 14
    ID              shift and go to state 26

    exp                            shift and go to state 6
    s1                             shift and go to state 158
    stms                           shift and go to state 17
    s2                             shift and go to state 16
    stm                            shift and go to state 24
    s                              shift and go to state 7
    call                           shift and go to state 25
    assign                         shift and go to state 12

state 158

    (29) s2 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .
    (14) s -> s1 .

  ! reduce/reduce conflict for WHILE resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for RETURN resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for NUMBER resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for STRING resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for ID resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for IF resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for END resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for ELSE resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for DEF resolved using rule 14 (s -> s1 .)
  ! reduce/reduce conflict for $end resolved using rule 14 (s -> s1 .)
    WHILE           reduce using rule 14 (s -> s1 .)
    RETURN          reduce using rule 14 (s -> s1 .)
    NUMBER          reduce using rule 14 (s -> s1 .)
    STRING          reduce using rule 14 (s -> s1 .)
    ID              reduce using rule 14 (s -> s1 .)
    IF              reduce using rule 14 (s -> s1 .)
    END             reduce using rule 14 (s -> s1 .)
    ELSE            reduce using rule 14 (s -> s1 .)
    DEF             reduce using rule 14 (s -> s1 .)
    $end            reduce using rule 14 (s -> s1 .)

  ! WHILE           [ reduce using rule 29 (s2 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]
  ! RETURN          [ reduce using rule 29 (s2 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]
  ! NUMBER          [ reduce using rule 29 (s2 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]
  ! STRING          [ reduce using rule 29 (s2 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]
  ! ID              [ reduce using rule 29 (s2 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]
  ! IF              [ reduce using rule 29 (s2 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]
  ! END             [ reduce using rule 29 (s2 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]
  ! ELSE            [ reduce using rule 29 (s2 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]
  ! DEF             [ reduce using rule 29 (s2 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]
  ! $end            [ reduce using rule 29 (s2 -> IF LPAREN exp RPAREN THEN s1 ELSE s1 .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for WHILE in state 3 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 3 resolved as shift
WARNING: shift/reduce conflict for ID in state 3 resolved as shift
WARNING: shift/reduce conflict for DEF in state 3 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 3 resolved as shift
WARNING: shift/reduce conflict for STRING in state 3 resolved as shift
WARNING: shift/reduce conflict for IF in state 3 resolved as shift
WARNING: shift/reduce conflict for END in state 23 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 24 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 24 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 24 resolved as shift
WARNING: shift/reduce conflict for STRING in state 24 resolved as shift
WARNING: shift/reduce conflict for ID in state 24 resolved as shift
WARNING: shift/reduce conflict for IF in state 24 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 60 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 60 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 60 resolved as shift
WARNING: shift/reduce conflict for DIV in state 60 resolved as shift
WARNING: shift/reduce conflict for EXPO in state 60 resolved as shift
WARNING: shift/reduce conflict for REST in state 60 resolved as shift
WARNING: shift/reduce conflict for TRIPLEEQ in state 60 resolved as shift
WARNING: shift/reduce conflict for SMALL in state 60 resolved as shift
WARNING: shift/reduce conflict for BIGGEST in state 60 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 60 resolved as shift
WARNING: shift/reduce conflict for POINTRANGE in state 60 resolved as shift
WARNING: shift/reduce conflict for SMALLEQ in state 60 resolved as shift
WARNING: shift/reduce conflict for BIGGESTEQ in state 60 resolved as shift
WARNING: shift/reduce conflict for BIGGSMALLEQ in state 60 resolved as shift
WARNING: shift/reduce conflict for DOUBLEBAR in state 60 resolved as shift
WARNING: shift/reduce conflict for DOUBLEE in state 60 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 60 resolved as shift
WARNING: shift/reduce conflict for SIMPLEBAR in state 60 resolved as shift
WARNING: shift/reduce conflict for SIMPLEE in state 60 resolved as shift
WARNING: shift/reduce conflict for CIRCUMFLEX in state 60 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 60 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 60 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 60 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUAL in state 60 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 61 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 61 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 61 resolved as shift
WARNING: shift/reduce conflict for DIV in state 61 resolved as shift
WARNING: shift/reduce conflict for EXPO in state 61 resolved as shift
WARNING: shift/reduce conflict for REST in state 61 resolved as shift
WARNING: shift/reduce conflict for TRIPLEEQ in state 61 resolved as shift
WARNING: shift/reduce conflict for SMALL in state 61 resolved as shift
WARNING: shift/reduce conflict for BIGGEST in state 61 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 61 resolved as shift
WARNING: shift/reduce conflict for POINTRANGE in state 61 resolved as shift
WARNING: shift/reduce conflict for SMALLEQ in state 61 resolved as shift
WARNING: shift/reduce conflict for BIGGESTEQ in state 61 resolved as shift
WARNING: shift/reduce conflict for BIGGSMALLEQ in state 61 resolved as shift
WARNING: shift/reduce conflict for DOUBLEBAR in state 61 resolved as shift
WARNING: shift/reduce conflict for DOUBLEE in state 61 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 61 resolved as shift
WARNING: shift/reduce conflict for SIMPLEBAR in state 61 resolved as shift
WARNING: shift/reduce conflict for SIMPLEE in state 61 resolved as shift
WARNING: shift/reduce conflict for CIRCUMFLEX in state 61 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 61 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 61 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 61 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUAL in state 61 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 62 resolved as shift
WARNING: shift/reduce conflict for DIV in state 62 resolved as shift
WARNING: shift/reduce conflict for EXPO in state 62 resolved as shift
WARNING: shift/reduce conflict for REST in state 62 resolved as shift
WARNING: shift/reduce conflict for TRIPLEEQ in state 62 resolved as shift
WARNING: shift/reduce conflict for SMALL in state 62 resolved as shift
WARNING: shift/reduce conflict for BIGGEST in state 62 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 62 resolved as shift
WARNING: shift/reduce conflict for POINTRANGE in state 62 resolved as shift
WARNING: shift/reduce conflict for SMALLEQ in state 62 resolved as shift
WARNING: shift/reduce conflict for BIGGESTEQ in state 62 resolved as shift
WARNING: shift/reduce conflict for BIGGSMALLEQ in state 62 resolved as shift
WARNING: shift/reduce conflict for DOUBLEBAR in state 62 resolved as shift
WARNING: shift/reduce conflict for DOUBLEE in state 62 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 62 resolved as shift
WARNING: shift/reduce conflict for SIMPLEBAR in state 62 resolved as shift
WARNING: shift/reduce conflict for SIMPLEE in state 62 resolved as shift
WARNING: shift/reduce conflict for CIRCUMFLEX in state 62 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 62 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 62 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 62 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUAL in state 62 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 63 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 63 resolved as shift
WARNING: shift/reduce conflict for DIV in state 63 resolved as shift
WARNING: shift/reduce conflict for EXPO in state 63 resolved as shift
WARNING: shift/reduce conflict for REST in state 63 resolved as shift
WARNING: shift/reduce conflict for TRIPLEEQ in state 63 resolved as shift
WARNING: shift/reduce conflict for SMALL in state 63 resolved as shift
WARNING: shift/reduce conflict for BIGGEST in state 63 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 63 resolved as shift
WARNING: shift/reduce conflict for POINTRANGE in state 63 resolved as shift
WARNING: shift/reduce conflict for SMALLEQ in state 63 resolved as shift
WARNING: shift/reduce conflict for BIGGESTEQ in state 63 resolved as shift
WARNING: shift/reduce conflict for BIGGSMALLEQ in state 63 resolved as shift
WARNING: shift/reduce conflict for DOUBLEBAR in state 63 resolved as shift
WARNING: shift/reduce conflict for DOUBLEE in state 63 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 63 resolved as shift
WARNING: shift/reduce conflict for SIMPLEBAR in state 63 resolved as shift
WARNING: shift/reduce conflict for SIMPLEE in state 63 resolved as shift
WARNING: shift/reduce conflict for CIRCUMFLEX in state 63 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 63 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 63 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 63 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUAL in state 63 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 64 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 64 resolved as shift
WARNING: shift/reduce conflict for DIV in state 64 resolved as shift
WARNING: shift/reduce conflict for EXPO in state 64 resolved as shift
WARNING: shift/reduce conflict for REST in state 64 resolved as shift
WARNING: shift/reduce conflict for TRIPLEEQ in state 64 resolved as shift
WARNING: shift/reduce conflict for SMALL in state 64 resolved as shift
WARNING: shift/reduce conflict for BIGGEST in state 64 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 64 resolved as shift
WARNING: shift/reduce conflict for POINTRANGE in state 64 resolved as shift
WARNING: shift/reduce conflict for SMALLEQ in state 64 resolved as shift
WARNING: shift/reduce conflict for BIGGESTEQ in state 64 resolved as shift
WARNING: shift/reduce conflict for BIGGSMALLEQ in state 64 resolved as shift
WARNING: shift/reduce conflict for DOUBLEBAR in state 64 resolved as shift
WARNING: shift/reduce conflict for DOUBLEE in state 64 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 64 resolved as shift
WARNING: shift/reduce conflict for SIMPLEBAR in state 64 resolved as shift
WARNING: shift/reduce conflict for SIMPLEE in state 64 resolved as shift
WARNING: shift/reduce conflict for CIRCUMFLEX in state 64 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 64 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 64 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 64 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUAL in state 64 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 65 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 65 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 65 resolved as shift
WARNING: shift/reduce conflict for DIV in state 65 resolved as shift
WARNING: shift/reduce conflict for EXPO in state 65 resolved as shift
WARNING: shift/reduce conflict for REST in state 65 resolved as shift
WARNING: shift/reduce conflict for TRIPLEEQ in state 65 resolved as shift
WARNING: shift/reduce conflict for SMALL in state 65 resolved as shift
WARNING: shift/reduce conflict for BIGGEST in state 65 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 65 resolved as shift
WARNING: shift/reduce conflict for POINTRANGE in state 65 resolved as shift
WARNING: shift/reduce conflict for SMALLEQ in state 65 resolved as shift
WARNING: shift/reduce conflict for BIGGESTEQ in state 65 resolved as shift
WARNING: shift/reduce conflict for BIGGSMALLEQ in state 65 resolved as shift
WARNING: shift/reduce conflict for DOUBLEBAR in state 65 resolved as shift
WARNING: shift/reduce conflict for DOUBLEE in state 65 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 65 resolved as shift
WARNING: shift/reduce conflict for SIMPLEBAR in state 65 resolved as shift
WARNING: shift/reduce conflict for SIMPLEE in state 65 resolved as shift
WARNING: shift/reduce conflict for CIRCUMFLEX in state 65 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 65 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 65 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 65 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUAL in state 65 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 66 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 66 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 66 resolved as shift
WARNING: shift/reduce conflict for DIV in state 66 resolved as shift
WARNING: shift/reduce conflict for EXPO in state 66 resolved as shift
WARNING: shift/reduce conflict for REST in state 66 resolved as shift
WARNING: shift/reduce conflict for TRIPLEEQ in state 66 resolved as shift
WARNING: shift/reduce conflict for SMALL in state 66 resolved as shift
WARNING: shift/reduce conflict for BIGGEST in state 66 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 66 resolved as shift
WARNING: shift/reduce conflict for POINTRANGE in state 66 resolved as shift
WARNING: shift/reduce conflict for SMALLEQ in state 66 resolved as shift
WARNING: shift/reduce conflict for BIGGESTEQ in state 66 resolved as shift
WARNING: shift/reduce conflict for BIGGSMALLEQ in state 66 resolved as shift
WARNING: shift/reduce conflict for DOUBLEBAR in state 66 resolved as shift
WARNING: shift/reduce conflict for DOUBLEE in state 66 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 66 resolved as shift
WARNING: shift/reduce conflict for SIMPLEBAR in state 66 resolved as shift
WARNING: shift/reduce conflict for SIMPLEE in state 66 resolved as shift
WARNING: shift/reduce conflict for CIRCUMFLEX in state 66 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 66 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 66 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 66 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUAL in state 66 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 67 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 67 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 67 resolved as shift
WARNING: shift/reduce conflict for DIV in state 67 resolved as shift
WARNING: shift/reduce conflict for EXPO in state 67 resolved as shift
WARNING: shift/reduce conflict for REST in state 67 resolved as shift
WARNING: shift/reduce conflict for TRIPLEEQ in state 67 resolved as shift
WARNING: shift/reduce conflict for SMALL in state 67 resolved as shift
WARNING: shift/reduce conflict for BIGGEST in state 67 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 67 resolved as shift
WARNING: shift/reduce conflict for POINTRANGE in state 67 resolved as shift
WARNING: shift/reduce conflict for SMALLEQ in state 67 resolved as shift
WARNING: shift/reduce conflict for BIGGESTEQ in state 67 resolved as shift
WARNING: shift/reduce conflict for BIGGSMALLEQ in state 67 resolved as shift
WARNING: shift/reduce conflict for DOUBLEBAR in state 67 resolved as shift
WARNING: shift/reduce conflict for DOUBLEE in state 67 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 67 resolved as shift
WARNING: shift/reduce conflict for SIMPLEBAR in state 67 resolved as shift
WARNING: shift/reduce conflict for SIMPLEE in state 67 resolved as shift
WARNING: shift/reduce conflict for CIRCUMFLEX in state 67 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 67 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 67 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 67 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUAL in state 67 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 68 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 68 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 68 resolved as shift
WARNING: shift/reduce conflict for DIV in state 68 resolved as shift
WARNING: shift/reduce conflict for EXPO in state 68 resolved as shift
WARNING: shift/reduce conflict for REST in state 68 resolved as shift
WARNING: shift/reduce conflict for TRIPLEEQ in state 68 resolved as shift
WARNING: shift/reduce conflict for SMALL in state 68 resolved as shift
WARNING: shift/reduce conflict for BIGGEST in state 68 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 68 resolved as shift
WARNING: shift/reduce conflict for POINTRANGE in state 68 resolved as shift
WARNING: shift/reduce conflict for SMALLEQ in state 68 resolved as shift
WARNING: shift/reduce conflict for BIGGESTEQ in state 68 resolved as shift
WARNING: shift/reduce conflict for BIGGSMALLEQ in state 68 resolved as shift
WARNING: shift/reduce conflict for DOUBLEBAR in state 68 resolved as shift
WARNING: shift/reduce conflict for DOUBLEE in state 68 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 68 resolved as shift
WARNING: shift/reduce conflict for SIMPLEBAR in state 68 resolved as shift
WARNING: shift/reduce conflict for SIMPLEE in state 68 resolved as shift
WARNING: shift/reduce conflict for CIRCUMFLEX in state 68 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 68 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 68 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 68 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUAL in state 68 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 69 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 69 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 69 resolved as shift
WARNING: shift/reduce conflict for DIV in state 69 resolved as shift
WARNING: shift/reduce conflict for EXPO in state 69 resolved as shift
WARNING: shift/reduce conflict for REST in state 69 resolved as shift
WARNING: shift/reduce conflict for TRIPLEEQ in state 69 resolved as shift
WARNING: shift/reduce conflict for SMALL in state 69 resolved as shift
WARNING: shift/reduce conflict for BIGGEST in state 69 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 69 resolved as shift
WARNING: shift/reduce conflict for POINTRANGE in state 69 resolved as shift
WARNING: shift/reduce conflict for SMALLEQ in state 69 resolved as shift
WARNING: shift/reduce conflict for BIGGESTEQ in state 69 resolved as shift
WARNING: shift/reduce conflict for BIGGSMALLEQ in state 69 resolved as shift
WARNING: shift/reduce conflict for DOUBLEBAR in state 69 resolved as shift
WARNING: shift/reduce conflict for DOUBLEE in state 69 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 69 resolved as shift
WARNING: shift/reduce conflict for SIMPLEBAR in state 69 resolved as shift
WARNING: shift/reduce conflict for SIMPLEE in state 69 resolved as shift
WARNING: shift/reduce conflict for CIRCUMFLEX in state 69 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 69 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 69 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 69 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 70 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 70 resolved as shift
WARNING: shift/reduce conflict for DIV in state 70 resolved as shift
WARNING: shift/reduce conflict for EXPO in state 70 resolved as shift
WARNING: shift/reduce conflict for REST in state 70 resolved as shift
WARNING: shift/reduce conflict for TRIPLEEQ in state 70 resolved as shift
WARNING: shift/reduce conflict for SMALL in state 70 resolved as shift
WARNING: shift/reduce conflict for BIGGEST in state 70 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 70 resolved as shift
WARNING: shift/reduce conflict for POINTRANGE in state 70 resolved as shift
WARNING: shift/reduce conflict for SMALLEQ in state 70 resolved as shift
WARNING: shift/reduce conflict for BIGGESTEQ in state 70 resolved as shift
WARNING: shift/reduce conflict for BIGGSMALLEQ in state 70 resolved as shift
WARNING: shift/reduce conflict for DOUBLEBAR in state 70 resolved as shift
WARNING: shift/reduce conflict for DOUBLEE in state 70 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 70 resolved as shift
WARNING: shift/reduce conflict for SIMPLEBAR in state 70 resolved as shift
WARNING: shift/reduce conflict for SIMPLEE in state 70 resolved as shift
WARNING: shift/reduce conflict for CIRCUMFLEX in state 70 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 70 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 70 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 70 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUAL in state 70 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 71 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 71 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 71 resolved as shift
WARNING: shift/reduce conflict for DIV in state 71 resolved as shift
WARNING: shift/reduce conflict for EXPO in state 71 resolved as shift
WARNING: shift/reduce conflict for REST in state 71 resolved as shift
WARNING: shift/reduce conflict for TRIPLEEQ in state 71 resolved as shift
WARNING: shift/reduce conflict for SMALL in state 71 resolved as shift
WARNING: shift/reduce conflict for BIGGEST in state 71 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 71 resolved as shift
WARNING: shift/reduce conflict for POINTRANGE in state 71 resolved as shift
WARNING: shift/reduce conflict for SMALLEQ in state 71 resolved as shift
WARNING: shift/reduce conflict for BIGGESTEQ in state 71 resolved as shift
WARNING: shift/reduce conflict for BIGGSMALLEQ in state 71 resolved as shift
WARNING: shift/reduce conflict for DOUBLEBAR in state 71 resolved as shift
WARNING: shift/reduce conflict for DOUBLEE in state 71 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 71 resolved as shift
WARNING: shift/reduce conflict for SIMPLEBAR in state 71 resolved as shift
WARNING: shift/reduce conflict for SIMPLEE in state 71 resolved as shift
WARNING: shift/reduce conflict for CIRCUMFLEX in state 71 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 71 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 71 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 71 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUAL in state 71 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 72 resolved as shift
WARNING: shift/reduce conflict for DIV in state 72 resolved as shift
WARNING: shift/reduce conflict for EXPO in state 72 resolved as shift
WARNING: shift/reduce conflict for REST in state 72 resolved as shift
WARNING: shift/reduce conflict for TRIPLEEQ in state 72 resolved as shift
WARNING: shift/reduce conflict for SMALL in state 72 resolved as shift
WARNING: shift/reduce conflict for BIGGEST in state 72 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 72 resolved as shift
WARNING: shift/reduce conflict for POINTRANGE in state 72 resolved as shift
WARNING: shift/reduce conflict for SMALLEQ in state 72 resolved as shift
WARNING: shift/reduce conflict for BIGGESTEQ in state 72 resolved as shift
WARNING: shift/reduce conflict for BIGGSMALLEQ in state 72 resolved as shift
WARNING: shift/reduce conflict for DOUBLEBAR in state 72 resolved as shift
WARNING: shift/reduce conflict for DOUBLEE in state 72 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 72 resolved as shift
WARNING: shift/reduce conflict for SIMPLEBAR in state 72 resolved as shift
WARNING: shift/reduce conflict for SIMPLEE in state 72 resolved as shift
WARNING: shift/reduce conflict for CIRCUMFLEX in state 72 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 72 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 72 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 72 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUAL in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 73 resolved as shift
WARNING: shift/reduce conflict for DIV in state 73 resolved as shift
WARNING: shift/reduce conflict for EXPO in state 73 resolved as shift
WARNING: shift/reduce conflict for REST in state 73 resolved as shift
WARNING: shift/reduce conflict for TRIPLEEQ in state 73 resolved as shift
WARNING: shift/reduce conflict for SMALL in state 73 resolved as shift
WARNING: shift/reduce conflict for BIGGEST in state 73 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 73 resolved as shift
WARNING: shift/reduce conflict for POINTRANGE in state 73 resolved as shift
WARNING: shift/reduce conflict for SMALLEQ in state 73 resolved as shift
WARNING: shift/reduce conflict for BIGGESTEQ in state 73 resolved as shift
WARNING: shift/reduce conflict for BIGGSMALLEQ in state 73 resolved as shift
WARNING: shift/reduce conflict for DOUBLEBAR in state 73 resolved as shift
WARNING: shift/reduce conflict for DOUBLEE in state 73 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 73 resolved as shift
WARNING: shift/reduce conflict for SIMPLEBAR in state 73 resolved as shift
WARNING: shift/reduce conflict for SIMPLEE in state 73 resolved as shift
WARNING: shift/reduce conflict for CIRCUMFLEX in state 73 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 73 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 73 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 73 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUAL in state 73 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 74 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 74 resolved as shift
WARNING: shift/reduce conflict for DIV in state 74 resolved as shift
WARNING: shift/reduce conflict for EXPO in state 74 resolved as shift
WARNING: shift/reduce conflict for REST in state 74 resolved as shift
WARNING: shift/reduce conflict for TRIPLEEQ in state 74 resolved as shift
WARNING: shift/reduce conflict for SMALL in state 74 resolved as shift
WARNING: shift/reduce conflict for BIGGEST in state 74 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 74 resolved as shift
WARNING: shift/reduce conflict for POINTRANGE in state 74 resolved as shift
WARNING: shift/reduce conflict for SMALLEQ in state 74 resolved as shift
WARNING: shift/reduce conflict for BIGGESTEQ in state 74 resolved as shift
WARNING: shift/reduce conflict for BIGGSMALLEQ in state 74 resolved as shift
WARNING: shift/reduce conflict for DOUBLEBAR in state 74 resolved as shift
WARNING: shift/reduce conflict for DOUBLEE in state 74 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 74 resolved as shift
WARNING: shift/reduce conflict for SIMPLEBAR in state 74 resolved as shift
WARNING: shift/reduce conflict for SIMPLEE in state 74 resolved as shift
WARNING: shift/reduce conflict for CIRCUMFLEX in state 74 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 74 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 74 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 74 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUAL in state 74 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 75 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 75 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 75 resolved as shift
WARNING: shift/reduce conflict for DIV in state 75 resolved as shift
WARNING: shift/reduce conflict for EXPO in state 75 resolved as shift
WARNING: shift/reduce conflict for REST in state 75 resolved as shift
WARNING: shift/reduce conflict for TRIPLEEQ in state 75 resolved as shift
WARNING: shift/reduce conflict for SMALL in state 75 resolved as shift
WARNING: shift/reduce conflict for BIGGEST in state 75 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 75 resolved as shift
WARNING: shift/reduce conflict for POINTRANGE in state 75 resolved as shift
WARNING: shift/reduce conflict for SMALLEQ in state 75 resolved as shift
WARNING: shift/reduce conflict for BIGGESTEQ in state 75 resolved as shift
WARNING: shift/reduce conflict for BIGGSMALLEQ in state 75 resolved as shift
WARNING: shift/reduce conflict for DOUBLEBAR in state 75 resolved as shift
WARNING: shift/reduce conflict for DOUBLEE in state 75 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 75 resolved as shift
WARNING: shift/reduce conflict for SIMPLEBAR in state 75 resolved as shift
WARNING: shift/reduce conflict for SIMPLEE in state 75 resolved as shift
WARNING: shift/reduce conflict for CIRCUMFLEX in state 75 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 75 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 75 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 75 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUAL in state 75 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 76 resolved as shift
WARNING: shift/reduce conflict for DIV in state 76 resolved as shift
WARNING: shift/reduce conflict for EXPO in state 76 resolved as shift
WARNING: shift/reduce conflict for REST in state 76 resolved as shift
WARNING: shift/reduce conflict for TRIPLEEQ in state 76 resolved as shift
WARNING: shift/reduce conflict for SMALL in state 76 resolved as shift
WARNING: shift/reduce conflict for BIGGEST in state 76 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 76 resolved as shift
WARNING: shift/reduce conflict for POINTRANGE in state 76 resolved as shift
WARNING: shift/reduce conflict for SMALLEQ in state 76 resolved as shift
WARNING: shift/reduce conflict for BIGGESTEQ in state 76 resolved as shift
WARNING: shift/reduce conflict for BIGGSMALLEQ in state 76 resolved as shift
WARNING: shift/reduce conflict for DOUBLEBAR in state 76 resolved as shift
WARNING: shift/reduce conflict for DOUBLEE in state 76 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 76 resolved as shift
WARNING: shift/reduce conflict for SIMPLEBAR in state 76 resolved as shift
WARNING: shift/reduce conflict for SIMPLEE in state 76 resolved as shift
WARNING: shift/reduce conflict for CIRCUMFLEX in state 76 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 76 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 76 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 76 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUAL in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 77 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 77 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 77 resolved as shift
WARNING: shift/reduce conflict for DIV in state 77 resolved as shift
WARNING: shift/reduce conflict for EXPO in state 77 resolved as shift
WARNING: shift/reduce conflict for REST in state 77 resolved as shift
WARNING: shift/reduce conflict for TRIPLEEQ in state 77 resolved as shift
WARNING: shift/reduce conflict for SMALL in state 77 resolved as shift
WARNING: shift/reduce conflict for BIGGEST in state 77 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 77 resolved as shift
WARNING: shift/reduce conflict for POINTRANGE in state 77 resolved as shift
WARNING: shift/reduce conflict for SMALLEQ in state 77 resolved as shift
WARNING: shift/reduce conflict for BIGGESTEQ in state 77 resolved as shift
WARNING: shift/reduce conflict for BIGGSMALLEQ in state 77 resolved as shift
WARNING: shift/reduce conflict for DOUBLEBAR in state 77 resolved as shift
WARNING: shift/reduce conflict for DOUBLEE in state 77 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 77 resolved as shift
WARNING: shift/reduce conflict for SIMPLEBAR in state 77 resolved as shift
WARNING: shift/reduce conflict for SIMPLEE in state 77 resolved as shift
WARNING: shift/reduce conflict for CIRCUMFLEX in state 77 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 77 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 77 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 77 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUAL in state 77 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 78 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 78 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 78 resolved as shift
WARNING: shift/reduce conflict for DIV in state 78 resolved as shift
WARNING: shift/reduce conflict for EXPO in state 78 resolved as shift
WARNING: shift/reduce conflict for REST in state 78 resolved as shift
WARNING: shift/reduce conflict for TRIPLEEQ in state 78 resolved as shift
WARNING: shift/reduce conflict for SMALL in state 78 resolved as shift
WARNING: shift/reduce conflict for BIGGEST in state 78 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 78 resolved as shift
WARNING: shift/reduce conflict for POINTRANGE in state 78 resolved as shift
WARNING: shift/reduce conflict for SMALLEQ in state 78 resolved as shift
WARNING: shift/reduce conflict for BIGGESTEQ in state 78 resolved as shift
WARNING: shift/reduce conflict for BIGGSMALLEQ in state 78 resolved as shift
WARNING: shift/reduce conflict for DOUBLEBAR in state 78 resolved as shift
WARNING: shift/reduce conflict for DOUBLEE in state 78 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 78 resolved as shift
WARNING: shift/reduce conflict for SIMPLEBAR in state 78 resolved as shift
WARNING: shift/reduce conflict for SIMPLEE in state 78 resolved as shift
WARNING: shift/reduce conflict for CIRCUMFLEX in state 78 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 78 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 78 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 78 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUAL in state 78 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 79 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 79 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 79 resolved as shift
WARNING: shift/reduce conflict for DIV in state 79 resolved as shift
WARNING: shift/reduce conflict for EXPO in state 79 resolved as shift
WARNING: shift/reduce conflict for REST in state 79 resolved as shift
WARNING: shift/reduce conflict for TRIPLEEQ in state 79 resolved as shift
WARNING: shift/reduce conflict for SMALL in state 79 resolved as shift
WARNING: shift/reduce conflict for BIGGEST in state 79 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 79 resolved as shift
WARNING: shift/reduce conflict for POINTRANGE in state 79 resolved as shift
WARNING: shift/reduce conflict for SMALLEQ in state 79 resolved as shift
WARNING: shift/reduce conflict for BIGGESTEQ in state 79 resolved as shift
WARNING: shift/reduce conflict for BIGGSMALLEQ in state 79 resolved as shift
WARNING: shift/reduce conflict for DOUBLEBAR in state 79 resolved as shift
WARNING: shift/reduce conflict for DOUBLEE in state 79 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 79 resolved as shift
WARNING: shift/reduce conflict for SIMPLEBAR in state 79 resolved as shift
WARNING: shift/reduce conflict for SIMPLEE in state 79 resolved as shift
WARNING: shift/reduce conflict for CIRCUMFLEX in state 79 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 79 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 79 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 79 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUAL in state 79 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 80 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 80 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 80 resolved as shift
WARNING: shift/reduce conflict for DIV in state 80 resolved as shift
WARNING: shift/reduce conflict for EXPO in state 80 resolved as shift
WARNING: shift/reduce conflict for REST in state 80 resolved as shift
WARNING: shift/reduce conflict for TRIPLEEQ in state 80 resolved as shift
WARNING: shift/reduce conflict for SMALL in state 80 resolved as shift
WARNING: shift/reduce conflict for BIGGEST in state 80 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 80 resolved as shift
WARNING: shift/reduce conflict for POINTRANGE in state 80 resolved as shift
WARNING: shift/reduce conflict for SMALLEQ in state 80 resolved as shift
WARNING: shift/reduce conflict for BIGGESTEQ in state 80 resolved as shift
WARNING: shift/reduce conflict for BIGGSMALLEQ in state 80 resolved as shift
WARNING: shift/reduce conflict for DOUBLEBAR in state 80 resolved as shift
WARNING: shift/reduce conflict for DOUBLEE in state 80 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 80 resolved as shift
WARNING: shift/reduce conflict for SIMPLEBAR in state 80 resolved as shift
WARNING: shift/reduce conflict for SIMPLEE in state 80 resolved as shift
WARNING: shift/reduce conflict for CIRCUMFLEX in state 80 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 80 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 80 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 80 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUAL in state 80 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 81 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 81 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 81 resolved as shift
WARNING: shift/reduce conflict for DIV in state 81 resolved as shift
WARNING: shift/reduce conflict for EXPO in state 81 resolved as shift
WARNING: shift/reduce conflict for REST in state 81 resolved as shift
WARNING: shift/reduce conflict for TRIPLEEQ in state 81 resolved as shift
WARNING: shift/reduce conflict for SMALL in state 81 resolved as shift
WARNING: shift/reduce conflict for BIGGEST in state 81 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 81 resolved as shift
WARNING: shift/reduce conflict for POINTRANGE in state 81 resolved as shift
WARNING: shift/reduce conflict for SMALLEQ in state 81 resolved as shift
WARNING: shift/reduce conflict for BIGGESTEQ in state 81 resolved as shift
WARNING: shift/reduce conflict for BIGGSMALLEQ in state 81 resolved as shift
WARNING: shift/reduce conflict for DOUBLEBAR in state 81 resolved as shift
WARNING: shift/reduce conflict for DOUBLEE in state 81 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 81 resolved as shift
WARNING: shift/reduce conflict for SIMPLEBAR in state 81 resolved as shift
WARNING: shift/reduce conflict for SIMPLEE in state 81 resolved as shift
WARNING: shift/reduce conflict for CIRCUMFLEX in state 81 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 81 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 81 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 81 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUAL in state 81 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 82 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 82 resolved as shift
WARNING: shift/reduce conflict for DIV in state 82 resolved as shift
WARNING: shift/reduce conflict for EXPO in state 82 resolved as shift
WARNING: shift/reduce conflict for REST in state 82 resolved as shift
WARNING: shift/reduce conflict for TRIPLEEQ in state 82 resolved as shift
WARNING: shift/reduce conflict for SMALL in state 82 resolved as shift
WARNING: shift/reduce conflict for BIGGEST in state 82 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 82 resolved as shift
WARNING: shift/reduce conflict for POINTRANGE in state 82 resolved as shift
WARNING: shift/reduce conflict for SMALLEQ in state 82 resolved as shift
WARNING: shift/reduce conflict for BIGGESTEQ in state 82 resolved as shift
WARNING: shift/reduce conflict for BIGGSMALLEQ in state 82 resolved as shift
WARNING: shift/reduce conflict for DOUBLEBAR in state 82 resolved as shift
WARNING: shift/reduce conflict for DOUBLEE in state 82 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 82 resolved as shift
WARNING: shift/reduce conflict for SIMPLEBAR in state 82 resolved as shift
WARNING: shift/reduce conflict for SIMPLEE in state 82 resolved as shift
WARNING: shift/reduce conflict for CIRCUMFLEX in state 82 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 82 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 82 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 82 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUAL in state 82 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 83 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 83 resolved as shift
WARNING: shift/reduce conflict for DIV in state 83 resolved as shift
WARNING: shift/reduce conflict for EXPO in state 83 resolved as shift
WARNING: shift/reduce conflict for REST in state 83 resolved as shift
WARNING: shift/reduce conflict for TRIPLEEQ in state 83 resolved as shift
WARNING: shift/reduce conflict for SMALL in state 83 resolved as shift
WARNING: shift/reduce conflict for BIGGEST in state 83 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 83 resolved as shift
WARNING: shift/reduce conflict for POINTRANGE in state 83 resolved as shift
WARNING: shift/reduce conflict for SMALLEQ in state 83 resolved as shift
WARNING: shift/reduce conflict for BIGGESTEQ in state 83 resolved as shift
WARNING: shift/reduce conflict for BIGGSMALLEQ in state 83 resolved as shift
WARNING: shift/reduce conflict for DOUBLEBAR in state 83 resolved as shift
WARNING: shift/reduce conflict for DOUBLEE in state 83 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 83 resolved as shift
WARNING: shift/reduce conflict for SIMPLEBAR in state 83 resolved as shift
WARNING: shift/reduce conflict for SIMPLEE in state 83 resolved as shift
WARNING: shift/reduce conflict for CIRCUMFLEX in state 83 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 83 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 83 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 83 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUAL in state 83 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 90 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 90 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 90 resolved as shift
WARNING: shift/reduce conflict for DIV in state 90 resolved as shift
WARNING: shift/reduce conflict for EXPO in state 90 resolved as shift
WARNING: shift/reduce conflict for REST in state 90 resolved as shift
WARNING: shift/reduce conflict for TRIPLEEQ in state 90 resolved as shift
WARNING: shift/reduce conflict for SMALL in state 90 resolved as shift
WARNING: shift/reduce conflict for BIGGEST in state 90 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 90 resolved as shift
WARNING: shift/reduce conflict for POINTRANGE in state 90 resolved as shift
WARNING: shift/reduce conflict for SMALLEQ in state 90 resolved as shift
WARNING: shift/reduce conflict for BIGGESTEQ in state 90 resolved as shift
WARNING: shift/reduce conflict for BIGGSMALLEQ in state 90 resolved as shift
WARNING: shift/reduce conflict for DOUBLEBAR in state 90 resolved as shift
WARNING: shift/reduce conflict for DOUBLEE in state 90 resolved as shift
WARNING: shift/reduce conflict for EXCLAMATION in state 90 resolved as shift
WARNING: shift/reduce conflict for SIMPLEBAR in state 90 resolved as shift
WARNING: shift/reduce conflict for SIMPLEE in state 90 resolved as shift
WARNING: shift/reduce conflict for CIRCUMFLEX in state 90 resolved as shift
WARNING: shift/reduce conflict for NEGATION in state 90 resolved as shift
WARNING: shift/reduce conflict for LSHIFT in state 90 resolved as shift
WARNING: shift/reduce conflict for RSHIFT in state 90 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUAL in state 90 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 92 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 93 resolved as shift
WARNING: shift/reduce conflict for END in state 95 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 102 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 103 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 104 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 106 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 107 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 119 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 120 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 146 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 151 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 155 resolved as shift
WARNING: reduce/reduce conflict in state 3 resolved using rule (program -> stm)
WARNING: rejected rule (stms -> stm) in state 3
WARNING: reduce/reduce conflict in state 4 resolved using rule (program -> call)
WARNING: rejected rule (exp -> call) in state 4
WARNING: reduce/reduce conflict in state 21 resolved using rule (stms -> stm stms)
WARNING: rejected rule (s1 -> stms) in state 21
WARNING: reduce/reduce conflict in state 109 resolved using rule (s1 -> IF exp s1 ELSE s1)
WARNING: rejected rule (s2 -> IF exp s1 ELSE s1) in state 109
WARNING: reduce/reduce conflict in state 109 resolved using rule (s -> s1)
WARNING: rejected rule (s1 -> IF exp s1 ELSE s1) in state 109
WARNING: reduce/reduce conflict in state 112 resolved using rule (s -> s1)
WARNING: rejected rule (s1 -> IF exp body ELSE s1) in state 112
WARNING: reduce/reduce conflict in state 113 resolved using rule (s -> s2)
WARNING: rejected rule (s1 -> IF exp body ELSE s2) in state 113
WARNING: reduce/reduce conflict in state 121 resolved using rule (s -> s1)
WARNING: rejected rule (s1 -> IF exp THEN s1 ELSE s1) in state 121
WARNING: reduce/reduce conflict in state 123 resolved using rule (s -> s2)
WARNING: rejected rule (s1 -> IF exp THEN s1 ELSE s2) in state 123
WARNING: reduce/reduce conflict in state 125 resolved using rule (s -> s1)
WARNING: rejected rule (s1 -> IF exp THEN body ELSE s1) in state 125
WARNING: reduce/reduce conflict in state 126 resolved using rule (s -> s2)
WARNING: rejected rule (s1 -> IF exp THEN body ELSE s2) in state 126
WARNING: reduce/reduce conflict in state 129 resolved using rule (s1 -> IF LPAREN exp RPAREN s1 ELSE s1)
WARNING: rejected rule (s2 -> IF LPAREN exp RPAREN s1 ELSE s1) in state 129
WARNING: reduce/reduce conflict in state 129 resolved using rule (s -> s1)
WARNING: rejected rule (s1 -> IF LPAREN exp RPAREN s1 ELSE s1) in state 129
WARNING: reduce/reduce conflict in state 131 resolved using rule (s -> s2)
WARNING: rejected rule (s1 -> IF LPAREN exp RPAREN s1 ELSE s2) in state 131
WARNING: reduce/reduce conflict in state 133 resolved using rule (s -> s1)
WARNING: rejected rule (s1 -> IF LPAREN exp RPAREN body ELSE s1) in state 133
WARNING: reduce/reduce conflict in state 134 resolved using rule (s -> s2)
WARNING: rejected rule (s1 -> IF LPAREN exp RPAREN body ELSE s2) in state 134
WARNING: reduce/reduce conflict in state 139 resolved using rule (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s1)
WARNING: rejected rule (s2 -> IF LPAREN exp RPAREN THEN s1 ELSE s1) in state 139
WARNING: reduce/reduce conflict in state 139 resolved using rule (s -> s1)
WARNING: rejected rule (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s1) in state 139
WARNING: reduce/reduce conflict in state 141 resolved using rule (s -> s2)
WARNING: rejected rule (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s2) in state 141
WARNING: reduce/reduce conflict in state 143 resolved using rule (s -> s1)
WARNING: rejected rule (s1 -> IF LPAREN exp RPAREN THEN body ELSE s1) in state 143
WARNING: reduce/reduce conflict in state 144 resolved using rule (s -> s2)
WARNING: rejected rule (s1 -> IF LPAREN exp RPAREN THEN body ELSE s2) in state 144
WARNING: reduce/reduce conflict in state 153 resolved using rule (s -> s1)
WARNING: rejected rule (s2 -> IF exp s1 ELSE s1) in state 153
WARNING: reduce/reduce conflict in state 156 resolved using rule (s -> s1)
WARNING: rejected rule (s2 -> IF LPAREN exp RPAREN s1 ELSE s1) in state 156
WARNING: reduce/reduce conflict in state 158 resolved using rule (s -> s1)
WARNING: rejected rule (s2 -> IF LPAREN exp RPAREN THEN s1 ELSE s1) in state 158
WARNING: Rule (s2 -> IF exp s1 ELSE s1) is never reduced
WARNING: Rule (s1 -> IF exp s1 ELSE s1) is never reduced
WARNING: Rule (s1 -> IF exp body ELSE s1) is never reduced
WARNING: Rule (s1 -> IF exp body ELSE s2) is never reduced
WARNING: Rule (s1 -> IF exp THEN s1 ELSE s1) is never reduced
WARNING: Rule (s1 -> IF exp THEN s1 ELSE s2) is never reduced
WARNING: Rule (s1 -> IF exp THEN body ELSE s1) is never reduced
WARNING: Rule (s1 -> IF exp THEN body ELSE s2) is never reduced
WARNING: Rule (s2 -> IF LPAREN exp RPAREN s1 ELSE s1) is never reduced
WARNING: Rule (s1 -> IF LPAREN exp RPAREN s1 ELSE s1) is never reduced
WARNING: Rule (s1 -> IF LPAREN exp RPAREN s1 ELSE s2) is never reduced
WARNING: Rule (s1 -> IF LPAREN exp RPAREN body ELSE s1) is never reduced
WARNING: Rule (s1 -> IF LPAREN exp RPAREN body ELSE s2) is never reduced
WARNING: Rule (s2 -> IF LPAREN exp RPAREN THEN s1 ELSE s1) is never reduced
WARNING: Rule (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s1) is never reduced
WARNING: Rule (s1 -> IF LPAREN exp RPAREN THEN s1 ELSE s2) is never reduced
WARNING: Rule (s1 -> IF LPAREN exp RPAREN THEN body ELSE s1) is never reduced
WARNING: Rule (s1 -> IF LPAREN exp RPAREN THEN body ELSE s2) is never reduced
